{
  "metadata": {
    "toolPackage": "@microsoft/api-extractor",
    "toolVersion": "7.52.8",
    "schemaVersion": 1011,
    "oldestForwardsCompatibleVersion": 1001,
    "tsdocConfig": {
      "$schema": "https://developer.microsoft.com/json-schemas/tsdoc/v0/tsdoc.schema.json",
      "noStandardTags": true,
      "tagDefinitions": [
        {
          "tagName": "@alpha",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@beta",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@defaultValue",
          "syntaxKind": "block"
        },
        {
          "tagName": "@decorator",
          "syntaxKind": "block",
          "allowMultiple": true
        },
        {
          "tagName": "@deprecated",
          "syntaxKind": "block"
        },
        {
          "tagName": "@eventProperty",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@example",
          "syntaxKind": "block",
          "allowMultiple": true
        },
        {
          "tagName": "@experimental",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@inheritDoc",
          "syntaxKind": "inline"
        },
        {
          "tagName": "@internal",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@label",
          "syntaxKind": "inline"
        },
        {
          "tagName": "@link",
          "syntaxKind": "inline",
          "allowMultiple": true
        },
        {
          "tagName": "@override",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@packageDocumentation",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@param",
          "syntaxKind": "block",
          "allowMultiple": true
        },
        {
          "tagName": "@privateRemarks",
          "syntaxKind": "block"
        },
        {
          "tagName": "@public",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@readonly",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@remarks",
          "syntaxKind": "block"
        },
        {
          "tagName": "@returns",
          "syntaxKind": "block"
        },
        {
          "tagName": "@sealed",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@see",
          "syntaxKind": "block"
        },
        {
          "tagName": "@throws",
          "syntaxKind": "block",
          "allowMultiple": true
        },
        {
          "tagName": "@typeParam",
          "syntaxKind": "block",
          "allowMultiple": true
        },
        {
          "tagName": "@virtual",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@betaDocumentation",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@internalRemarks",
          "syntaxKind": "block"
        },
        {
          "tagName": "@preapproved",
          "syntaxKind": "modifier"
        }
      ],
      "supportForTags": {
        "@alpha": true,
        "@beta": true,
        "@defaultValue": true,
        "@decorator": true,
        "@deprecated": true,
        "@eventProperty": true,
        "@example": true,
        "@experimental": true,
        "@inheritDoc": true,
        "@internal": true,
        "@label": true,
        "@link": true,
        "@override": true,
        "@packageDocumentation": true,
        "@param": true,
        "@privateRemarks": true,
        "@public": true,
        "@readonly": true,
        "@remarks": true,
        "@returns": true,
        "@sealed": true,
        "@see": true,
        "@throws": true,
        "@typeParam": true,
        "@virtual": true,
        "@betaDocumentation": true,
        "@internalRemarks": true,
        "@preapproved": true
      },
      "reportUnsupportedHtmlElements": false
    }
  },
  "projectFolderUrl": "https://github.com/xpack/doxygen2docusaurus-ts/tree/development",
  "kind": "Package",
  "canonicalReference": "@xpack/doxygen2docusaurus!",
  "docComment": "/**\n * A CLI application to convert Doxygen XML files into Docusaurus documentation.\n *\n * @remarks\n *\n * This tool facilitates the integration of Doxygen reference pages into Docusaurus documentation sites. It parses Doxygen-generated XML files and produces Docusaurus `.md` documents, along with the corresponding sidebars and menu entries.\n *\n * @packageDocumentation\n */\n",
  "name": "@xpack/doxygen2docusaurus",
  "preserveMemberOrder": false,
  "members": [
    {
      "kind": "EntryPoint",
      "canonicalReference": "@xpack/doxygen2docusaurus!",
      "name": "",
      "preserveMemberOrder": false,
      "members": [
        {
          "kind": "Class",
          "canonicalReference": "@xpack/doxygen2docusaurus!AbstractCodeLineType:class",
          "docComment": "/**\n * Abstract base class for code line elements with syntax highlighting support.\n *\n * @remarks\n *\n * Implements the XML Schema definition for codelineType elements, which represent individual lines of source code within program listings. Each code line may contain syntax highlighting information, line numbers, cross-references to documentation elements, and external link indicators.\n *\n * All attributes are optional according to the schema, allowing for flexible representation of code content ranging from simple text lines to fully annotated source code with comprehensive metadata.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare abstract class AbstractCodeLineType extends "
            },
            {
              "kind": "Reference",
              "text": "AbstractDataModelBase",
              "canonicalReference": "@xpack/doxygen2docusaurus!AbstractDataModelBase:class"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "src/doxygen/data-model/compounds/descriptiontype-dm.ts",
          "releaseTag": "Public",
          "isAbstract": true,
          "name": "AbstractCodeLineType",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Constructor",
              "canonicalReference": "@xpack/doxygen2docusaurus!AbstractCodeLineType:constructor(1)",
              "docComment": "/**\n * Constructs an AbstractCodeLineType instance from XML element data.\n *\n * @remarks\n *\n * This constructor processes code line elements by extracting highlight children and optional attributes including line numbers, reference IDs, reference kinds, and external flags. The parser handles empty code lines gracefully whilst ignoring textual content that may appear between structured highlight elements.\n *\n * @param xml - The Doxygen XML parser instance for processing XML content\n *\n * @param element - The XML element object containing the code line data\n *\n * @param elementName - The name of the XML element being processed\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor(xml: "
                },
                {
                  "kind": "Reference",
                  "text": "DoxygenXmlParser",
                  "canonicalReference": "@xpack/doxygen2docusaurus!DoxygenXmlParser:class"
                },
                {
                  "kind": "Content",
                  "text": ", element: "
                },
                {
                  "kind": "Content",
                  "text": "object"
                },
                {
                  "kind": "Content",
                  "text": ", elementName: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "xml",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "element",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "elementName",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  },
                  "isOptional": false
                }
              ]
            },
            {
              "kind": "Property",
              "canonicalReference": "@xpack/doxygen2docusaurus!AbstractCodeLineType#external:member",
              "docComment": "/**\n * Optional flag indicating external reference status.\n *\n * @remarks\n *\n * When true, indicates that the reference points to an external documentation source rather than an element within the current documentation set. This flag influences link generation and navigation behaviour.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "external?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean | undefined"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "external",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@xpack/doxygen2docusaurus!AbstractCodeLineType#highlights:member",
              "docComment": "/**\n * Array of syntax highlighting elements within the code line.\n *\n * @remarks\n *\n * Contains highlight elements that provide syntax colouring information for different parts of the code line. Each highlight element specifies a highlight class (such as keyword, comment, or string literal) and the corresponding text content to be styled.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "highlights?: "
                },
                {
                  "kind": "Reference",
                  "text": "HighlightDataModel",
                  "canonicalReference": "@xpack/doxygen2docusaurus!HighlightDataModel:class"
                },
                {
                  "kind": "Content",
                  "text": "[] | undefined"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "highlights",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@xpack/doxygen2docusaurus!AbstractCodeLineType#lineno:member",
              "docComment": "/**\n * Optional line number for the code line.\n *\n * @remarks\n *\n * Specifies the line number of this code line within the source file. This attribute enables line-based navigation and referencing within the documentation system.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "lineno?: "
                },
                {
                  "kind": "Content",
                  "text": "number | undefined"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "lineno",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@xpack/doxygen2docusaurus!AbstractCodeLineType#refid:member",
              "docComment": "/**\n * Optional reference identifier for cross-linking.\n *\n * @remarks\n *\n * Contains a reference ID that can be used to create hyperlinks to related documentation elements such as function definitions, variable declarations, or other documented entities.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "refid?: "
                },
                {
                  "kind": "Content",
                  "text": "string | undefined"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "refid",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@xpack/doxygen2docusaurus!AbstractCodeLineType#refkind:member",
              "docComment": "/**\n * Optional reference kind classification.\n *\n * @remarks\n *\n * Specifies the type of reference represented by the refid attribute, such as compound, member, or other Doxygen reference kinds. This classification assists in determining the appropriate link target and display behaviour.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "refkind?: "
                },
                {
                  "kind": "Content",
                  "text": "string | undefined"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "refkind",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            }
          ],
          "extendsTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "Class",
          "canonicalReference": "@xpack/doxygen2docusaurus!AbstractCompoundDefType:class",
          "docComment": "/**\n * Abstract base class for Doxygen compound definition data models.\n *\n * @remarks\n *\n * Represents the core structure of compound definitions in Doxygen XML output, including classes, structures, files, namespaces, and other compound types. This class handles the complete XML schema for compound definitions with comprehensive element and attribute processing to capture all aspects of the documented code structures.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare abstract class AbstractCompoundDefType extends "
            },
            {
              "kind": "Reference",
              "text": "AbstractDataModelBase",
              "canonicalReference": "@xpack/doxygen2docusaurus!AbstractDataModelBase:class"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "src/doxygen/data-model/compounds/compounddef-dm.ts",
          "releaseTag": "Public",
          "isAbstract": true,
          "name": "AbstractCompoundDefType",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Constructor",
              "canonicalReference": "@xpack/doxygen2docusaurus!AbstractCompoundDefType:constructor(1)",
              "docComment": "/**\n * Constructs a new compound definition data model instance.\n *\n * @remarks\n *\n * Parses the complete XML structure for compound definitions, processing all elements and attributes according to the Doxygen XML schema. This includes handling optional and mandatory elements, complex nested structures, and comprehensive attribute validation to ensure data integrity throughout the parsing process.\n *\n * @param xml - The XML parser instance for processing elements\n *\n * @param element - The XML element object to parse\n *\n * @param elementName - The name of the XML element being processed\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor(xml: "
                },
                {
                  "kind": "Reference",
                  "text": "DoxygenXmlParser",
                  "canonicalReference": "@xpack/doxygen2docusaurus!DoxygenXmlParser:class"
                },
                {
                  "kind": "Content",
                  "text": ", element: "
                },
                {
                  "kind": "Content",
                  "text": "object"
                },
                {
                  "kind": "Content",
                  "text": ", elementName: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "xml",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "element",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "elementName",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  },
                  "isOptional": false
                }
              ]
            },
            {
              "kind": "Property",
              "canonicalReference": "@xpack/doxygen2docusaurus!AbstractCompoundDefType#abstract:member",
              "docComment": "/**\n * Indicates whether the compound is abstract.\n *\n * @remarks\n *\n * Specifies that the compound is abstract and cannot be instantiated directly, typically requiring concrete implementations of abstract methods or properties. This boolean attribute reflects abstract modifiers in object-oriented programming languages.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "abstract?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean | undefined"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "abstract",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@xpack/doxygen2docusaurus!AbstractCompoundDefType#baseCompoundRefs:member",
              "docComment": "/**\n * Base compound references for inheritance relationships.\n *\n * @remarks\n *\n * Contains references to base classes or parent compounds from which this compound inherits. This property captures the inheritance hierarchy information extracted from 'basecompoundref' XML elements for object-oriented documentation structures.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "baseCompoundRefs?: "
                },
                {
                  "kind": "Reference",
                  "text": "BaseCompoundRefDataModel",
                  "canonicalReference": "@xpack/doxygen2docusaurus!BaseCompoundRefDataModel:class"
                },
                {
                  "kind": "Content",
                  "text": "[] | undefined"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "baseCompoundRefs",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@xpack/doxygen2docusaurus!AbstractCompoundDefType#briefDescription:member",
              "docComment": "/**\n * Brief description of the compound.\n *\n * @remarks\n *\n * Contains a concise summary description of the compound extracted from the 'briefdescription' XML element. This provides a short overview suitable for listings and summary views of the documented entity.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "briefDescription?: "
                },
                {
                  "kind": "Reference",
                  "text": "BriefDescriptionDataModel",
                  "canonicalReference": "@xpack/doxygen2docusaurus!BriefDescriptionDataModel:class"
                },
                {
                  "kind": "Content",
                  "text": " | undefined"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "briefDescription",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@xpack/doxygen2docusaurus!AbstractCompoundDefType#compoundName:member",
              "docComment": "/**\n * The name of the compound element.\n *\n * @remarks\n *\n * Contains the fully qualified name of the compound (class, namespace, file, etc.) as extracted from the 'compoundname' XML element. This represents the primary identifier for the compound in the documentation hierarchy and is mandatory for all compound types except namespaces.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "compoundName: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "compoundName",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@xpack/doxygen2docusaurus!AbstractCompoundDefType#derivedCompoundRefs:member",
              "docComment": "/**\n * Derived compound references for inheritance relationships.\n *\n * @remarks\n *\n * Contains references to derived classes or child compounds that inherit from this compound. This property captures the inheritance hierarchy information extracted from 'derivedcompoundref' XML elements for complete inheritance documentation.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "derivedCompoundRefs?: "
                },
                {
                  "kind": "Reference",
                  "text": "DerivedCompoundRefDataModel",
                  "canonicalReference": "@xpack/doxygen2docusaurus!DerivedCompoundRefDataModel:class"
                },
                {
                  "kind": "Content",
                  "text": "[] | undefined"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "derivedCompoundRefs",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@xpack/doxygen2docusaurus!AbstractCompoundDefType#detailedDescription:member",
              "docComment": "/**\n * Detailed description of the compound.\n *\n * @remarks\n *\n * Contains comprehensive documentation for the compound extracted from the 'detaileddescription' XML element. This includes full description text with formatting, examples, and other detailed documentation content.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "detailedDescription?: "
                },
                {
                  "kind": "Reference",
                  "text": "DetailedDescriptionDataModel",
                  "canonicalReference": "@xpack/doxygen2docusaurus!DetailedDescriptionDataModel:class"
                },
                {
                  "kind": "Content",
                  "text": " | undefined"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "detailedDescription",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@xpack/doxygen2docusaurus!AbstractCompoundDefType#final:member",
              "docComment": "/**\n * Indicates whether the compound is marked as final.\n *\n * @remarks\n *\n * Specifies that the compound cannot be inherited from or extended, typically used in object-oriented programming languages that support final classes or sealed types. This boolean attribute reflects the final modifier in the source code.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "final?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean | undefined"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "final",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@xpack/doxygen2docusaurus!AbstractCompoundDefType#id:member",
              "docComment": "/**\n * Unique identifier for the compound.\n *\n * @remarks\n *\n * Contains the unique ID assigned to this compound by Doxygen for cross-referencing and linking purposes. This identifier is mandatory and serves as the primary key for compound identification throughout the documentation system.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "id: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "id",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@xpack/doxygen2docusaurus!AbstractCompoundDefType#includedBy:member",
              "docComment": "/**\n * Reverse include file references for this compound.\n *\n * @remarks\n *\n * Contains information about other files or compounds that include this compound. This property captures reverse dependency relationships extracted from 'includedby' XML elements, showing which entities depend on this compound.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "includedBy?: "
                },
                {
                  "kind": "Reference",
                  "text": "IncludedByDataModel",
                  "canonicalReference": "@xpack/doxygen2docusaurus!IncludedByDataModel:class"
                },
                {
                  "kind": "Content",
                  "text": "[] | undefined"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "includedBy",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@xpack/doxygen2docusaurus!AbstractCompoundDefType#includes:member",
              "docComment": "/**\n * Include file references for this compound.\n *\n * @remarks\n *\n * Contains information about header files or modules that this compound includes or depends upon. This property captures dependency relationships extracted from 'includes' XML elements, providing visibility into the file inclusion structure.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "includes?: "
                },
                {
                  "kind": "Reference",
                  "text": "IncludesDataModel",
                  "canonicalReference": "@xpack/doxygen2docusaurus!IncludesDataModel:class"
                },
                {
                  "kind": "Content",
                  "text": "[] | undefined"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "includes",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@xpack/doxygen2docusaurus!AbstractCompoundDefType#inline:member",
              "docComment": "/**\n * Indicates whether the compound is inline.\n *\n * @remarks\n *\n * Specifies that the compound is defined inline, typically used for functions, methods, or other constructs that are implemented directly in header files. This boolean attribute reflects inline declarations in the source code.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "inline?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean | undefined"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "inline",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@xpack/doxygen2docusaurus!AbstractCompoundDefType#innerClasses:member",
              "docComment": "/**\n * Inner class references contained within this compound.\n *\n * @remarks\n *\n * Contains references to classes, structures, or other class-like entities that are defined within this compound. This property captures nested type relationships extracted from 'innerclass' XML elements, supporting hierarchical type documentation.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "innerClasses?: "
                },
                {
                  "kind": "Reference",
                  "text": "InnerClassDataModel",
                  "canonicalReference": "@xpack/doxygen2docusaurus!InnerClassDataModel:class"
                },
                {
                  "kind": "Content",
                  "text": "[] | undefined"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "innerClasses",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@xpack/doxygen2docusaurus!AbstractCompoundDefType#innerDirs:member",
              "docComment": "/**\n * Inner folder references contained within this compound.\n *\n * @remarks\n *\n * Contains references to subdirectories or folders that are logically contained within this compound. This property captures hierarchical folder structure extracted from 'innerdir' XML elements, typically used for directory-based documentation organisation.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "innerDirs?: "
                },
                {
                  "kind": "Reference",
                  "text": "InnerDirDataModel",
                  "canonicalReference": "@xpack/doxygen2docusaurus!InnerDirDataModel:class"
                },
                {
                  "kind": "Content",
                  "text": "[] | undefined"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "innerDirs",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@xpack/doxygen2docusaurus!AbstractCompoundDefType#innerFiles:member",
              "docComment": "/**\n * Inner file references contained within this compound.\n *\n * @remarks\n *\n * Contains references to files that are logically contained within this compound. This property captures file relationships extracted from 'innerfile' XML elements, providing visibility into compound-to-file associations in the documentation structure.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "innerFiles?: "
                },
                {
                  "kind": "Reference",
                  "text": "InnerFileDataModel",
                  "canonicalReference": "@xpack/doxygen2docusaurus!InnerFileDataModel:class"
                },
                {
                  "kind": "Content",
                  "text": "[] | undefined"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "innerFiles",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@xpack/doxygen2docusaurus!AbstractCompoundDefType#innerGroups:member",
              "docComment": "/**\n * Inner group references contained within this compound.\n *\n * @remarks\n *\n * Contains references to documentation groups that are associated with this compound. This property captures group relationships extracted from 'innergroup' XML elements, supporting thematic organisation of related documentation elements.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "innerGroups?: "
                },
                {
                  "kind": "Reference",
                  "text": "InnerGroupDataModel",
                  "canonicalReference": "@xpack/doxygen2docusaurus!InnerGroupDataModel:class"
                },
                {
                  "kind": "Content",
                  "text": "[] | undefined"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "innerGroups",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@xpack/doxygen2docusaurus!AbstractCompoundDefType#innerNamespaces:member",
              "docComment": "/**\n * Inner namespace references contained within this compound.\n *\n * @remarks\n *\n * Contains references to namespaces that are nested within this compound. This property captures namespace hierarchy relationships extracted from 'innernamespace' XML elements, supporting multi-level namespace documentation organisation.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "innerNamespaces?: "
                },
                {
                  "kind": "Reference",
                  "text": "InnerNamespaceDataModel",
                  "canonicalReference": "@xpack/doxygen2docusaurus!InnerNamespaceDataModel:class"
                },
                {
                  "kind": "Content",
                  "text": "[] | undefined"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "innerNamespaces",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@xpack/doxygen2docusaurus!AbstractCompoundDefType#innerPages:member",
              "docComment": "/**\n * Inner page references contained within this compound.\n *\n * @remarks\n *\n * Contains references to documentation pages that are logically associated with this compound. This property captures page relationships extracted from 'innerpage' XML elements, supporting structured documentation navigation.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "innerPages?: "
                },
                {
                  "kind": "Reference",
                  "text": "InnerPageDataModel",
                  "canonicalReference": "@xpack/doxygen2docusaurus!InnerPageDataModel:class"
                },
                {
                  "kind": "Content",
                  "text": "[] | undefined"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "innerPages",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@xpack/doxygen2docusaurus!AbstractCompoundDefType#kind:member",
              "docComment": "/**\n * The kind or type of compound.\n *\n * @remarks\n *\n * Specifies the compound type using DoxCompoundKind enumeration values such as 'class', 'struct', 'file', 'namespace', 'page', etc. This mandatory attribute determines how the compound should be processed and displayed in the documentation output.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "kind: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "kind",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@xpack/doxygen2docusaurus!AbstractCompoundDefType#language:member",
              "docComment": "/**\n * Programming language of the compound.\n *\n * @remarks\n *\n * Specifies the programming language using DoxLanguage enumeration values when the compound is language-specific. This optional attribute enables language-aware processing and appropriate syntax highlighting in the generated documentation.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "language?: "
                },
                {
                  "kind": "Content",
                  "text": "string | undefined"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "language",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@xpack/doxygen2docusaurus!AbstractCompoundDefType#listOfAllMembers:member",
              "docComment": "/**\n * Complete list of all members contained in the compound.\n *\n * @remarks\n *\n * Contains a comprehensive list of all members (methods, properties, etc.) that belong to this compound, including inherited members. This property captures member information extracted from 'listofallmembers' XML elements for complete API documentation.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "listOfAllMembers?: "
                },
                {
                  "kind": "Reference",
                  "text": "ListOfAllMembersDataModel",
                  "canonicalReference": "@xpack/doxygen2docusaurus!ListOfAllMembersDataModel:class"
                },
                {
                  "kind": "Content",
                  "text": " | undefined"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "listOfAllMembers",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@xpack/doxygen2docusaurus!AbstractCompoundDefType#location:member",
              "docComment": "/**\n * Location information for the compound definition.\n *\n * @remarks\n *\n * Contains file path, line number, and other location details for where the compound is defined in the source code. This property captures location metadata extracted from 'location' XML elements, enabling source code navigation and reference linking.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "location?: "
                },
                {
                  "kind": "Reference",
                  "text": "LocationDataModel",
                  "canonicalReference": "@xpack/doxygen2docusaurus!LocationDataModel:class"
                },
                {
                  "kind": "Content",
                  "text": " | undefined"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "location",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@xpack/doxygen2docusaurus!AbstractCompoundDefType#programListing:member",
              "docComment": "/**\n * Program listing or source code for the compound.\n *\n * @remarks\n *\n * Contains the actual source code implementation or listing for the compound when available. This property captures code content extracted from 'programlisting' XML elements, providing syntax-highlighted source code display in the documentation.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "programListing?: "
                },
                {
                  "kind": "Reference",
                  "text": "ProgramListingDataModel",
                  "canonicalReference": "@xpack/doxygen2docusaurus!ProgramListingDataModel:class"
                },
                {
                  "kind": "Content",
                  "text": " | undefined"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "programListing",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@xpack/doxygen2docusaurus!AbstractCompoundDefType#prot:member",
              "docComment": "/**\n * Protection level of the compound.\n *\n * @remarks\n *\n * Specifies the access protection level (public, private, protected) for the compound using DoxProtectionKind enumeration values. Note that whilst this attribute is not marked as optional in the XML schema, it may not be present in all compound definitions.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "prot?: "
                },
                {
                  "kind": "Content",
                  "text": "string | undefined"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "prot",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@xpack/doxygen2docusaurus!AbstractCompoundDefType#sealed:member",
              "docComment": "/**\n * Indicates whether the compound is sealed.\n *\n * @remarks\n *\n * Specifies that the compound is sealed and cannot be inherited from, similar to final but using different language-specific terminology. This boolean attribute reflects sealed modifiers found in languages like C# or other object-oriented programming environments.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "sealed?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean | undefined"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "sealed",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@xpack/doxygen2docusaurus!AbstractCompoundDefType#sectionDefs:member",
              "docComment": "/**\n * Section definitions within the compound.\n *\n * @remarks\n *\n * Contains organised sections of members and documentation within the compound. This property captures structured content extracted from 'sectiondef' XML elements, providing hierarchical organisation of compound members by type and visibility.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "sectionDefs?: "
                },
                {
                  "kind": "Reference",
                  "text": "SectionDefDataModel",
                  "canonicalReference": "@xpack/doxygen2docusaurus!SectionDefDataModel:class"
                },
                {
                  "kind": "Content",
                  "text": "[] | undefined"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "sectionDefs",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@xpack/doxygen2docusaurus!AbstractCompoundDefType#tableOfContents:member",
              "docComment": "/**\n * Table of contents for the compound documentation.\n *\n * @remarks\n *\n * Contains the navigation structure for complex compound documentation. This property captures hierarchical content organisation extracted from 'tableofcontents' XML elements, providing structured navigation for large documentation entities.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "tableOfContents?: "
                },
                {
                  "kind": "Reference",
                  "text": "TableOfContentsDataModel",
                  "canonicalReference": "@xpack/doxygen2docusaurus!TableOfContentsDataModel:class"
                },
                {
                  "kind": "Content",
                  "text": " | undefined"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "tableOfContents",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@xpack/doxygen2docusaurus!AbstractCompoundDefType#templateParamList:member",
              "docComment": "/**\n * Template parameter list for templated compounds.\n *\n * @remarks\n *\n * Contains the template parameter definitions for templated classes, functions, or other templated entities. This property captures template information extracted from 'templateparamlist' XML elements, providing details about generic programming constructs.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "templateParamList?: "
                },
                {
                  "kind": "Reference",
                  "text": "TemplateParamListDataModel",
                  "canonicalReference": "@xpack/doxygen2docusaurus!TemplateParamListDataModel:class"
                },
                {
                  "kind": "Content",
                  "text": " | undefined"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "templateParamList",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@xpack/doxygen2docusaurus!AbstractCompoundDefType#title:member",
              "docComment": "/**\n * Optional title for the compound.\n *\n * @remarks\n *\n * Provides a human-readable title for the compound that may differ from the compound name. This is typically used for pages and groups where a descriptive title is more appropriate than the technical identifier.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "title?: "
                },
                {
                  "kind": "Content",
                  "text": "string | undefined"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "title",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            }
          ],
          "extendsTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "Class",
          "canonicalReference": "@xpack/doxygen2docusaurus!AbstractCompoundRefType:class",
          "docComment": "/**\n * Abstract base class for compound reference data models.\n *\n * @remarks\n *\n * Represents references to other compound entities in Doxygen XML output, including inheritance relationships and cross-references. This class handles the 'compoundRefType' XML schema structure with text content and attributes for protection level, virtual specification, and optional reference identifiers.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare abstract class AbstractCompoundRefType extends "
            },
            {
              "kind": "Reference",
              "text": "AbstractDataModelBase",
              "canonicalReference": "@xpack/doxygen2docusaurus!AbstractDataModelBase:class"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "src/doxygen/data-model/compounds/compoundreftype-dm.ts",
          "releaseTag": "Public",
          "isAbstract": true,
          "name": "AbstractCompoundRefType",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Constructor",
              "canonicalReference": "@xpack/doxygen2docusaurus!AbstractCompoundRefType:constructor(1)",
              "docComment": "/**\n * Constructs a new compound reference data model instance.\n *\n * @remarks\n *\n * Parses compound reference elements from Doxygen XML output, extracting the text content representing the compound name and processing attributes for protection level, virtual specification, and optional reference identifier. This provides the foundation for inheritance and cross-reference relationships in the documentation structure.\n *\n * @param xml - The XML parser instance for processing elements\n *\n * @param element - The XML element object to parse\n *\n * @param elementName - The name of the XML element being processed\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor(xml: "
                },
                {
                  "kind": "Reference",
                  "text": "DoxygenXmlParser",
                  "canonicalReference": "@xpack/doxygen2docusaurus!DoxygenXmlParser:class"
                },
                {
                  "kind": "Content",
                  "text": ", element: "
                },
                {
                  "kind": "Content",
                  "text": "object"
                },
                {
                  "kind": "Content",
                  "text": ", elementName: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "xml",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "element",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "elementName",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  },
                  "isOptional": false
                }
              ]
            },
            {
              "kind": "Property",
              "canonicalReference": "@xpack/doxygen2docusaurus!AbstractCompoundRefType#prot:member",
              "docComment": "/**\n * Protection level of the compound reference.\n *\n * @remarks\n *\n * Specifies the access protection level using DoxProtectionKind enumeration values ('public', 'protected', 'private', 'package'). This mandatory attribute determines the visibility and accessibility of the referenced compound in inheritance relationships.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "prot: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "prot",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@xpack/doxygen2docusaurus!AbstractCompoundRefType#refid:member",
              "docComment": "/**\n * Optional reference identifier for cross-linking.\n *\n * @remarks\n *\n * Contains the unique identifier that can be used to create hyperlinks or cross-references to the referenced compound's documentation. When present, this identifier enables navigation between related compound definitions in the generated documentation.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "refid?: "
                },
                {
                  "kind": "Content",
                  "text": "string | undefined"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "refid",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@xpack/doxygen2docusaurus!AbstractCompoundRefType#text:member",
              "docComment": "/**\n * The name or identifier text of the referenced compound.\n *\n * @remarks\n *\n * Contains the textual content extracted from the compound reference XML element, typically representing the name of the referenced class, structure, or other compound entity. This text content serves as the primary identifier for the referenced compound in inheritance relationships and cross-references.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "text: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "text",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@xpack/doxygen2docusaurus!AbstractCompoundRefType#virt:member",
              "docComment": "/**\n * Virtual specification of the compound reference.\n *\n * @remarks\n *\n * Specifies the virtual nature using DoxVirtualKind enumeration values ('non-virtual', 'virtual', 'pure-virtual'). This mandatory attribute indicates whether the compound reference involves virtual inheritance or virtual methods in object-oriented programming contexts.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "virt: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "virt",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            }
          ],
          "extendsTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "Class",
          "canonicalReference": "@xpack/doxygen2docusaurus!AbstractDataModelBase:class",
          "docComment": "/**\n * Abstract base class for all data model elements in the Doxygen XML layer.\n *\n * @remarks\n *\n * Provides the common interface and properties for all data model elements parsed from Doxygen XML files. All concrete data model classes should extend this base class to ensure consistent structure and behaviour.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare abstract class AbstractDataModelBase "
            }
          ],
          "fileUrlPath": "src/doxygen/data-model/types.ts",
          "releaseTag": "Public",
          "isAbstract": true,
          "name": "AbstractDataModelBase",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Constructor",
              "canonicalReference": "@xpack/doxygen2docusaurus!AbstractDataModelBase:constructor(1)",
              "docComment": "/**\n * Constructs a new data model base instance for a given XML element name.\n *\n * @remarks\n *\n * Initialises the base data model with the specified element name. All derived data model classes should call this constructor.\n *\n * @param elementName - The name of the XML element represented by this instance\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor(elementName: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "elementName",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ]
            },
            {
              "kind": "Property",
              "canonicalReference": "@xpack/doxygen2docusaurus!AbstractDataModelBase#children:member",
              "docComment": "/**\n * The child elements or text nodes contained within this data model element.\n *\n * @remarks\n *\n * Contains an array of child elements or text nodes, supporting recursive data model structures for complex XML hierarchies.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "children?: "
                },
                {
                  "kind": "Content",
                  "text": "(string | "
                },
                {
                  "kind": "Reference",
                  "text": "AbstractDataModelBase",
                  "canonicalReference": "@xpack/doxygen2docusaurus!AbstractDataModelBase:class"
                },
                {
                  "kind": "Content",
                  "text": ")[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "children",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 4
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@xpack/doxygen2docusaurus!AbstractDataModelBase#elementName:member",
              "docComment": "/**\n * The name of the XML element represented by this data model instance.\n *\n * @remarks\n *\n * Used to identify the XML element type for this data model object.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "elementName: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "elementName",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@xpack/doxygen2docusaurus!AbstractDataModelBase#skipPara:member",
              "docComment": "/**\n * Indicates whether paragraph processing should be skipped for this element.\n *\n * @remarks\n *\n * Optional property used to control paragraph handling during documentation generation. If true, paragraph tags are not generated for this element.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "skipPara?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "skipPara",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            }
          ],
          "implementsTokenRanges": []
        },
        {
          "kind": "Class",
          "canonicalReference": "@xpack/doxygen2docusaurus!AbstractDescriptionType:class",
          "docComment": "/**\n * Abstract base class for Doxygen description elements containing mixed content.\n *\n * @remarks\n *\n * Implements the XML Schema definition for descriptionType elements, which support mixed content (character data between child elements). This class handles the complex structure of documentation descriptions including titles, paragraphs, internal sections, and hierarchical section elements.\n *\n * The implementation processes the sequence of optional title elements followed by various documentation components such as paragraphs, internal documentation, and nested section structures up to level 1.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare abstract class AbstractDescriptionType extends "
            },
            {
              "kind": "Reference",
              "text": "AbstractDataModelBase",
              "canonicalReference": "@xpack/doxygen2docusaurus!AbstractDataModelBase:class"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "src/doxygen/data-model/compounds/descriptiontype-dm.ts",
          "releaseTag": "Public",
          "isAbstract": true,
          "name": "AbstractDescriptionType",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Constructor",
              "canonicalReference": "@xpack/doxygen2docusaurus!AbstractDescriptionType:constructor(1)",
              "docComment": "/**\n * Constructs an AbstractDescriptionType instance from XML element data.\n *\n * @remarks\n *\n * This constructor processes mixed content descriptions by iterating through all inner elements and handling text nodes, title elements, paragraphs, internal sections, and level-1 sections. The parser maintains the original order of elements in the children array whilst extracting the title into a separate property for convenient access.\n *\n * @param xml - The Doxygen XML parser instance for processing XML content\n *\n * @param element - The XML element object containing the description data\n *\n * @param elementName - The name of the XML element being processed\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor(xml: "
                },
                {
                  "kind": "Reference",
                  "text": "DoxygenXmlParser",
                  "canonicalReference": "@xpack/doxygen2docusaurus!DoxygenXmlParser:class"
                },
                {
                  "kind": "Content",
                  "text": ", element: "
                },
                {
                  "kind": "Content",
                  "text": "object"
                },
                {
                  "kind": "Content",
                  "text": ", elementName: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "xml",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "element",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "elementName",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  },
                  "isOptional": false
                }
              ]
            },
            {
              "kind": "Property",
              "canonicalReference": "@xpack/doxygen2docusaurus!AbstractDescriptionType#title:member",
              "docComment": "/**\n * Optional title element for the description.\n *\n * @remarks\n *\n * Contains the title text for the description section when present. According to the XML schema, only one title element is permitted per description, hence the assertion that ensures uniqueness during parsing.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "title?: "
                },
                {
                  "kind": "Content",
                  "text": "string | undefined"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "title",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            }
          ],
          "extendsTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "Class",
          "canonicalReference": "@xpack/doxygen2docusaurus!AbstractDocImageType:class",
          "docComment": "/**\n * Abstract base class for image elements within documentation content.\n *\n * @remarks\n *\n * Represents image elements that can be embedded within documentation descriptions and content blocks. This implementation processes Doxygen's image elements, which support multiple output formats (HTML, LaTeX, DocBook, RTF, XML) and provide comprehensive image metadata including dimensions, captions, alternative text, and inline positioning.\n *\n * Image elements support mixed content with text and formatting commands, allowing for rich image descriptions and captions. The class tracks HTML images specifically for asset copying during documentation generation.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare abstract class AbstractDocImageType extends "
            },
            {
              "kind": "Reference",
              "text": "AbstractDataModelBase",
              "canonicalReference": "@xpack/doxygen2docusaurus!AbstractDataModelBase:class"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "src/doxygen/data-model/compounds/descriptiontype-dm.ts",
          "releaseTag": "Public",
          "isAbstract": true,
          "name": "AbstractDocImageType",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Constructor",
              "canonicalReference": "@xpack/doxygen2docusaurus!AbstractDocImageType:constructor(1)",
              "docComment": "/**\n * Constructs an AbstractDocImageType instance from XML element data.\n *\n * @remarks\n *\n * This constructor processes image elements by extracting all optional attributes including type, name, dimensions, alternative text, inline positioning, and caption information. For HTML images with local file references, the image is registered with the parser for asset tracking during documentation generation.\n *\n * The implementation also processes any mixed content within the image element, including text and formatting commands that may be part of the image description or caption.\n *\n * @param xml - The Doxygen XML parser instance for processing XML content\n *\n * @param element - The XML element object containing the image data\n *\n * @param elementName - The name of the XML element being processed\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor(xml: "
                },
                {
                  "kind": "Reference",
                  "text": "DoxygenXmlParser",
                  "canonicalReference": "@xpack/doxygen2docusaurus!DoxygenXmlParser:class"
                },
                {
                  "kind": "Content",
                  "text": ", element: "
                },
                {
                  "kind": "Content",
                  "text": "object"
                },
                {
                  "kind": "Content",
                  "text": ", elementName: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "xml",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "element",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "elementName",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  },
                  "isOptional": false
                }
              ]
            },
            {
              "kind": "Property",
              "canonicalReference": "@xpack/doxygen2docusaurus!AbstractDocImageType#alt:member",
              "docComment": "/**\n * Alternative text for accessibility and fallback purposes.\n *\n * @remarks\n *\n * Provides descriptive text for the image that can be used by screen readers and displayed when the image cannot be loaded. This supports accessibility requirements and fallback presentation.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "alt?: "
                },
                {
                  "kind": "Content",
                  "text": "string | undefined"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "alt",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@xpack/doxygen2docusaurus!AbstractDocImageType#caption:member",
              "docComment": "/**\n * Caption text for the image.\n *\n * @remarks\n *\n * Provides descriptive caption text that accompanies the image display. Captions typically appear below or adjacent to the image and provide additional context or explanation for the visual content.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "caption?: "
                },
                {
                  "kind": "Content",
                  "text": "string | undefined"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "caption",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@xpack/doxygen2docusaurus!AbstractDocImageType#height:member",
              "docComment": "/**\n * Height specification for the image.\n *\n * @remarks\n *\n * Specifies the desired height for the image rendering. The format and units depend on the target output format and may include CSS-style dimensions or format-specific measurements.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "height?: "
                },
                {
                  "kind": "Content",
                  "text": "string | undefined"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "height",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@xpack/doxygen2docusaurus!AbstractDocImageType#inline:member",
              "docComment": "/**\n * Inline positioning flag for the image.\n *\n * @remarks\n *\n * Determines whether the image should be rendered inline with text content or as a block-level element. Inline images flow with text whilst block images create separate content sections.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "inline?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean | undefined"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "inline",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@xpack/doxygen2docusaurus!AbstractDocImageType#name:member",
              "docComment": "/**\n * Name or path of the image file.\n *\n * @remarks\n *\n * Contains the filename or path to the image resource. For HTML images, this typically references files that need to be copied to the output folder during documentation generation.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "name?: "
                },
                {
                  "kind": "Content",
                  "text": "string | undefined"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "name",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@xpack/doxygen2docusaurus!AbstractDocImageType#type:member",
              "docComment": "/**\n * Output format type for the image.\n *\n * @remarks\n *\n * Specifies the target output format for the image, such as 'html', 'latex', 'docbook', 'rtf', or 'xml'. This determines how the image should be processed and rendered in different documentation outputs.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "type?: "
                },
                {
                  "kind": "Content",
                  "text": "string | undefined"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "type",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@xpack/doxygen2docusaurus!AbstractDocImageType#width:member",
              "docComment": "/**\n * Width specification for the image.\n *\n * @remarks\n *\n * Specifies the desired width for the image rendering. The format and units depend on the target output format and may include CSS-style dimensions or format-specific measurements.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "width?: "
                },
                {
                  "kind": "Content",
                  "text": "string | undefined"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "width",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            }
          ],
          "extendsTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "Class",
          "canonicalReference": "@xpack/doxygen2docusaurus!AbstractDoxygenFileOptionType:class",
          "docComment": "/**\n * Abstract base class for Doxygen file option type data models.\n *\n * @remarks\n *\n * Represents configuration option elements within Doxyfile XML structures, corresponding to the OptionType complex type in the XML schema. This class handles the parsing of option values and mandatory attributes (id, default, and type). All concrete option data model classes should extend this abstract base to ensure consistent parsing and data representation of Doxygen configuration settings.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare abstract class AbstractDoxygenFileOptionType extends "
            },
            {
              "kind": "Reference",
              "text": "AbstractDataModelBase",
              "canonicalReference": "@xpack/doxygen2docusaurus!AbstractDataModelBase:class"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "src/doxygen/data-model/doxyfile/doxyfileoptiontype-dm.ts",
          "releaseTag": "Public",
          "isAbstract": true,
          "name": "AbstractDoxygenFileOptionType",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Constructor",
              "canonicalReference": "@xpack/doxygen2docusaurus!AbstractDoxygenFileOptionType:constructor(1)",
              "docComment": "/**\n * Constructs a new AbstractDoxygenFileOptionType instance from XML data.\n *\n * @remarks\n *\n * Parses the provided XML element to extract configuration option information including value collections and mandatory attributes (id, default, and type). The constructor validates that all required attributes are present and processes value elements into a string array when present. The parsing ensures compliance with the OptionType schema definition.\n *\n * @param xml - The Doxygen XML parser instance for processing XML elements\n *\n * @param element - The XML element containing the option data\n *\n * @param elementName - The name of the XML element being processed\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor(xml: "
                },
                {
                  "kind": "Reference",
                  "text": "DoxygenXmlParser",
                  "canonicalReference": "@xpack/doxygen2docusaurus!DoxygenXmlParser:class"
                },
                {
                  "kind": "Content",
                  "text": ", element: "
                },
                {
                  "kind": "Content",
                  "text": "object"
                },
                {
                  "kind": "Content",
                  "text": ", elementName: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "xml",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "element",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "elementName",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  },
                  "isOptional": false
                }
              ]
            },
            {
              "kind": "Property",
              "canonicalReference": "@xpack/doxygen2docusaurus!AbstractDoxygenFileOptionType#default:member",
              "docComment": "/**\n * The default value indicator for this configuration option.\n *\n * @remarks\n *\n * Mandatory attribute that indicates whether this option is set to its default value. Corresponds to the defaultType enumeration in the XML schema, typically having values of 'yes' or 'no'.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "default: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "default",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@xpack/doxygen2docusaurus!AbstractDoxygenFileOptionType#id:member",
              "docComment": "/**\n * The unique identifier for this configuration option.\n *\n * @remarks\n *\n * Mandatory attribute that specifies the name or identifier of the Doxygen configuration option. This corresponds to the actual configuration parameter name used in Doxygen configuration files and determines the specific setting being configured.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "id: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "id",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@xpack/doxygen2docusaurus!AbstractDoxygenFileOptionType#type:member",
              "docComment": "/**\n * The data type classification for this configuration option.\n *\n * @remarks\n *\n * Mandatory attribute that specifies the expected data type for the option's values. Corresponds to the typeType enumeration in the XML schema, indicating whether the option expects integer, boolean, string, or string list values.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "type: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "type",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@xpack/doxygen2docusaurus!AbstractDoxygenFileOptionType#values:member",
              "docComment": "/**\n * Collection of value strings associated with this configuration option.\n *\n * @remarks\n *\n * Optional array containing value elements found within the option structure. Each value represents a specific setting or parameter for the configuration option. The array supports zero to many values as per the XML schema, allowing for both single and multi-value configuration settings.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "values: "
                },
                {
                  "kind": "Content",
                  "text": "string[] | undefined"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "values",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            }
          ],
          "extendsTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "Class",
          "canonicalReference": "@xpack/doxygen2docusaurus!AbstractDoxygenFileType:class",
          "docComment": "/**\n * Abstract base class for Doxygen file type data models.\n *\n * @remarks\n *\n * Represents the structure of Doxyfile XML configurations, corresponding to the DoxygenFileType complex type in the XML schema. This class handles the parsing of Doxygen configuration options and mandatory attributes (version and language). All concrete Doxyfile data model classes should extend this abstract base to ensure consistent parsing and data representation of configuration settings.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare abstract class AbstractDoxygenFileType extends "
            },
            {
              "kind": "Reference",
              "text": "AbstractDataModelBase",
              "canonicalReference": "@xpack/doxygen2docusaurus!AbstractDataModelBase:class"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "src/doxygen/data-model/doxyfile/doxyfiletype-dm.ts",
          "releaseTag": "Public",
          "isAbstract": true,
          "name": "AbstractDoxygenFileType",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Constructor",
              "canonicalReference": "@xpack/doxygen2docusaurus!AbstractDoxygenFileType:constructor(1)",
              "docComment": "/**\n * Constructs a new AbstractDoxygenFileType instance from XML data.\n *\n * @remarks\n *\n * Parses the provided XML element to extract Doxyfile configuration information including option collections and mandatory attributes (version and language). The constructor validates that all required attributes are present and processes option elements into the appropriate data models. Optional schema location attributes are also extracted when present.\n *\n * @param xml - The Doxygen XML parser instance for processing XML elements\n *\n * @param element - The XML element containing the Doxyfile data\n *\n * @param elementName - The name of the XML element being processed\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor(xml: "
                },
                {
                  "kind": "Reference",
                  "text": "DoxygenXmlParser",
                  "canonicalReference": "@xpack/doxygen2docusaurus!DoxygenXmlParser:class"
                },
                {
                  "kind": "Content",
                  "text": ", element: "
                },
                {
                  "kind": "Content",
                  "text": "object"
                },
                {
                  "kind": "Content",
                  "text": ", elementName: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "xml",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "element",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "elementName",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  },
                  "isOptional": false
                }
              ]
            },
            {
              "kind": "Property",
              "canonicalReference": "@xpack/doxygen2docusaurus!AbstractDoxygenFileType#lang:member",
              "docComment": "/**\n * The language specification for the documentation configuration.\n *\n * @remarks\n *\n * Mandatory attribute corresponding to the xml:lang attribute in the XML structure. Specifies the primary language used in the configuration and documentation generation process for internationalisation purposes.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "lang: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "lang",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@xpack/doxygen2docusaurus!AbstractDoxygenFileType#noNamespaceSchemaLocation:member",
              "docComment": "/**\n * The XML schema location reference for validation.\n *\n * @remarks\n *\n * Optional attribute that specifies the location of the XML schema definition used for validating the structure of the Doxyfile XML. This provides schema validation capabilities for the parsed configuration content.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "noNamespaceSchemaLocation?: "
                },
                {
                  "kind": "Content",
                  "text": "string | undefined"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "noNamespaceSchemaLocation",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@xpack/doxygen2docusaurus!AbstractDoxygenFileType#options:member",
              "docComment": "/**\n * Collection of configuration option data models.\n *\n * @remarks\n *\n * Optional array containing option elements found within the Doxyfile structure. Each option represents a specific configuration setting that controls the behaviour of Doxygen during documentation generation. The array supports zero to many options as per the XML schema.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "options?: "
                },
                {
                  "kind": "Reference",
                  "text": "DoxygenFileOptionDataModel",
                  "canonicalReference": "@xpack/doxygen2docusaurus!DoxygenFileOptionDataModel:class"
                },
                {
                  "kind": "Content",
                  "text": "[] | undefined"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "options",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@xpack/doxygen2docusaurus!AbstractDoxygenFileType#version:member",
              "docComment": "/**\n * The version of the Doxygen tool that generated the configuration.\n *\n * @remarks\n *\n * Mandatory attribute extracted from the XML structure that identifies the version of Doxygen used to generate the configuration file. This information is essential for compatibility and configuration parsing decisions.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "version: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "version",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            }
          ],
          "extendsTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "Class",
          "canonicalReference": "@xpack/doxygen2docusaurus!AbstractEnumValueType:class",
          "docComment": "/**\n * Abstract base class for enumeration value data models.\n *\n * @remarks\n *\n * Represents individual values within enumeration types as parsed from Doxygen XML. Contains the value name, optional initialiser expression, and documentation descriptions with protection level information.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare abstract class AbstractEnumValueType extends "
            },
            {
              "kind": "Reference",
              "text": "AbstractDataModelBase",
              "canonicalReference": "@xpack/doxygen2docusaurus!AbstractDataModelBase:class"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "src/doxygen/data-model/compounds/enumvaluetype-dm.ts",
          "releaseTag": "Public",
          "isAbstract": true,
          "name": "AbstractEnumValueType",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Constructor",
              "canonicalReference": "@xpack/doxygen2docusaurus!AbstractEnumValueType:constructor(1)",
              "docComment": "/**\n * Creates a new enumeration value data model.\n *\n * @remarks\n *\n * Parses the XML element representing an enumeration value and extracts all relevant information including name, initialiser, descriptions, and attributes.\n *\n * @param xml - The XML parser instance\n *\n * @param element - The XML element to parse\n *\n * @param elementName - The name of the XML element\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor(xml: "
                },
                {
                  "kind": "Reference",
                  "text": "DoxygenXmlParser",
                  "canonicalReference": "@xpack/doxygen2docusaurus!DoxygenXmlParser:class"
                },
                {
                  "kind": "Content",
                  "text": ", element: "
                },
                {
                  "kind": "Content",
                  "text": "object"
                },
                {
                  "kind": "Content",
                  "text": ", elementName: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "xml",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "element",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "elementName",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  },
                  "isOptional": false
                }
              ]
            },
            {
              "kind": "Property",
              "canonicalReference": "@xpack/doxygen2docusaurus!AbstractEnumValueType#briefDescription:member",
              "docComment": "/**\n * Brief description of the enumeration value.\n *\n * @remarks\n *\n * Short documentation comment providing a concise explanation of the enumeration value's purpose or meaning.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "briefDescription?: "
                },
                {
                  "kind": "Reference",
                  "text": "BriefDescriptionDataModel",
                  "canonicalReference": "@xpack/doxygen2docusaurus!BriefDescriptionDataModel:class"
                },
                {
                  "kind": "Content",
                  "text": " | undefined"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "briefDescription",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@xpack/doxygen2docusaurus!AbstractEnumValueType#detailedDescription:member",
              "docComment": "/**\n * Detailed description of the enumeration value.\n *\n * @remarks\n *\n * Comprehensive documentation comment providing full details about the enumeration value's purpose, usage, and behaviour.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "detailedDescription?: "
                },
                {
                  "kind": "Reference",
                  "text": "DetailedDescriptionDataModel",
                  "canonicalReference": "@xpack/doxygen2docusaurus!DetailedDescriptionDataModel:class"
                },
                {
                  "kind": "Content",
                  "text": " | undefined"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "detailedDescription",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@xpack/doxygen2docusaurus!AbstractEnumValueType#id:member",
              "docComment": "/**\n * Unique identifier for the enumeration value.\n *\n * @remarks\n *\n * Doxygen-generated identifier used for cross-referencing and creating links to this enumeration value.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "id: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "id",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@xpack/doxygen2docusaurus!AbstractEnumValueType#initializer:member",
              "docComment": "/**\n * Optional initialiser expression for the enumeration value.\n *\n * @remarks\n *\n * Contains the explicit value assignment expression when the enumeration value is explicitly initialised in the source code.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "initializer?: "
                },
                {
                  "kind": "Reference",
                  "text": "InitializerDataModel",
                  "canonicalReference": "@xpack/doxygen2docusaurus!InitializerDataModel:class"
                },
                {
                  "kind": "Content",
                  "text": " | undefined"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "initializer",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@xpack/doxygen2docusaurus!AbstractEnumValueType#name:member",
              "docComment": "/**\n * The name of the enumeration value.\n *\n * @remarks\n *\n * Simple identifier for the enumeration constant as it appears in the source code.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "name: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "name",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@xpack/doxygen2docusaurus!AbstractEnumValueType#prot:member",
              "docComment": "/**\n * Protection level of the enumeration value.\n *\n * @remarks\n *\n * Indicates the visibility scope such as 'public', 'private', or 'protected' based on Doxygen's protection kind enumeration.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "prot: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "prot",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            }
          ],
          "extendsTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "Class",
          "canonicalReference": "@xpack/doxygen2docusaurus!AbstractHighlightType:class",
          "docComment": "/**\n * Abstract base class for syntax highlighting elements within code listings.\n *\n * @remarks\n *\n * Implements the XML Schema definition for highlightType elements, which provide syntax highlighting information for portions of source code. Each highlight element contains a mandatory class attribute that specifies the type of syntax element (keyword, comment, etc.) and may contain mixed content including text, spacing elements, and cross-references.\n *\n * The implementation supports the full range of Doxygen highlight classes including standard programming language constructs and specialised VHDL categories for hardware description language documentation.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare abstract class AbstractHighlightType extends "
            },
            {
              "kind": "Reference",
              "text": "AbstractDataModelBase",
              "canonicalReference": "@xpack/doxygen2docusaurus!AbstractDataModelBase:class"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "src/doxygen/data-model/compounds/descriptiontype-dm.ts",
          "releaseTag": "Public",
          "isAbstract": true,
          "name": "AbstractHighlightType",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Constructor",
              "canonicalReference": "@xpack/doxygen2docusaurus!AbstractHighlightType:constructor(1)",
              "docComment": "/**\n * Constructs an AbstractHighlightType instance from XML element data.\n *\n * @remarks\n *\n * This constructor processes highlight elements by extracting the mandatory class attribute and any mixed content including text nodes, spacing elements, and cross-reference elements. The parser maintains the original order of content elements in the children array to preserve the intended layout and formatting of the highlighted code segment.\n *\n * @param xml - The Doxygen XML parser instance for processing XML content\n *\n * @param element - The XML element object containing the highlight data\n *\n * @param elementName - The name of the XML element being processed\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor(xml: "
                },
                {
                  "kind": "Reference",
                  "text": "DoxygenXmlParser",
                  "canonicalReference": "@xpack/doxygen2docusaurus!DoxygenXmlParser:class"
                },
                {
                  "kind": "Content",
                  "text": ", element: "
                },
                {
                  "kind": "Content",
                  "text": "object"
                },
                {
                  "kind": "Content",
                  "text": ", elementName: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "xml",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "element",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "elementName",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  },
                  "isOptional": false
                }
              ]
            },
            {
              "kind": "Property",
              "canonicalReference": "@xpack/doxygen2docusaurus!AbstractHighlightType#classs:member",
              "docComment": "/**\n * Mandatory highlight classification attribute.\n *\n * @remarks\n *\n * Specifies the syntax highlighting class for this element, determining how the contained text should be styled in the generated documentation. The value must be one of the predefined DoxHighlightClass enumeration values such as 'keyword', 'comment', or 'stringliteral'.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "classs: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "classs",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            }
          ],
          "extendsTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "Class",
          "canonicalReference": "@xpack/doxygen2docusaurus!AbstractIncType:class",
          "docComment": "/**\n * Abstract base class for include-type elements within documentation.\n *\n * @remarks\n *\n * Implements processing for include-type elements that represent file inclusion relationships within source code documentation. This class handles the XML Schema definition for incType elements, which contain textual content representing file paths or names along with attributes that specify inclusion behaviour and reference relationships.\n *\n * The implementation processes both local and system includes, distinguishing between quoted includes (\"filename\") and angle-bracket includes (<filename>) through the local attribute. Optional reference identifiers enable cross-referencing to the included file's documentation.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare abstract class AbstractIncType extends "
            },
            {
              "kind": "Reference",
              "text": "AbstractDataModelBase",
              "canonicalReference": "@xpack/doxygen2docusaurus!AbstractDataModelBase:class"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "src/doxygen/data-model/compounds/inctype-dm.ts",
          "releaseTag": "Public",
          "isAbstract": true,
          "name": "AbstractIncType",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Constructor",
              "canonicalReference": "@xpack/doxygen2docusaurus!AbstractIncType:constructor(1)",
              "docComment": "/**\n * Constructs an AbstractIncType instance from XML element data.\n *\n * @remarks\n *\n * This constructor processes include-type elements by extracting the textual content representing the filename and processing attributes that specify inclusion behaviour. The parser validates the presence of required content and attributes whilst maintaining compliance with the XML Schema definition for include elements.\n *\n * The implementation distinguishes between local and system includes through the local attribute and optionally associates reference identifiers for cross-linking to included file documentation.\n *\n * @param xml - The Doxygen XML parser instance for processing XML content\n *\n * @param element - The XML element object containing the include data\n *\n * @param elementName - The name of the XML element being processed\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor(xml: "
                },
                {
                  "kind": "Reference",
                  "text": "DoxygenXmlParser",
                  "canonicalReference": "@xpack/doxygen2docusaurus!DoxygenXmlParser:class"
                },
                {
                  "kind": "Content",
                  "text": ", element: "
                },
                {
                  "kind": "Content",
                  "text": "object"
                },
                {
                  "kind": "Content",
                  "text": ", elementName: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "xml",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "element",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "elementName",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  },
                  "isOptional": false
                }
              ]
            },
            {
              "kind": "Property",
              "canonicalReference": "@xpack/doxygen2docusaurus!AbstractIncType#local:member",
              "docComment": "/**\n * Indicates whether the include uses local or system include syntax.\n *\n * @remarks\n *\n * Determines the include syntax style: when true, indicates a local include using quotation marks (\"filename\"), when false, indicates a system include using angle brackets (<filename>). This distinction affects how the preprocessor searches for the included file.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "local: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "local",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@xpack/doxygen2docusaurus!AbstractIncType#refId:member",
              "docComment": "/**\n * Optional reference identifier for cross-linking to the included file.\n *\n * @remarks\n *\n * Contains the reference identifier that links to the documentation of the included file. This enables navigation from include statements to the actual file documentation within the generated documentation system.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "refId?: "
                },
                {
                  "kind": "Content",
                  "text": "string | undefined"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "refId",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@xpack/doxygen2docusaurus!AbstractIncType#text:member",
              "docComment": "/**\n * The textual content representing the file path or name being included.\n *\n * @remarks\n *\n * Contains the file path or filename as specified in the include directive. This text content represents the actual filename that appears within the include statement in the source code, providing the reference to the included file within the documentation structure.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "text: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "text",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            }
          ],
          "extendsTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "Class",
          "canonicalReference": "@xpack/doxygen2docusaurus!AbstractIndexCompoundType:class",
          "docComment": "/**\n * Abstract base class for index compound type data models.\n *\n * @remarks\n *\n * Represents compound elements found within Doxygen index XML structures, corresponding to the CompoundType complex type in the XML schema. This class handles the parsing of compound names, member collections, and mandatory attributes (refid and kind). All concrete compound data model classes should extend this abstract base to ensure consistent parsing and data representation.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare abstract class AbstractIndexCompoundType extends "
            },
            {
              "kind": "Reference",
              "text": "AbstractDataModelBase",
              "canonicalReference": "@xpack/doxygen2docusaurus!AbstractDataModelBase:class"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "src/doxygen/data-model/index/indexcompoundtype-dm.ts",
          "releaseTag": "Public",
          "isAbstract": true,
          "name": "AbstractIndexCompoundType",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Constructor",
              "canonicalReference": "@xpack/doxygen2docusaurus!AbstractIndexCompoundType:constructor(1)",
              "docComment": "/**\n * Constructs a new AbstractIndexCompoundType instance from XML data.\n *\n * @remarks\n *\n * Parses the provided XML element to extract compound information including the name element, member collections, and mandatory attributes (refid and kind). The constructor validates that all required data is present and properly formatted according to the XML schema specifications. Member elements are processed into IndexMemberDataModel instances when present.\n *\n * @param xml - The Doxygen XML parser instance for processing XML elements\n *\n * @param element - The XML element containing the compound data\n *\n * @param elementName - The name of the XML element being processed\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor(xml: "
                },
                {
                  "kind": "Reference",
                  "text": "DoxygenXmlParser",
                  "canonicalReference": "@xpack/doxygen2docusaurus!DoxygenXmlParser:class"
                },
                {
                  "kind": "Content",
                  "text": ", element: "
                },
                {
                  "kind": "Content",
                  "text": "object"
                },
                {
                  "kind": "Content",
                  "text": ", elementName: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "xml",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "element",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "elementName",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  },
                  "isOptional": false
                }
              ]
            },
            {
              "kind": "Property",
              "canonicalReference": "@xpack/doxygen2docusaurus!AbstractIndexCompoundType#kind:member",
              "docComment": "/**\n * The kind classification of this compound.\n *\n * @remarks\n *\n * Mandatory attribute specifying the type of compound (e.g., class, struct, namespace, file). Corresponds to the CompoundKind enumeration in the XML schema, determining how the compound should be processed and presented.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "kind: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "kind",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@xpack/doxygen2docusaurus!AbstractIndexCompoundType#members:member",
              "docComment": "/**\n * Collection of member data models associated with this compound.\n *\n * @remarks\n *\n * Optional array containing member elements found within the compound structure. Each member represents a documented entity that belongs to this compound, such as functions, variables, or other nested constructs. The array supports zero to many members as per the XML schema.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "members: "
                },
                {
                  "kind": "Reference",
                  "text": "IndexMemberDataModel",
                  "canonicalReference": "@xpack/doxygen2docusaurus!IndexMemberDataModel:class"
                },
                {
                  "kind": "Content",
                  "text": "[] | undefined"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "members",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@xpack/doxygen2docusaurus!AbstractIndexCompoundType#name:member",
              "docComment": "/**\n * The name of the compound element.\n *\n * @remarks\n *\n * Extracted from the mandatory 'name' element within the compound XML structure. Represents the identifier or name of the documented compound such as a class name, namespace, or filename.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "name: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "name",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@xpack/doxygen2docusaurus!AbstractIndexCompoundType#refid:member",
              "docComment": "/**\n * The unique reference identifier for this compound.\n *\n * @remarks\n *\n * Mandatory attribute that provides a unique identifier for referencing this compound within the Doxygen documentation structure. Used to link index entries to their detailed definitions in separate XML files.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "refid: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "refid",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            }
          ],
          "extendsTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "Class",
          "canonicalReference": "@xpack/doxygen2docusaurus!AbstractIndexDoxygenType:class",
          "docComment": "/**\n * Abstract base class for Doxygen index type data models.\n *\n * @remarks\n *\n * Represents the top-level structure of Doxygen index XML files, corresponding to the DoxygenType complex type in the XML schema. This class handles the parsing of version and language attributes, along with compound element collections. Note that this definition may clash with similar types in compound.xsd, requiring careful namespace management.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare abstract class AbstractIndexDoxygenType extends "
            },
            {
              "kind": "Reference",
              "text": "AbstractDataModelBase",
              "canonicalReference": "@xpack/doxygen2docusaurus!AbstractDataModelBase:class"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "src/doxygen/data-model/index/indexdoxygentype-dm.ts",
          "releaseTag": "Public",
          "isAbstract": true,
          "name": "AbstractIndexDoxygenType",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Constructor",
              "canonicalReference": "@xpack/doxygen2docusaurus!AbstractIndexDoxygenType:constructor(1)",
              "docComment": "/**\n * Constructs a new AbstractIndexDoxygenType instance from XML data.\n *\n * @remarks\n *\n * Parses the provided XML element to extract Doxygen index information including compound collections and mandatory attributes (version and language). The constructor validates that all required attributes are present and processes compound elements into the appropriate data models. Optional schema location attributes are also extracted when present.\n *\n * @param xml - The Doxygen XML parser instance for processing XML elements\n *\n * @param element - The XML element containing the Doxygen index data\n *\n * @param elementName - The name of the XML element being processed\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor(xml: "
                },
                {
                  "kind": "Reference",
                  "text": "DoxygenXmlParser",
                  "canonicalReference": "@xpack/doxygen2docusaurus!DoxygenXmlParser:class"
                },
                {
                  "kind": "Content",
                  "text": ", element: "
                },
                {
                  "kind": "Content",
                  "text": "object"
                },
                {
                  "kind": "Content",
                  "text": ", elementName: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "xml",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "element",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "elementName",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  },
                  "isOptional": false
                }
              ]
            },
            {
              "kind": "Property",
              "canonicalReference": "@xpack/doxygen2docusaurus!AbstractIndexDoxygenType#compounds:member",
              "docComment": "/**\n * Collection of compound data models referenced in the index.\n *\n * @remarks\n *\n * Optional array containing compound elements found within the index structure. Each compound represents a documented entity such as classes, namespaces, or files that are catalogued in the index.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "compounds?: "
                },
                {
                  "kind": "Reference",
                  "text": "IndexCompoundDataModel",
                  "canonicalReference": "@xpack/doxygen2docusaurus!IndexCompoundDataModel:class"
                },
                {
                  "kind": "Content",
                  "text": "[] | undefined"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "compounds",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@xpack/doxygen2docusaurus!AbstractIndexDoxygenType#lang:member",
              "docComment": "/**\n * The language specification for the documentation content.\n *\n * @remarks\n *\n * Mandatory attribute corresponding to the xml:lang attribute in the XML structure. Specifies the primary language used in the documented content for internationalisation purposes.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "lang: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "lang",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@xpack/doxygen2docusaurus!AbstractIndexDoxygenType#noNamespaceSchemaLocation:member",
              "docComment": "/**\n * The XML schema location reference for validation.\n *\n * @remarks\n *\n * Optional attribute that specifies the location of the XML schema definition used for validating the structure of the index XML file. This provides schema validation capabilities for the parsed content.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "noNamespaceSchemaLocation?: "
                },
                {
                  "kind": "Content",
                  "text": "string | undefined"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "noNamespaceSchemaLocation",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@xpack/doxygen2docusaurus!AbstractIndexDoxygenType#version:member",
              "docComment": "/**\n * The version of the Doxygen tool that generated the XML.\n *\n * @remarks\n *\n * Mandatory attribute extracted from the XML structure that identifies the version of Doxygen used to generate the documentation. This information is crucial for compatibility and parsing decisions.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "version: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "version",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            }
          ],
          "extendsTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "Class",
          "canonicalReference": "@xpack/doxygen2docusaurus!AbstractIndexMemberType:class",
          "docComment": "/**\n * Abstract base class for index member type data models.\n *\n * @remarks\n *\n * Represents member elements found within Doxygen index XML structures, corresponding to the MemberType complex type in the XML schema. This class handles the parsing of member names, reference identifiers, and member kinds from the XML structure. All concrete member data model classes should extend this abstract base to ensure consistent parsing and data representation.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare abstract class AbstractIndexMemberType extends "
            },
            {
              "kind": "Reference",
              "text": "AbstractDataModelBase",
              "canonicalReference": "@xpack/doxygen2docusaurus!AbstractDataModelBase:class"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "src/doxygen/data-model/index/indexmembertype-dm.ts",
          "releaseTag": "Public",
          "isAbstract": true,
          "name": "AbstractIndexMemberType",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Constructor",
              "canonicalReference": "@xpack/doxygen2docusaurus!AbstractIndexMemberType:constructor(1)",
              "docComment": "/**\n * Constructs a new AbstractIndexMemberType instance from XML data.\n *\n * @remarks\n *\n * Parses the provided XML element to extract member information including the name element and mandatory attributes (refid and kind). The constructor validates that all required data is present and properly formatted according to the XML schema specifications.\n *\n * @param xml - The Doxygen XML parser instance for processing XML elements\n *\n * @param element - The XML element containing the member data\n *\n * @param elementName - The name of the XML element being processed\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor(xml: "
                },
                {
                  "kind": "Reference",
                  "text": "DoxygenXmlParser",
                  "canonicalReference": "@xpack/doxygen2docusaurus!DoxygenXmlParser:class"
                },
                {
                  "kind": "Content",
                  "text": ", element: "
                },
                {
                  "kind": "Content",
                  "text": "object"
                },
                {
                  "kind": "Content",
                  "text": ", elementName: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "xml",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "element",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "elementName",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  },
                  "isOptional": false
                }
              ]
            },
            {
              "kind": "Property",
              "canonicalReference": "@xpack/doxygen2docusaurus!AbstractIndexMemberType#kind:member",
              "docComment": "/**\n * The kind classification of the member.\n *\n * @remarks\n *\n * Mandatory attribute specifying the type of member (e.g., function, variable, typedef). Corresponds to the MemberKind enumeration in the XML schema.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "kind: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "kind",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@xpack/doxygen2docusaurus!AbstractIndexMemberType#name:member",
              "docComment": "/**\n * The name of the member element.\n *\n * @remarks\n *\n * Extracted from the mandatory 'name' element within the member XML structure. Represents the identifier or name of the documented member.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "name: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "name",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@xpack/doxygen2docusaurus!AbstractIndexMemberType#refid:member",
              "docComment": "/**\n * The reference identifier for the member.\n *\n * @remarks\n *\n * Mandatory attribute that provides a unique identifier for referencing this member within the Doxygen documentation structure. Used to link index entries to their detailed definitions.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "refid: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "refid",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            }
          ],
          "extendsTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "Class",
          "canonicalReference": "@xpack/doxygen2docusaurus!AbstractLinkedTextType:class",
          "docComment": "/**\n * Abstract base class for linked text elements within documentation content.\n *\n * @remarks\n *\n * Implements processing for linked text elements that contain mixed content including both textual content and reference elements. This class handles the XML Schema definition for linkedTextType elements, which support character data interspersed with reference elements that provide cross-linking capabilities within documentation structures.\n *\n * The implementation processes sequences of text strings and RefTextDataModel instances, maintaining their original order to preserve the intended content flow whilst enabling interactive cross-references within the generated documentation.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare abstract class AbstractLinkedTextType extends "
            },
            {
              "kind": "Reference",
              "text": "AbstractDataModelBase",
              "canonicalReference": "@xpack/doxygen2docusaurus!AbstractDataModelBase:class"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "src/doxygen/data-model/compounds/linkedtexttype-dm.ts",
          "releaseTag": "Public",
          "isAbstract": true,
          "name": "AbstractLinkedTextType",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Constructor",
              "canonicalReference": "@xpack/doxygen2docusaurus!AbstractLinkedTextType:constructor(1)",
              "docComment": "/**\n * Constructs an AbstractLinkedTextType instance from XML element data.\n *\n * @remarks\n *\n * This constructor processes linked text elements by extracting both textual content and reference elements in their original order. The parser maintains the mixed content structure whilst creating appropriate RefTextDataModel instances for cross-reference elements, ensuring proper content flow and interactive linking capabilities within the documentation system.\n *\n * @param xml - The Doxygen XML parser instance for processing XML content\n *\n * @param element - The XML element object containing the linked text data\n *\n * @param elementName - The name of the XML element being processed\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor(xml: "
                },
                {
                  "kind": "Reference",
                  "text": "DoxygenXmlParser",
                  "canonicalReference": "@xpack/doxygen2docusaurus!DoxygenXmlParser:class"
                },
                {
                  "kind": "Content",
                  "text": ", element: "
                },
                {
                  "kind": "Content",
                  "text": "object"
                },
                {
                  "kind": "Content",
                  "text": ", elementName: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "xml",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "element",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "elementName",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  },
                  "isOptional": false
                }
              ]
            }
          ],
          "extendsTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "Class",
          "canonicalReference": "@xpack/doxygen2docusaurus!AbstractListingType:class",
          "docComment": "/**\n * Abstract base class for processing listing-type XML elements with parsing logic.\n *\n * @remarks\n *\n * Extends the base listing properties with comprehensive XML parsing capabilities. This class handles the extraction of code lines and filename attributes from Doxygen XML structures, providing the foundation for program listings and similar code-containing elements.\n *\n * The parser processes codeline elements whilst ignoring textual content that may appear between structured elements, maintaining compatibility with the mixed-content nature of XML listings.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare abstract class AbstractListingType extends "
            },
            {
              "kind": "Reference",
              "text": "AbstractListingTypeBase",
              "canonicalReference": "@xpack/doxygen2docusaurus!AbstractListingTypeBase:class"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "src/doxygen/data-model/compounds/descriptiontype-dm.ts",
          "releaseTag": "Public",
          "isAbstract": true,
          "name": "AbstractListingType",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Constructor",
              "canonicalReference": "@xpack/doxygen2docusaurus!AbstractListingType:constructor(1)",
              "docComment": "/**\n * Constructs an AbstractListingType instance from XML element data.\n *\n * @remarks\n *\n * This constructor processes listing elements by extracting codeline children and filename attributes. Text content between elements is deliberately ignored to accommodate the mixed-content model of XML listings, focusing on the structured code line elements that contain the meaningful programming content.\n *\n * @param xml - The Doxygen XML parser instance for processing XML content\n *\n * @param element - The XML element object containing the listing data\n *\n * @param elementName - The name of the XML element being processed\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor(xml: "
                },
                {
                  "kind": "Reference",
                  "text": "DoxygenXmlParser",
                  "canonicalReference": "@xpack/doxygen2docusaurus!DoxygenXmlParser:class"
                },
                {
                  "kind": "Content",
                  "text": ", element: "
                },
                {
                  "kind": "Content",
                  "text": "object"
                },
                {
                  "kind": "Content",
                  "text": ", elementName: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "xml",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "element",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "elementName",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  },
                  "isOptional": false
                }
              ]
            }
          ],
          "extendsTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "Class",
          "canonicalReference": "@xpack/doxygen2docusaurus!AbstractListingTypeBase:class",
          "docComment": "/**\n * Abstract base class providing properties for listing-type XML elements.\n *\n * @remarks\n *\n * Defines the common structure for elements that contain code listings with optional filename attributes. This base class establishes the foundation for both full listing implementations and filtered subsets of code lines.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare abstract class AbstractListingTypeBase extends "
            },
            {
              "kind": "Reference",
              "text": "AbstractDataModelBase",
              "canonicalReference": "@xpack/doxygen2docusaurus!AbstractDataModelBase:class"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "src/doxygen/data-model/compounds/descriptiontype-dm.ts",
          "releaseTag": "Public",
          "isAbstract": true,
          "name": "AbstractListingTypeBase",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Property",
              "canonicalReference": "@xpack/doxygen2docusaurus!AbstractListingTypeBase#codelines:member",
              "docComment": "/**\n * Array of code line elements within the listing.\n *\n * @remarks\n *\n * Contains the individual code lines that comprise the listing content. Each code line may include syntax highlighting information, line numbers, and cross-reference data depending on the source documentation configuration.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "codelines?: "
                },
                {
                  "kind": "Reference",
                  "text": "CodeLineDataModel",
                  "canonicalReference": "@xpack/doxygen2docusaurus!CodeLineDataModel:class"
                },
                {
                  "kind": "Content",
                  "text": "[] | undefined"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "codelines",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@xpack/doxygen2docusaurus!AbstractListingTypeBase#filename:member",
              "docComment": "/**\n * Optional filename attribute for the listing source.\n *\n * @remarks\n *\n * Specifies the original filename of the source code when the listing represents content from a specific file. This attribute assists in providing context and navigation capabilities within the generated documentation.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "filename?: "
                },
                {
                  "kind": "Content",
                  "text": "string | undefined"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "filename",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            }
          ],
          "extendsTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "Class",
          "canonicalReference": "@xpack/doxygen2docusaurus!AbstractListOfAllMembersType:class",
          "docComment": "/**\n * Abstract base class for list-of-all-members elements within documentation.\n *\n * @remarks\n *\n * Implements processing for list-of-all-members elements that contain comprehensive member reference collections within class and compound documentation. This class handles the XML Schema definition for listofallmembersType elements, which provide complete inventories of all members (including inherited members) associated with classes, structures, and other compound types.\n *\n * The implementation processes sequences of member reference elements, creating MemberRefDataModel instances to maintain detailed information about each member's identity, scope, and accessibility within the compound's complete member hierarchy.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare abstract class AbstractListOfAllMembersType extends "
            },
            {
              "kind": "Reference",
              "text": "AbstractDataModelBase",
              "canonicalReference": "@xpack/doxygen2docusaurus!AbstractDataModelBase:class"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "src/doxygen/data-model/compounds/listofallmemberstype-dm.ts",
          "releaseTag": "Public",
          "isAbstract": true,
          "name": "AbstractListOfAllMembersType",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Constructor",
              "canonicalReference": "@xpack/doxygen2docusaurus!AbstractListOfAllMembersType:constructor(1)",
              "docComment": "/**\n * Constructs a new list-of-all-members data model instance.\n *\n * @remarks\n *\n * Processes the XML element to extract and organise member reference information, creating appropriate data model instances for each member entry found within the comprehensive member listing. The constructor validates the element structure and ensures all member references are properly instantiated.\n *\n * @param xml - The XML parser instance for processing elements\n *\n * @param element - The source XML element containing list-of-all-members data\n *\n * @param elementName - The name of the XML element being processed\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor(xml: "
                },
                {
                  "kind": "Reference",
                  "text": "DoxygenXmlParser",
                  "canonicalReference": "@xpack/doxygen2docusaurus!DoxygenXmlParser:class"
                },
                {
                  "kind": "Content",
                  "text": ", element: "
                },
                {
                  "kind": "Content",
                  "text": "object"
                },
                {
                  "kind": "Content",
                  "text": ", elementName: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "xml",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "element",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "elementName",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  },
                  "isOptional": false
                }
              ]
            },
            {
              "kind": "Property",
              "canonicalReference": "@xpack/doxygen2docusaurus!AbstractListOfAllMembersType#memberRefs:member",
              "docComment": "/**\n * Collection of member reference elements within the list-of-all-members.\n *\n * @remarks\n *\n * Contains processed member reference data models representing all members associated with the compound, including both directly declared and inherited members. Each reference provides comprehensive identification and scope information for the corresponding member element.\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "memberRefs?: "
                },
                {
                  "kind": "Reference",
                  "text": "MemberRefDataModel",
                  "canonicalReference": "@xpack/doxygen2docusaurus!MemberRefDataModel:class"
                },
                {
                  "kind": "Content",
                  "text": "[] | undefined"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "memberRefs",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            }
          ],
          "extendsTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "Class",
          "canonicalReference": "@xpack/doxygen2docusaurus!AbstractLocationType:class",
          "docComment": "/**\n * Abstract base class for location information data models.\n *\n * @remarks\n *\n * Represents comprehensive source code location information as parsed from Doxygen XML elements, including file paths, line numbers, and column positions for both declarations and implementations. This class provides the foundation for tracking source location references within the documentation system, enabling precise navigation between documentation and source code.\n *\n * The implementation handles the XML Schema definition for locationType elements, which contain detailed positioning information for code elements including separate tracking of declaration and implementation locations when they differ (such as header/source file pairs).\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare abstract class AbstractLocationType extends "
            },
            {
              "kind": "Reference",
              "text": "AbstractDataModelBase",
              "canonicalReference": "@xpack/doxygen2docusaurus!AbstractDataModelBase:class"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "src/doxygen/data-model/compounds/locationtype-dm.ts",
          "releaseTag": "Public",
          "isAbstract": true,
          "name": "AbstractLocationType",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Constructor",
              "canonicalReference": "@xpack/doxygen2docusaurus!AbstractLocationType:constructor(1)",
              "docComment": "/**\n * Constructs a new location data model from XML element data.\n *\n * @remarks\n *\n * Parses the XML element representing location information and extracts file paths, line numbers, and column positions for declarations and implementations. The constructor processes all available location attributes whilst handling the distinction between declaration and implementation locations when they differ.\n *\n * The implementation ensures that mandatory file information is present and validates the element structure according to the XML Schema definition for locationType elements.\n *\n * @param xml - The XML parser instance for processing element data\n *\n * @param element - The XML element containing location information\n *\n * @param elementName - The name of the XML element being processed\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor(xml: "
                },
                {
                  "kind": "Reference",
                  "text": "DoxygenXmlParser",
                  "canonicalReference": "@xpack/doxygen2docusaurus!DoxygenXmlParser:class"
                },
                {
                  "kind": "Content",
                  "text": ", element: "
                },
                {
                  "kind": "Content",
                  "text": "object"
                },
                {
                  "kind": "Content",
                  "text": ", elementName: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "xml",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "element",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "elementName",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  },
                  "isOptional": false
                }
              ]
            },
            {
              "kind": "Property",
              "canonicalReference": "@xpack/doxygen2docusaurus!AbstractLocationType#bodyend:member",
              "docComment": "/**\n * The ending line number of the implementation body.\n *\n * @remarks\n *\n * Line number where the implementation body ends, providing the complete range of the implementation. Together with bodystart, this defines the full extent of the implementation code within the source file.\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "bodyend?: "
                },
                {
                  "kind": "Content",
                  "text": "number | undefined"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "bodyend",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@xpack/doxygen2docusaurus!AbstractLocationType#bodyfile:member",
              "docComment": "/**\n * The file path containing the implementation body.\n *\n * @remarks\n *\n * File path where the function or method body is implemented, separate from the declaration when they differ. This is particularly relevant for languages that support separate declaration and implementation files, enabling precise navigation to implementation code.\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "bodyfile?: "
                },
                {
                  "kind": "Content",
                  "text": "string | undefined"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "bodyfile",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@xpack/doxygen2docusaurus!AbstractLocationType#bodystart:member",
              "docComment": "/**\n * The starting line number of the implementation body.\n *\n * @remarks\n *\n * Line number where the implementation body begins, providing the starting boundary for locating function or method implementations. This is useful for identifying the complete scope of implementation code.\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "bodystart?: "
                },
                {
                  "kind": "Content",
                  "text": "number | undefined"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "bodystart",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@xpack/doxygen2docusaurus!AbstractLocationType#column:member",
              "docComment": "/**\n * The column number in the primary source file.\n *\n * @remarks\n *\n * Column position where the declaration or definition begins, providing precise horizontal location information when available. This enables accurate source code navigation and positioning within development environments.\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "column?: "
                },
                {
                  "kind": "Content",
                  "text": "number | undefined"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "column",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@xpack/doxygen2docusaurus!AbstractLocationType#declcolumn:member",
              "docComment": "/**\n * The column number of the declaration within the declaration file.\n *\n * @remarks\n *\n * Column position where the declaration begins, providing precise horizontal location information for the declaration. This enables accurate positioning within development environments when navigating to declaration locations.\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "declcolumn?: "
                },
                {
                  "kind": "Content",
                  "text": "number | undefined"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "declcolumn",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@xpack/doxygen2docusaurus!AbstractLocationType#declfile:member",
              "docComment": "/**\n * The file path containing the declaration when separate from implementation.\n *\n * @remarks\n *\n * File path for the declaration when it differs from the implementation file, typically occurring in header/source file pairs where declarations are placed in header files whilst implementations reside in source files. This separation is common in C/C++ development patterns.\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "declfile?: "
                },
                {
                  "kind": "Content",
                  "text": "string | undefined"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "declfile",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@xpack/doxygen2docusaurus!AbstractLocationType#declline:member",
              "docComment": "/**\n * The line number of the declaration within the declaration file.\n *\n * @remarks\n *\n * Line number where the declaration appears, separate from the implementation location when they differ. This provides precise positioning within the declaration file for accurate source navigation.\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "declline?: "
                },
                {
                  "kind": "Content",
                  "text": "number | undefined"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "declline",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@xpack/doxygen2docusaurus!AbstractLocationType#file:member",
              "docComment": "/**\n * The source file path containing the primary declaration or definition.\n *\n * @remarks\n *\n * File path as recorded by Doxygen, typically relative to the source tree root or absolute depending on configuration settings. This represents the primary file location where the documented element is defined.\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "file: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "file",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@xpack/doxygen2docusaurus!AbstractLocationType#line:member",
              "docComment": "/**\n * The line number in the primary source file.\n *\n * @remarks\n *\n * Line number where the declaration or definition appears within the primary source file. Note that whilst the XSD specification indicates this as mandatory, in practice it may be undefined for certain elements where precise line information is not available or applicable.\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "line?: "
                },
                {
                  "kind": "Content",
                  "text": "number | undefined"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "line",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            }
          ],
          "extendsTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "Class",
          "canonicalReference": "@xpack/doxygen2docusaurus!AbstractMemberBaseType:class",
          "docComment": "/**\n * Abstract base class for member-related data models within documentation.\n *\n * @remarks\n *\n * Provides foundational functionality for all member-related elements within the Doxygen documentation system. This class establishes the basic structure for member identification and classification, serving as the foundation for more specific member definition processing.\n *\n * The class maintains essential member information including name and kind identification, which are fundamental properties required by all member types within the documentation hierarchy.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare abstract class AbstractMemberBaseType extends "
            },
            {
              "kind": "Reference",
              "text": "AbstractDataModelBase",
              "canonicalReference": "@xpack/doxygen2docusaurus!AbstractDataModelBase:class"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "src/doxygen/data-model/compounds/memberdeftype-dm.ts",
          "releaseTag": "Public",
          "isAbstract": true,
          "name": "AbstractMemberBaseType",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Property",
              "canonicalReference": "@xpack/doxygen2docusaurus!AbstractMemberBaseType#kind:member",
              "docComment": "/**\n * The kind classification of the member element.\n *\n * @remarks\n *\n * Specifies the type category of the member, corresponding to the DoxMemberKind enumeration values. This classification determines how the member is processed and presented within the documentation generation workflow.\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "kind: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "kind",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@xpack/doxygen2docusaurus!AbstractMemberBaseType#name:member",
              "docComment": "/**\n * The name of the member element.\n *\n * @remarks\n *\n * Contains the identifier name for the member as extracted from the documentation source. This represents the primary identification mechanism for the member within its containing scope.\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "name: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "name",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            }
          ],
          "extendsTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "Class",
          "canonicalReference": "@xpack/doxygen2docusaurus!AbstractMemberDefType:class",
          "docComment": "/**\n * Abstract base class for comprehensive member definition data models.\n *\n * @remarks\n *\n * Extends the basic member functionality to provide complete member definition processing capabilities. This class handles the complex XML Schema definition for memberdefType elements, which represent detailed member information including location data, type information, parameters, descriptions, and various language-specific attributes.\n *\n * The implementation processes extensive member metadata including template parameters, function signatures, initialization values, documentation descriptions, and cross-reference information. It also manages a comprehensive set of language-specific attributes covering C++, Qt, C++/CLI, C#, Objective-C, and UNO IDL constructs.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare abstract class AbstractMemberDefType extends "
            },
            {
              "kind": "Reference",
              "text": "AbstractMemberBaseType",
              "canonicalReference": "@xpack/doxygen2docusaurus!AbstractMemberBaseType:class"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "src/doxygen/data-model/compounds/memberdeftype-dm.ts",
          "releaseTag": "Public",
          "isAbstract": true,
          "name": "AbstractMemberDefType",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Constructor",
              "canonicalReference": "@xpack/doxygen2docusaurus!AbstractMemberDefType:constructor(1)",
              "docComment": "/**\n * Constructs a new member definition data model from XML element data.\n *\n * @remarks\n *\n * Processes the comprehensive XML element representing member definition information and extracts all available metadata including location data, type information, parameters, descriptions, and language-specific attributes. The constructor handles the complex memberdefType schema with its extensive set of optional elements and attributes.\n *\n * The implementation validates mandatory elements (name, location, kind, id, protection) whilst gracefully handling optional elements and attributes. It processes various member types including functions, variables, typedefs, enums, and specialised constructs from multiple programming languages and frameworks.\n *\n * @param xml - The XML parser instance for processing element data\n *\n * @param element - The XML element containing member definition information\n *\n * @param elementName - The name of the XML element being processed\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor(xml: "
                },
                {
                  "kind": "Reference",
                  "text": "DoxygenXmlParser",
                  "canonicalReference": "@xpack/doxygen2docusaurus!DoxygenXmlParser:class"
                },
                {
                  "kind": "Content",
                  "text": ", element: "
                },
                {
                  "kind": "Content",
                  "text": "object"
                },
                {
                  "kind": "Content",
                  "text": ", elementName: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "xml",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "element",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "elementName",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  },
                  "isOptional": false
                }
              ]
            },
            {
              "kind": "Property",
              "canonicalReference": "@xpack/doxygen2docusaurus!AbstractMemberDefType#argsstring:member",
              "docComment": "/**\n * The argument string for function members.\n *\n * @remarks\n *\n * Contains the parameter list specification for function-like members, including parameter types, names, and default values. This information is essential for understanding function signatures and usage.\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "argsstring?: "
                },
                {
                  "kind": "Content",
                  "text": "string | undefined"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "argsstring",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@xpack/doxygen2docusaurus!AbstractMemberDefType#bitfield:member",
              "docComment": "/**\n * Bitfield specification for member variables.\n *\n * @remarks\n *\n * Contains the bitfield width specification for member variables that are declared as bitfields in C/C++ structures or classes. This string represents the number of bits allocated to the member within the containing structure's memory layout.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "bitfield?: "
                },
                {
                  "kind": "Content",
                  "text": "string | undefined"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "bitfield",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@xpack/doxygen2docusaurus!AbstractMemberDefType#briefDescription:member",
              "docComment": "/**\n * Brief description of the member.\n *\n * @remarks\n *\n * Contains a concise summary description of the member extracted from documentation comments. This brief description is typically used in member listings and summary views to provide quick understanding of the member's purpose.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "briefDescription?: "
                },
                {
                  "kind": "Reference",
                  "text": "BriefDescriptionDataModel",
                  "canonicalReference": "@xpack/doxygen2docusaurus!BriefDescriptionDataModel:class"
                },
                {
                  "kind": "Content",
                  "text": " | undefined"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "briefDescription",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@xpack/doxygen2docusaurus!AbstractMemberDefType#consteval:member",
              "docComment": "/**\n * Indicates whether the member is declared as consteval.\n *\n * @remarks\n *\n * Boolean flag indicating that the member must be evaluated at compile time. This C++20 feature is stronger than constexpr, requiring immediate evaluation during compilation.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "consteval?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean | undefined"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "consteval",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@xpack/doxygen2docusaurus!AbstractMemberDefType#constexpr:member",
              "docComment": "/**\n * Indicates whether the member is declared as constexpr.\n *\n * @remarks\n *\n * Boolean flag indicating that the member can be evaluated at compile time when given constant expressions as arguments. This C++11 feature enables compile-time computation and optimization.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constexpr?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean | undefined"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "constexpr",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@xpack/doxygen2docusaurus!AbstractMemberDefType#constinit:member",
              "docComment": "/**\n * Indicates whether the member is declared as constinit.\n *\n * @remarks\n *\n * Boolean flag indicating that the member must be initialized with a constant expression during static initialization. This C++20 feature helps prevent initialization order issues.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constinit?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean | undefined"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "constinit",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@xpack/doxygen2docusaurus!AbstractMemberDefType#constt:member",
              "docComment": "/**\n * Indicates whether the member is declared as const.\n *\n * @remarks\n *\n * Boolean flag indicating that the member is declared with the const qualifier, making it immutable after initialization. This affects the member's usage patterns and compiler optimizations.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constt?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean | undefined"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "constt",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@xpack/doxygen2docusaurus!AbstractMemberDefType#definition:member",
              "docComment": "/**\n * The complete definition string for the member.\n *\n * @remarks\n *\n * Contains the full member definition as it appears in the source code, including type information, qualifiers, and parameter lists. This provides the complete syntactic representation of the member.\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "definition?: "
                },
                {
                  "kind": "Content",
                  "text": "string | undefined"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "definition",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@xpack/doxygen2docusaurus!AbstractMemberDefType#detailedDescription:member",
              "docComment": "/**\n * Detailed description of the member.\n *\n * @remarks\n *\n * Contains comprehensive documentation for the member including detailed explanations, usage examples, parameter descriptions, and return value information. This forms the primary documentation content for the member in generated API documentation.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "detailedDescription?: "
                },
                {
                  "kind": "Reference",
                  "text": "DetailedDescriptionDataModel",
                  "canonicalReference": "@xpack/doxygen2docusaurus!DetailedDescriptionDataModel:class"
                },
                {
                  "kind": "Content",
                  "text": " | undefined"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "detailedDescription",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@xpack/doxygen2docusaurus!AbstractMemberDefType#enumvalues:member",
              "docComment": "/**\n * Enumeration values for enum members.\n *\n * @remarks\n *\n * Contains the list of enumeration constants when the member is an enum type. Each enumeration value includes its name, numeric value, and associated documentation, providing complete enum documentation for API references.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "enumvalues?: "
                },
                {
                  "kind": "Reference",
                  "text": "EnumValueDataModel",
                  "canonicalReference": "@xpack/doxygen2docusaurus!EnumValueDataModel:class"
                },
                {
                  "kind": "Content",
                  "text": "[] | undefined"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "enumvalues",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@xpack/doxygen2docusaurus!AbstractMemberDefType#explicit:member",
              "docComment": "/**\n * Indicates whether the member is declared as explicit.\n *\n * @remarks\n *\n * Boolean flag indicating that constructors or conversion operators are marked as explicit, preventing implicit conversions. This is particularly important for type safety in C++ class design.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "explicit?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean | undefined"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "explicit",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@xpack/doxygen2docusaurus!AbstractMemberDefType#extern:member",
              "docComment": "/**\n * Indicates whether the member has external linkage.\n *\n * @remarks\n *\n * Boolean flag indicating that the member is declared with external linkage, typically using the 'extern' keyword in C/C++. This affects the member's visibility and linkage across translation units.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "extern?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean | undefined"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "extern",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@xpack/doxygen2docusaurus!AbstractMemberDefType#final:member",
              "docComment": "/**\n * Indicates whether the member is declared as final.\n *\n * @remarks\n *\n * Boolean flag indicating that virtual members cannot be overridden in derived classes. This provides explicit control over inheritance hierarchies and enables compiler optimizations.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "final?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean | undefined"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "final",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@xpack/doxygen2docusaurus!AbstractMemberDefType#id:member",
              "docComment": "/**\n * The unique identifier for the member element.\n *\n * @remarks\n *\n * Provides a unique identification string for the member within the documentation system. This identifier is used for cross-referencing and linking between different parts of the documentation.\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "id: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "id",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@xpack/doxygen2docusaurus!AbstractMemberDefType#inbodyDescription:member",
              "docComment": "/**\n * In-body description of the member.\n *\n * @remarks\n *\n * Contains documentation that appears within the member's implementation body, typically used for additional implementation notes or internal documentation that supplements the main member description.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "inbodyDescription?: "
                },
                {
                  "kind": "Reference",
                  "text": "InbodyDescriptionDataModel",
                  "canonicalReference": "@xpack/doxygen2docusaurus!InbodyDescriptionDataModel:class"
                },
                {
                  "kind": "Content",
                  "text": " | undefined"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "inbodyDescription",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@xpack/doxygen2docusaurus!AbstractMemberDefType#initializer:member",
              "docComment": "/**\n * Initializer expression for the member.\n *\n * @remarks\n *\n * Contains the initialization expression or default value assigned to the member in its declaration. This linked text may include cross-references to other documented entities and provides insight into the member's default behaviour or initial state.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "initializer?: "
                },
                {
                  "kind": "Reference",
                  "text": "InitializerDataModel",
                  "canonicalReference": "@xpack/doxygen2docusaurus!InitializerDataModel:class"
                },
                {
                  "kind": "Content",
                  "text": " | undefined"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "initializer",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@xpack/doxygen2docusaurus!AbstractMemberDefType#inline:member",
              "docComment": "/**\n * Indicates whether the member is declared as inline.\n *\n * @remarks\n *\n * Boolean flag indicating that the member is defined inline, suggesting to the compiler that calls should be expanded in place rather than using function call mechanisms. This affects performance and linking.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "inline?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean | undefined"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "inline",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@xpack/doxygen2docusaurus!AbstractMemberDefType#location:member",
              "docComment": "/**\n * The location information for the member definition.\n *\n * @remarks\n *\n * Contains comprehensive source code location data including file paths, line numbers, and column positions for both declarations and implementations. This enables precise navigation between documentation and source code.\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "location: "
                },
                {
                  "kind": "Reference",
                  "text": "LocationDataModel",
                  "canonicalReference": "@xpack/doxygen2docusaurus!LocationDataModel:class"
                },
                {
                  "kind": "Content",
                  "text": " | undefined"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "location",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@xpack/doxygen2docusaurus!AbstractMemberDefType#mutable:member",
              "docComment": "/**\n * Indicates whether the member is declared as mutable.\n *\n * @remarks\n *\n * Boolean flag indicating that the member can be modified even in const objects. This is typically used for caching, lazy evaluation, or other implementation details that don't affect the logical state.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "mutable?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean | undefined"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "mutable",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@xpack/doxygen2docusaurus!AbstractMemberDefType#nodiscard:member",
              "docComment": "/**\n * Indicates whether the member is declared as nodiscard.\n *\n * @remarks\n *\n * Boolean flag indicating that the member's return value should not be ignored by callers. This C++17 attribute helps prevent common programming errors where important return values are discarded.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "nodiscard?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean | undefined"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "nodiscard",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@xpack/doxygen2docusaurus!AbstractMemberDefType#noexcept:member",
              "docComment": "/**\n * Indicates whether the member is declared as noexcept.\n *\n * @remarks\n *\n * Boolean flag indicating that the member promises not to throw exceptions. This C++11 feature enables compiler optimizations and affects exception safety guarantees in the API design.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "noexcept?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean | undefined"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "noexcept",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@xpack/doxygen2docusaurus!AbstractMemberDefType#noexceptexpression:member",
              "docComment": "/**\n * Indicates whether the member has a noexcept expression.\n *\n * @remarks\n *\n * Boolean flag indicating that the member's noexcept specification includes a conditional expression that determines exception safety at compile time based on template parameters or other conditions.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "noexceptexpression?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean | undefined"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "noexceptexpression",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@xpack/doxygen2docusaurus!AbstractMemberDefType#params:member",
              "docComment": "/**\n * Parameter list for function or method members.\n *\n * @remarks\n *\n * Contains detailed parameter information for function-like members, including parameter names, types, descriptions, and default values. This comprehensive parameter data enables complete function signature documentation and API reference generation.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "params?: "
                },
                {
                  "kind": "Reference",
                  "text": "ParamDataModel",
                  "canonicalReference": "@xpack/doxygen2docusaurus!ParamDataModel:class"
                },
                {
                  "kind": "Content",
                  "text": "[] | undefined"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "params",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@xpack/doxygen2docusaurus!AbstractMemberDefType#prot:member",
              "docComment": "/**\n * The protection level of the member element.\n *\n * @remarks\n *\n * Specifies the access protection level (public, protected, private) for the member, determining its visibility and accessibility within the containing class or namespace scope.\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "prot: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "prot",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@xpack/doxygen2docusaurus!AbstractMemberDefType#qualifiedName:member",
              "docComment": "/**\n * The fully qualified name of the member element.\n *\n * @remarks\n *\n * Provides the complete qualified name including namespace and class prefixes, enabling unambiguous identification of the member within the entire codebase context.\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "qualifiedName?: "
                },
                {
                  "kind": "Content",
                  "text": "string | undefined"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "qualifiedName",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@xpack/doxygen2docusaurus!AbstractMemberDefType#referencedBy:member",
              "docComment": "/**\n * References to this member from other entities.\n *\n * @remarks\n *\n * Contains a list of other documented entities that reference or use this member. This reverse reference information helps understand the member's usage throughout the codebase and enables comprehensive cross-reference navigation.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "referencedBy?: "
                },
                {
                  "kind": "Reference",
                  "text": "ReferencedByDataModel",
                  "canonicalReference": "@xpack/doxygen2docusaurus!ReferencedByDataModel:class"
                },
                {
                  "kind": "Content",
                  "text": "[] | undefined"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "referencedBy",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@xpack/doxygen2docusaurus!AbstractMemberDefType#references:member",
              "docComment": "/**\n * References made by this member to other entities.\n *\n * @remarks\n *\n * Contains a list of references to other documented entities that this member uses or calls. This information enables dependency analysis and cross-reference navigation in the generated documentation.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "references?: "
                },
                {
                  "kind": "Reference",
                  "text": "ReferenceDataModel",
                  "canonicalReference": "@xpack/doxygen2docusaurus!ReferenceDataModel:class"
                },
                {
                  "kind": "Content",
                  "text": "[] | undefined"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "references",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@xpack/doxygen2docusaurus!AbstractMemberDefType#refqual:member",
              "docComment": "/**\n * Indicates the reference qualifier for the member.\n *\n * @remarks\n *\n * Boolean flag related to C++11 reference qualifiers (&, &&) that specify whether member functions can be called on lvalue or rvalue objects. This affects method overload resolution and move semantics.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "refqual?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean | undefined"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "refqual",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@xpack/doxygen2docusaurus!AbstractMemberDefType#reimplementedBys:member",
              "docComment": "/**\n * List of members that reimplement this member.\n *\n * @remarks\n *\n * Contains references to derived class members that reimplement or override this member. This property provides reverse inheritance relationship information, showing which child classes provide alternative implementations of this member.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "reimplementedBys?: "
                },
                {
                  "kind": "Reference",
                  "text": "ReimplementDataModel",
                  "canonicalReference": "@xpack/doxygen2docusaurus!ReimplementDataModel:class"
                },
                {
                  "kind": "Content",
                  "text": "[] | undefined"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "reimplementedBys",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@xpack/doxygen2docusaurus!AbstractMemberDefType#reimplements:member",
              "docComment": "/**\n * List of reimplemented member references.\n *\n * @remarks\n *\n * Contains references to members that this member reimplements or overrides from base classes. This property captures inheritance relationships where the current member provides a new implementation of a virtual method from a parent class.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "reimplements?: "
                },
                {
                  "kind": "Reference",
                  "text": "ReimplementDataModel",
                  "canonicalReference": "@xpack/doxygen2docusaurus!ReimplementDataModel:class"
                },
                {
                  "kind": "Content",
                  "text": "[] | undefined"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "reimplements",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@xpack/doxygen2docusaurus!AbstractMemberDefType#staticc:member",
              "docComment": "/**\n * Indicates whether the member is declared as static.\n *\n * @remarks\n *\n * Boolean flag indicating static member declaration, affecting the member's association with class instances versus the class itself. This information is crucial for understanding member accessibility and usage patterns.\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "staticc: "
                },
                {
                  "kind": "Content",
                  "text": "boolean | undefined"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "staticc",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@xpack/doxygen2docusaurus!AbstractMemberDefType#strong:member",
              "docComment": "/**\n * Indicates whether the member has strong typing.\n *\n * @remarks\n *\n * Boolean flag indicating strong type enforcement for the member, typically used in languages or contexts where type strength can be explicitly specified to prevent implicit conversions.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "strong?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean | undefined"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "strong",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@xpack/doxygen2docusaurus!AbstractMemberDefType#templateparamlist:member",
              "docComment": "/**\n * Template parameter list information for templated members.\n *\n * @remarks\n *\n * Contains detailed information about template parameters when the member is part of a template declaration. This includes parameter names, types, and default values essential for template documentation.\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "templateparamlist?: "
                },
                {
                  "kind": "Reference",
                  "text": "TemplateParamListDataModel",
                  "canonicalReference": "@xpack/doxygen2docusaurus!TemplateParamListDataModel:class"
                },
                {
                  "kind": "Content",
                  "text": " | undefined"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "templateparamlist",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@xpack/doxygen2docusaurus!AbstractMemberDefType#type:member",
              "docComment": "/**\n * Type information for the member element.\n *\n * @remarks\n *\n * Provides comprehensive type data including linked text with embedded cross-references. This information describes the member's data type, return type for functions, or variable type for data members.\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "type?: "
                },
                {
                  "kind": "Reference",
                  "text": "TypeDataModel",
                  "canonicalReference": "@xpack/doxygen2docusaurus!TypeDataModel:class"
                },
                {
                  "kind": "Content",
                  "text": " | undefined"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "type",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@xpack/doxygen2docusaurus!AbstractMemberDefType#virt:member",
              "docComment": "/**\n * Virtual specification for the member.\n *\n * @remarks\n *\n * String indicating the virtual nature of the member using DoxVirtualKind values ('non-virtual', 'virtual', 'pure-virtual'). This determines the member's behaviour in inheritance hierarchies and polymorphism.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "virt?: "
                },
                {
                  "kind": "Content",
                  "text": "string | undefined"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "virt",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@xpack/doxygen2docusaurus!AbstractMemberDefType#volatile:member",
              "docComment": "/**\n * Indicates whether the member is declared as volatile.\n *\n * @remarks\n *\n * Boolean flag indicating that the member is declared with the volatile qualifier, preventing compiler optimizations that assume the value doesn't change unexpectedly. This is important for hardware registers and multi-threaded contexts.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "volatile?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean | undefined"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "volatile",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            }
          ],
          "extendsTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "Class",
          "canonicalReference": "@xpack/doxygen2docusaurus!AbstractMemberRefType:class",
          "docComment": "/**\n * Abstract base class for member reference data models within documentation.\n *\n * @remarks\n *\n * Represents comprehensive references to class or namespace members as parsed from Doxygen XML elements. This class processes memberRefType schema definitions which contain scope information, member names, and essential attributes required for cross-referencing and link generation within the documentation system.\n *\n * The implementation handles the complete set of member reference metadata including qualified scope identification, protection levels, virtual inheritance characteristics, and ambiguity resolution information. This enables accurate cross-reference generation and navigation between different parts of the documentation.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare abstract class AbstractMemberRefType extends "
            },
            {
              "kind": "Reference",
              "text": "AbstractDataModelBase",
              "canonicalReference": "@xpack/doxygen2docusaurus!AbstractDataModelBase:class"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "src/doxygen/data-model/compounds/memberreftype-dm.ts",
          "releaseTag": "Public",
          "isAbstract": true,
          "name": "AbstractMemberRefType",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Constructor",
              "canonicalReference": "@xpack/doxygen2docusaurus!AbstractMemberRefType:constructor(1)",
              "docComment": "/**\n * Constructs a new member reference data model from XML element data.\n *\n * @remarks\n *\n * Processes the XML element representing member reference information and extracts scope identification, member names, and reference attributes required for cross-referencing functionality. The constructor validates mandatory elements and attributes whilst gracefully handling optional ambiguity scope information.\n *\n * The implementation ensures that essential reference data (scope, name, refid, protection, virtual kind) is properly extracted and validated according to the memberRefType schema requirements.\n *\n * @param xml - The XML parser instance for processing element data\n *\n * @param element - The XML element containing member reference information\n *\n * @param elementName - The name of the XML element being processed\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor(xml: "
                },
                {
                  "kind": "Reference",
                  "text": "DoxygenXmlParser",
                  "canonicalReference": "@xpack/doxygen2docusaurus!DoxygenXmlParser:class"
                },
                {
                  "kind": "Content",
                  "text": ", element: "
                },
                {
                  "kind": "Content",
                  "text": "object"
                },
                {
                  "kind": "Content",
                  "text": ", elementName: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "xml",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "element",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "elementName",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  },
                  "isOptional": false
                }
              ]
            },
            {
              "kind": "Property",
              "canonicalReference": "@xpack/doxygen2docusaurus!AbstractMemberRefType#ambiguityscope:member",
              "docComment": "/**\n * The ambiguity resolution scope for member reference disambiguation.\n *\n * @remarks\n *\n * Provides optional scope information used to resolve ambiguous member references when multiple members with identical names exist within the documentation context. This field assists in ensuring accurate member identification when name conflicts occur.\n *\n * Note that this deviates from the XML Schema definition where it is marked as required, but in practice may be undefined for certain member references.\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "ambiguityscope?: "
                },
                {
                  "kind": "Content",
                  "text": "string | undefined"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "ambiguityscope",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@xpack/doxygen2docusaurus!AbstractMemberRefType#name:member",
              "docComment": "/**\n * The identifier name of the referenced member element.\n *\n * @remarks\n *\n * Contains the simple identifier name for the member being referenced, which serves as the primary display name and is used for link generation within the documentation system. This name is used in conjunction with the scope to provide complete member identification.\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "name: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "name",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@xpack/doxygen2docusaurus!AbstractMemberRefType#prot:member",
              "docComment": "/**\n * The protection level classification of the referenced member.\n *\n * @remarks\n *\n * Specifies the access protection level such as 'public', 'private', or 'protected' based on Doxygen's DoxProtectionKind enumeration. This information determines the member's visibility and accessibility within its containing scope and affects documentation presentation.\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "prot: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "prot",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@xpack/doxygen2docusaurus!AbstractMemberRefType#refid:member",
              "docComment": "/**\n * The unique reference identifier for cross-referencing the member.\n *\n * @remarks\n *\n * Contains the Doxygen-generated unique identifier used for creating precise cross-references and hyperlinks to the member documentation. This identifier ensures unambiguous linking between documentation elements and enables accurate navigation within the generated documentation system.\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "refid: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "refid",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@xpack/doxygen2docusaurus!AbstractMemberRefType#scope:member",
              "docComment": "/**\n * The containing scope for the referenced member element.\n *\n * @remarks\n *\n * Specifies the namespace, class, or other containing context that houses the referenced member. This scope information provides the qualified context necessary for proper member identification and disambiguation within the documentation hierarchy.\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "scope: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "scope",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@xpack/doxygen2docusaurus!AbstractMemberRefType#virt:member",
              "docComment": "/**\n * The virtual inheritance classification of the referenced member.\n *\n * @remarks\n *\n * Indicates the virtual nature such as 'virtual', 'pure-virtual', or 'non-virtual' based on Doxygen's DoxVirtualKind enumeration. This classification is essential for understanding inheritance relationships and member override behaviour within class hierarchies.\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "virt: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "virt",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            }
          ],
          "extendsTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "Class",
          "canonicalReference": "@xpack/doxygen2docusaurus!AbstractMemberType:class",
          "docComment": "/**\n * Abstract base class for member type data models within documentation.\n *\n * @remarks\n *\n * Represents member elements as defined by the MemberType XML Schema, providing fundamental member identification and classification functionality. This class extends AbstractMemberBaseType to handle the specific requirements of member elements that contain simplified member information with reference identifiers.\n *\n * The implementation processes member elements that primarily serve as lightweight references to more detailed member definitions, maintaining essential identification data including names, reference identifiers, and member kind classifications for cross-referencing purposes.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare abstract class AbstractMemberType extends "
            },
            {
              "kind": "Reference",
              "text": "AbstractMemberBaseType",
              "canonicalReference": "@xpack/doxygen2docusaurus!AbstractMemberBaseType:class"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "src/doxygen/data-model/compounds/membertype-dm.ts",
          "releaseTag": "Public",
          "isAbstract": true,
          "name": "AbstractMemberType",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Constructor",
              "canonicalReference": "@xpack/doxygen2docusaurus!AbstractMemberType:constructor(1)",
              "docComment": "/**\n * Constructs a new member type data model from XML element data.\n *\n * @remarks\n *\n * Processes the XML element representing simplified member information and extracts the essential identification data including name and reference identifier. The constructor handles the MemberType schema requirements whilst accommodating the practical deviation where member names may be empty in certain contexts.\n *\n * The implementation validates mandatory attributes (refid, kind) and ensures proper element structure according to the XML Schema definition for MemberType elements.\n *\n * @param xml - The XML parser instance for processing element data\n *\n * @param element - The XML element containing member type information\n *\n * @param elementName - The name of the XML element being processed\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor(xml: "
                },
                {
                  "kind": "Reference",
                  "text": "DoxygenXmlParser",
                  "canonicalReference": "@xpack/doxygen2docusaurus!DoxygenXmlParser:class"
                },
                {
                  "kind": "Content",
                  "text": ", element: "
                },
                {
                  "kind": "Content",
                  "text": "object"
                },
                {
                  "kind": "Content",
                  "text": ", elementName: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "xml",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "element",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "elementName",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  },
                  "isOptional": false
                }
              ]
            },
            {
              "kind": "Property",
              "canonicalReference": "@xpack/doxygen2docusaurus!AbstractMemberType#refid:member",
              "docComment": "/**\n * The unique reference identifier for the member element.\n *\n * @remarks\n *\n * Contains the Doxygen-generated unique identifier used for creating cross-references and hyperlinks to the detailed member definition. This identifier serves as the primary mechanism for linking between member references and their corresponding comprehensive definitions within the documentation system.\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "refid: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "refid",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            }
          ],
          "extendsTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "Class",
          "canonicalReference": "@xpack/doxygen2docusaurus!AbstractParamType:class",
          "docComment": "/**\n * Abstract base class for parameter data models within documentation.\n *\n * @remarks\n *\n * Represents comprehensive parameter information as defined by the paramType XML Schema, handling function and method parameter definitions including type information, naming variations, default values, and constraints. This class processes the complete range of parameter metadata required for accurate function signature documentation.\n *\n * The implementation manages optional parameter elements including attributes, type specifications with linked text support, declaration and definition names, array specifications, default values, type constraints, and brief descriptions. All elements are optional, reflecting the flexible nature of parameter documentation within different programming contexts.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare abstract class AbstractParamType extends "
            },
            {
              "kind": "Reference",
              "text": "AbstractDataModelBase",
              "canonicalReference": "@xpack/doxygen2docusaurus!AbstractDataModelBase:class"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "src/doxygen/data-model/compounds/paramtype-dm.ts",
          "releaseTag": "Public",
          "isAbstract": true,
          "name": "AbstractParamType",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Constructor",
              "canonicalReference": "@xpack/doxygen2docusaurus!AbstractParamType:constructor(1)",
              "docComment": "/**\n * Constructs a new parameter data model from XML element data.\n *\n * @remarks\n *\n * Processes the XML element representing parameter information and extracts all available parameter metadata including attributes, type specifications, naming variations, default values, constraints, and descriptions. The constructor handles the paramType schema requirements where all elements are optional, reflecting the flexible nature of parameter documentation.\n *\n * The implementation processes various parameter representations including simple parameters, array parameters, template parameters with constraints, and parameters with default values. It ensures proper extraction of linked text elements that contain embedded cross-references to related documentation entities.\n *\n * @param xml - The XML parser instance for processing element data\n *\n * @param element - The XML element containing parameter information\n *\n * @param elementName - The name of the XML element being processed\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor(xml: "
                },
                {
                  "kind": "Reference",
                  "text": "DoxygenXmlParser",
                  "canonicalReference": "@xpack/doxygen2docusaurus!DoxygenXmlParser:class"
                },
                {
                  "kind": "Content",
                  "text": ", element: "
                },
                {
                  "kind": "Content",
                  "text": "object"
                },
                {
                  "kind": "Content",
                  "text": ", elementName: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "xml",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "element",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "elementName",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  },
                  "isOptional": false
                }
              ]
            },
            {
              "kind": "Property",
              "canonicalReference": "@xpack/doxygen2docusaurus!AbstractParamType#array:member",
              "docComment": "/**\n * Array specification information for array parameters.\n *\n * @remarks\n *\n * Contains array dimension information and specifications when the parameter represents an array type. This includes array bounds, size specifications, and dimensional characteristics essential for accurate parameter documentation.\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "array?: "
                },
                {
                  "kind": "Content",
                  "text": "string | undefined"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "array",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@xpack/doxygen2docusaurus!AbstractParamType#attributes:member",
              "docComment": "/**\n * Parameter attributes specification string.\n *\n * @remarks\n *\n * Contains language-specific parameter attributes such as qualifiers, modifiers, or annotations that apply to the parameter declaration. This information provides additional context about parameter behaviour and constraints within the function signature.\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "attributes?: "
                },
                {
                  "kind": "Content",
                  "text": "string | undefined"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "attributes",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@xpack/doxygen2docusaurus!AbstractParamType#briefdescription:member",
              "docComment": "/**\n * Brief description documentation for the parameter.\n *\n * @remarks\n *\n * Provides concise parameter documentation including purpose, usage notes, and essential parameter information. This description enhances parameter understanding within function documentation and API reference materials.\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "briefdescription?: "
                },
                {
                  "kind": "Reference",
                  "text": "BriefDescriptionDataModel",
                  "canonicalReference": "@xpack/doxygen2docusaurus!BriefDescriptionDataModel:class"
                },
                {
                  "kind": "Content",
                  "text": " | undefined"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "briefdescription",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@xpack/doxygen2docusaurus!AbstractParamType#declname:member",
              "docComment": "/**\n * The declared parameter name as it appears in the declaration.\n *\n * @remarks\n *\n * Contains the parameter name as specified in the function or method declaration, representing the formal parameter identifier used within the function signature for identification purposes.\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "declname?: "
                },
                {
                  "kind": "Content",
                  "text": "string | undefined"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "declname",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@xpack/doxygen2docusaurus!AbstractParamType#defname:member",
              "docComment": "/**\n * The defined parameter name as it appears in the definition.\n *\n * @remarks\n *\n * Contains the parameter name as used in the function or method definition, which may differ from the declaration name in contexts where declarations and definitions are separate (such as header and implementation files).\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "defname?: "
                },
                {
                  "kind": "Content",
                  "text": "string | undefined"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "defname",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@xpack/doxygen2docusaurus!AbstractParamType#defval:member",
              "docComment": "/**\n * Default value specification with linked text support.\n *\n * @remarks\n *\n * Provides the parameter's default value information including cross-references to related elements when the default value contains references to other documented entities. This enables comprehensive default value presentation with navigation capabilities.\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "defval?: "
                },
                {
                  "kind": "Reference",
                  "text": "DefValDataModel",
                  "canonicalReference": "@xpack/doxygen2docusaurus!DefValDataModel:class"
                },
                {
                  "kind": "Content",
                  "text": " | undefined"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "defval",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@xpack/doxygen2docusaurus!AbstractParamType#type:member",
              "docComment": "/**\n * Type information for the parameter with linked text support.\n *\n * @remarks\n *\n * Provides comprehensive type data including cross-references and embedded links to type definitions. This enables rich type presentation with navigation capabilities to related type documentation within the system.\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "type?: "
                },
                {
                  "kind": "Reference",
                  "text": "TypeDataModel",
                  "canonicalReference": "@xpack/doxygen2docusaurus!TypeDataModel:class"
                },
                {
                  "kind": "Content",
                  "text": " | undefined"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "type",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@xpack/doxygen2docusaurus!AbstractParamType#typeconstraint:member",
              "docComment": "/**\n * Type constraint information for template parameters.\n *\n * @remarks\n *\n * Contains constraint specifications for template or generic parameters, including concept requirements, type bounds, and constraint expressions. This information is essential for documenting modern C++ concepts and generic programming constraints.\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "typeconstraint?: "
                },
                {
                  "kind": "Reference",
                  "text": "TypeConstraintDataModel",
                  "canonicalReference": "@xpack/doxygen2docusaurus!TypeConstraintDataModel:class"
                },
                {
                  "kind": "Content",
                  "text": " | undefined"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "typeconstraint",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            }
          ],
          "extendsTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "Class",
          "canonicalReference": "@xpack/doxygen2docusaurus!AbstractReferenceType:class",
          "docComment": "/**\n * Abstract base class for reference type data models.\n *\n * @remarks\n *\n * Represents the foundational structure for reference relationship elements within Doxygen XML documentation, corresponding to the referenceType complex type in the XML schema. This class manages bidirectional reference relationships between documented entities, capturing both the descriptive text and precise location information including line number ranges. The reference system enables comprehensive dependency tracking and cross- referencing capabilities, essential for understanding code relationships and generating accurate documentation navigation structures.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare abstract class AbstractReferenceType extends "
            },
            {
              "kind": "Reference",
              "text": "AbstractDataModelBase",
              "canonicalReference": "@xpack/doxygen2docusaurus!AbstractDataModelBase:class"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "src/doxygen/data-model/compounds/referencetype-dm.ts",
          "releaseTag": "Public",
          "isAbstract": true,
          "name": "AbstractReferenceType",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Constructor",
              "canonicalReference": "@xpack/doxygen2docusaurus!AbstractReferenceType:constructor(1)",
              "docComment": "/**\n * Constructs a new abstract reference type from XML data.\n *\n * @remarks\n *\n * Parses the provided XML element to construct a complete reference relationship data model. The parsing process extracts the textual content from the element and processes all defined attributes including the mandatory refid attribute, line number information, and optional compound reference data. Validation ensures that the reference identifier is present, maintaining the integrity of the reference relationship documentation.\n *\n * @param xml - The Doxygen XML parser instance\n *\n * @param element - The XML element containing reference relationship data\n *\n * @param elementName - The expected XML element name\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor(xml: "
                },
                {
                  "kind": "Reference",
                  "text": "DoxygenXmlParser",
                  "canonicalReference": "@xpack/doxygen2docusaurus!DoxygenXmlParser:class"
                },
                {
                  "kind": "Content",
                  "text": ", element: "
                },
                {
                  "kind": "Content",
                  "text": "object"
                },
                {
                  "kind": "Content",
                  "text": ", elementName: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "xml",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "element",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "elementName",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  },
                  "isOptional": false
                }
              ]
            },
            {
              "kind": "Property",
              "canonicalReference": "@xpack/doxygen2docusaurus!AbstractReferenceType#compoundref:member",
              "docComment": "/**\n * The compound reference identifier for the containing entity.\n *\n * @remarks\n *\n * Optional attribute that provides the identifier of the compound entity (such as a class or namespace) that contains the referenced item. This additional context enables more precise navigation and helps establish the hierarchical relationship between the referencing and referenced entities within the documentation structure.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "compoundref?: "
                },
                {
                  "kind": "Content",
                  "text": "string | undefined"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "compoundref",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@xpack/doxygen2docusaurus!AbstractReferenceType#endline:member",
              "docComment": "/**\n * The ending line number where the reference concludes.\n *\n * @remarks\n *\n * Specifies the line number in the source code where the reference relationship ends. Combined with the starting line, this provides a complete range for the reference occurrence, enabling precise source code highlighting and navigation capabilities. Note that this attribute may be missing in some reference elements despite being defined as mandatory in the XML schema.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "endline: "
                },
                {
                  "kind": "Content",
                  "text": "number | undefined"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "endline",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@xpack/doxygen2docusaurus!AbstractReferenceType#refid:member",
              "docComment": "/**\n * The unique reference identifier for the referenced entity.\n *\n * @remarks\n *\n * Mandatory attribute that provides a unique identifier for the entity being referenced. This identifier enables precise linking and cross- referencing between documentation elements, allowing navigation to the detailed documentation of the referenced item within the documentation structure.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "refid: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "refid",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@xpack/doxygen2docusaurus!AbstractReferenceType#startline:member",
              "docComment": "/**\n * The starting line number where the reference occurs.\n *\n * @remarks\n *\n * Specifies the line number in the source code where the reference relationship begins. This location information enables precise source code navigation and helps establish the exact context of the reference within the original source files. Note that this attribute may be missing in some reference elements despite being defined as mandatory in the XML schema.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "startline: "
                },
                {
                  "kind": "Content",
                  "text": "number | undefined"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "startline",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@xpack/doxygen2docusaurus!AbstractReferenceType#text:member",
              "docComment": "/**\n * The descriptive text content for this reference relationship.\n *\n * @remarks\n *\n * Contains the textual description of the reference relationship, typically including the name or signature of the referenced entity. This text provides human-readable context about the relationship and is used for display purposes within the generated documentation. Note that this property is not explicitly defined in the XML schema DTD but appears in practice within reference elements.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "text: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "text",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            }
          ],
          "extendsTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "Class",
          "canonicalReference": "@xpack/doxygen2docusaurus!AbstractRefType:class",
          "docComment": "/**\n * Abstract base class for reference type data models.\n *\n * @remarks\n *\n * Represents the foundational structure for reference elements within Doxygen XML documentation, corresponding to the refType complex type in the XML schema. This class manages references to various documented entities such as classes, namespaces, files, folders, modules, pages, and groups. Each reference includes the entity name, a unique identifier for linking, and optional protection and inline attributes. All concrete reference implementations should extend this base to ensure consistent structure and parsing behaviour across different reference types.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare abstract class AbstractRefType extends "
            },
            {
              "kind": "Reference",
              "text": "AbstractDataModelBase",
              "canonicalReference": "@xpack/doxygen2docusaurus!AbstractDataModelBase:class"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "src/doxygen/data-model/compounds/reftype-dm.ts",
          "releaseTag": "Public",
          "isAbstract": true,
          "name": "AbstractRefType",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Constructor",
              "canonicalReference": "@xpack/doxygen2docusaurus!AbstractRefType:constructor(1)",
              "docComment": "/**\n * Constructs a new abstract reference type from XML data.\n *\n * @remarks\n *\n * Parses the provided XML element to construct a complete reference data model. The parsing process extracts the textual content from the element and processes all defined attributes including the mandatory refid and optional protection and inline attributes. Validation ensures that both the reference name and identifier are present and non-empty, maintaining the integrity of the reference documentation.\n *\n * @param xml - The Doxygen XML parser instance\n *\n * @param element - The XML element containing reference data\n *\n * @param elementName - The expected XML element name\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor(xml: "
                },
                {
                  "kind": "Reference",
                  "text": "DoxygenXmlParser",
                  "canonicalReference": "@xpack/doxygen2docusaurus!DoxygenXmlParser:class"
                },
                {
                  "kind": "Content",
                  "text": ", element: "
                },
                {
                  "kind": "Content",
                  "text": "object"
                },
                {
                  "kind": "Content",
                  "text": ", elementName: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "xml",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "element",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "elementName",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  },
                  "isOptional": false
                }
              ]
            },
            {
              "kind": "Property",
              "canonicalReference": "@xpack/doxygen2docusaurus!AbstractRefType#inline:member",
              "docComment": "/**\n * Indicates whether the referenced entity is inline.\n *\n * @remarks\n *\n * Optional boolean attribute that specifies whether the referenced entity is defined inline within its containing context. This information affects how the entity is presented and processed in the generated documentation, particularly for inline classes, functions, or other code constructs.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "inline?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean | undefined"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "inline",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@xpack/doxygen2docusaurus!AbstractRefType#prot:member",
              "docComment": "/**\n * The protection level of the referenced entity.\n *\n * @remarks\n *\n * Optional attribute specifying the protection level according to the DoxProtectionKind enumeration. Values include 'public', 'protected', 'private', and 'package', indicating the accessibility scope of the referenced entity within its containing context.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "prot?: "
                },
                {
                  "kind": "Content",
                  "text": "string | undefined"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "prot",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@xpack/doxygen2docusaurus!AbstractRefType#refid:member",
              "docComment": "/**\n * The unique reference identifier for the referenced entity.\n *\n * @remarks\n *\n * Mandatory attribute that provides a unique identifier for the referenced entity within the Doxygen documentation system. This identifier enables precise linking and cross-referencing between documentation elements, allowing navigation to the detailed documentation of the referenced item.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "refid: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "refid",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@xpack/doxygen2docusaurus!AbstractRefType#text:member",
              "docComment": "/**\n * The name of the referenced entity.\n *\n * @remarks\n *\n * Mandatory element containing the textual name of the referenced entity, passed as the element's text content. This name provides human-readable identification of the referenced item and is used for display and navigation purposes within the generated documentation.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "text: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "text",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            }
          ],
          "extendsTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "Class",
          "canonicalReference": "@xpack/doxygen2docusaurus!AbstractReimplementType:class",
          "docComment": "/**\n * Abstract base class for reimplement type data models.\n *\n * @remarks\n *\n * Represents the foundational structure for reimplement relationship elements within Doxygen XML documentation, corresponding to the reimplementType complex type in the XML schema. This class manages relationships between methods, functions, or other documented entities that implement or override behaviour from base classes or interfaces. The reimplement relationship captures both the descriptive text and the reference identifier for the related entity, enabling comprehensive documentation of inheritance and polymorphic behaviours within the codebase.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare abstract class AbstractReimplementType extends "
            },
            {
              "kind": "Reference",
              "text": "AbstractDataModelBase",
              "canonicalReference": "@xpack/doxygen2docusaurus!AbstractDataModelBase:class"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "src/doxygen/data-model/compounds/reimplementtype-dm.ts",
          "releaseTag": "Public",
          "isAbstract": true,
          "name": "AbstractReimplementType",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Constructor",
              "canonicalReference": "@xpack/doxygen2docusaurus!AbstractReimplementType:constructor(1)",
              "docComment": "/**\n * Constructs a new abstract reimplement type from XML data.\n *\n * @remarks\n *\n * Parses the provided XML element to construct a complete reimplement relationship data model. The parsing process extracts the textual content from the element and processes the mandatory refid attribute. Validation ensures that both the descriptive text and reference identifier are present and non-empty, maintaining the integrity of the reimplement relationship documentation.\n *\n * @param xml - The Doxygen XML parser instance\n *\n * @param element - The XML element containing reimplement relationship data\n *\n * @param elementName - The expected XML element name\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor(xml: "
                },
                {
                  "kind": "Reference",
                  "text": "DoxygenXmlParser",
                  "canonicalReference": "@xpack/doxygen2docusaurus!DoxygenXmlParser:class"
                },
                {
                  "kind": "Content",
                  "text": ", element: "
                },
                {
                  "kind": "Content",
                  "text": "object"
                },
                {
                  "kind": "Content",
                  "text": ", elementName: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "xml",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "element",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "elementName",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  },
                  "isOptional": false
                }
              ]
            },
            {
              "kind": "Property",
              "canonicalReference": "@xpack/doxygen2docusaurus!AbstractReimplementType#refId:member",
              "docComment": "/**\n * The reference identifier for the reimplemented entity.\n *\n * @remarks\n *\n * Mandatory attribute that provides a unique identifier for the entity being reimplemented. This reference enables linking and cross-referencing between related documentation elements, allowing navigation between implementations and their base declarations within the generated documentation structure.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "refId: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "refId",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@xpack/doxygen2docusaurus!AbstractReimplementType#text:member",
              "docComment": "/**\n * The descriptive text content for this reimplement relationship.\n *\n * @remarks\n *\n * Mandatory element containing the textual description of the reimplement relationship. This text typically includes the signature or name of the reimplemented entity, providing human-readable context about the relationship between the current entity and the referenced implementation.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "text: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "text",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            }
          ],
          "extendsTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "Class",
          "canonicalReference": "@xpack/doxygen2docusaurus!AbstractSectionDefType:class",
          "docComment": "/**\n * Abstract class for XML-parsed section definition types.\n *\n * @remarks\n *\n * Extends the base section definition type to provide XML parsing capabilities for constructing section definition data models from Doxygen XML elements. This class handles the complete parsing process including attributes, inner elements, headers, descriptions, and member collections. All concrete section definition implementations that require XML parsing should extend this class to benefit from the standardised parsing infrastructure.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare abstract class AbstractSectionDefType extends "
            },
            {
              "kind": "Reference",
              "text": "AbstractSectionDefTypeBase",
              "canonicalReference": "@xpack/doxygen2docusaurus!AbstractSectionDefTypeBase:class"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "src/doxygen/data-model/compounds/sectiondeftype-dm.ts",
          "releaseTag": "Public",
          "isAbstract": true,
          "name": "AbstractSectionDefType",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Constructor",
              "canonicalReference": "@xpack/doxygen2docusaurus!AbstractSectionDefType:constructor(1)",
              "docComment": "/**\n * Constructs a new abstract section definition type from XML data.\n *\n * @remarks\n *\n * Parses the provided XML element to construct a complete section definition data model. The parsing process handles all defined inner elements including headers, descriptions, member definitions, and member references, as well as the mandatory kind attribute. Validation ensures that required elements and attributes are present and conform to the expected XML schema structure.\n *\n * @param xml - The Doxygen XML parser instance\n *\n * @param element - The XML element containing section definition data\n *\n * @param elementName - The expected XML element name\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor(xml: "
                },
                {
                  "kind": "Reference",
                  "text": "DoxygenXmlParser",
                  "canonicalReference": "@xpack/doxygen2docusaurus!DoxygenXmlParser:class"
                },
                {
                  "kind": "Content",
                  "text": ", element: "
                },
                {
                  "kind": "Content",
                  "text": "object"
                },
                {
                  "kind": "Content",
                  "text": ", elementName: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "xml",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "element",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "elementName",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  },
                  "isOptional": false
                }
              ]
            }
          ],
          "extendsTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "Class",
          "canonicalReference": "@xpack/doxygen2docusaurus!AbstractSectionDefTypeBase:class",
          "docComment": "/**\n * Abstract base class for section definition type data models.\n *\n * @remarks\n *\n * Represents the foundational structure for section definition elements within Doxygen XML documentation, corresponding to the sectiondefType complex type in the XML schema. This class provides the core properties and utility methods for managing section definitions, including kind classification, optional headers and descriptions, and member collections. All concrete section definition classes should extend this base to ensure consistent structure and behaviour.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare abstract class AbstractSectionDefTypeBase extends "
            },
            {
              "kind": "Reference",
              "text": "AbstractDataModelBase",
              "canonicalReference": "@xpack/doxygen2docusaurus!AbstractDataModelBase:class"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "src/doxygen/data-model/compounds/sectiondeftype-dm.ts",
          "releaseTag": "Public",
          "isAbstract": true,
          "name": "AbstractSectionDefTypeBase",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Constructor",
              "canonicalReference": "@xpack/doxygen2docusaurus!AbstractSectionDefTypeBase:constructor(1)",
              "docComment": "/**\n * Constructs a new abstract section definition type base instance.\n *\n * @remarks\n *\n * Initialises the base properties for a section definition, establishing the element name and kind classification that will be used throughout the processing lifecycle.\n *\n * @param elementName - The XML element name for this section definition\n *\n * @param kind - The section kind classification\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor(elementName: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", kind: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "elementName",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "kind",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                }
              ]
            },
            {
              "kind": "Method",
              "canonicalReference": "@xpack/doxygen2docusaurus!AbstractSectionDefTypeBase#computeAdjustedKind:member(1)",
              "docComment": "/**\n * Computes an adjusted kind string based on section and member suffixes.\n *\n * @remarks\n *\n * Transforms the section kind for specific member types, such as converting 'public-func' into more specific kinds like 'public-constructor', 'public-destructor', or 'public-operator'. For user-defined sections, returns the member suffix directly. For hyphenated kinds, replaces the final component with the section suffix. Otherwise, returns the member suffix as the default behaviour.\n *\n * @param sectionSuffix - The suffix to apply for section-based adjustments\n *\n * @param memberSuffix - The suffix to apply for member-based adjustments\n *\n * @returns The adjusted kind string\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "computeAdjustedKind(sectionSuffix: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", memberSuffix?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "sectionSuffix",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "memberSuffix",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "computeAdjustedKind"
            },
            {
              "kind": "Property",
              "canonicalReference": "@xpack/doxygen2docusaurus!AbstractSectionDefTypeBase#description:member",
              "docComment": "/**\n * The optional description content for this section.\n *\n * @remarks\n *\n * Optional element containing detailed description information for the section. This description provides context and documentation about the section's purpose and contents.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "description?: "
                },
                {
                  "kind": "Reference",
                  "text": "DescriptionDataModel",
                  "canonicalReference": "@xpack/doxygen2docusaurus!DescriptionDataModel:class"
                },
                {
                  "kind": "Content",
                  "text": " | undefined"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "description",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Method",
              "canonicalReference": "@xpack/doxygen2docusaurus!AbstractSectionDefTypeBase#hasMembers:member(1)",
              "docComment": "/**\n * Determines whether this section contains any member information.\n *\n * @remarks\n *\n * Utility method that checks for the presence of either member definitions or member references within this section. This is useful for determining whether the section requires member processing or can be treated as documentation-only content.\n *\n * @returns True if the section has member definitions or member references\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "hasMembers(): "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "hasMembers"
            },
            {
              "kind": "Property",
              "canonicalReference": "@xpack/doxygen2docusaurus!AbstractSectionDefTypeBase#header:member",
              "docComment": "/**\n * The optional header text for this section.\n *\n * @remarks\n *\n * Optional element that provides a title or heading for the section. When present, this header is used for display and navigation purposes within the generated documentation.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "header?: "
                },
                {
                  "kind": "Content",
                  "text": "string | undefined"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "header",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@xpack/doxygen2docusaurus!AbstractSectionDefTypeBase#kind:member",
              "docComment": "/**\n * The kind classification of this section definition.\n *\n * @remarks\n *\n * Mandatory attribute that specifies the type of section, corresponding to the DoxSectionKind enumeration in the XML schema. This classification determines how the section is processed and presented in the documentation.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "kind: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "kind",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@xpack/doxygen2docusaurus!AbstractSectionDefTypeBase#memberDefs:member",
              "docComment": "/**\n * Collection of member definition data models.\n *\n * @remarks\n *\n * Optional array containing detailed member definitions for this section. This collection is mutually exclusive with the members array, as per the XML schema choice constraint. Each member definition provides comprehensive information about documented entities.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "memberDefs?: "
                },
                {
                  "kind": "Reference",
                  "text": "MemberDefDataModel",
                  "canonicalReference": "@xpack/doxygen2docusaurus!MemberDefDataModel:class"
                },
                {
                  "kind": "Content",
                  "text": "[] | undefined"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "memberDefs",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@xpack/doxygen2docusaurus!AbstractSectionDefTypeBase#members:member",
              "docComment": "/**\n * Collection of member reference data models.\n *\n * @remarks\n *\n * Optional array containing member references for this section. This collection is mutually exclusive with the memberDefs array, as per the XML schema choice constraint. Each member reference provides summary information and links to detailed definitions.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "members?: "
                },
                {
                  "kind": "Reference",
                  "text": "MemberDataModel",
                  "canonicalReference": "@xpack/doxygen2docusaurus!MemberDataModel:class"
                },
                {
                  "kind": "Content",
                  "text": "[] | undefined"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "members",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            }
          ],
          "extendsTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "Class",
          "canonicalReference": "@xpack/doxygen2docusaurus!AbstractTableOfContentsKindType:class",
          "docComment": "/**\n * Abstract base class for table of contents kind type data models.\n *\n * @remarks\n *\n * Represents table of contents kind elements within Doxygen XML structures, corresponding to the tableofcontentsKindType complex type in the XML schema. This class handles the parsing of named table of contents sections with references and optional nested table of contents structures. All concrete table of contents kind data model classes should extend this abstract base to ensure consistent parsing and data representation.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare abstract class AbstractTableOfContentsKindType extends "
            },
            {
              "kind": "Reference",
              "text": "AbstractDataModelBase",
              "canonicalReference": "@xpack/doxygen2docusaurus!AbstractDataModelBase:class"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "src/doxygen/data-model/compounds/tableofcontentstype-dm.ts",
          "releaseTag": "Public",
          "isAbstract": true,
          "name": "AbstractTableOfContentsKindType",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Constructor",
              "canonicalReference": "@xpack/doxygen2docusaurus!AbstractTableOfContentsKindType:constructor(1)",
              "docComment": "/**\n * Constructs a new AbstractTableOfContentsKindType instance from XML data.\n *\n * @remarks\n *\n * Parses the provided XML element to extract table of contents kind information including mandatory name and reference elements, along with optional nested table of contents structures. The constructor handles unknown 'docs' elements that may appear but are not defined in the DTD. This element type has no attributes as per the XML schema.\n *\n * @param xml - The Doxygen XML parser instance for processing XML elements\n *\n * @param element - The XML element containing the table of contents kind data\n *\n * @param elementName - The name of the XML element being processed\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor(xml: "
                },
                {
                  "kind": "Reference",
                  "text": "DoxygenXmlParser",
                  "canonicalReference": "@xpack/doxygen2docusaurus!DoxygenXmlParser:class"
                },
                {
                  "kind": "Content",
                  "text": ", element: "
                },
                {
                  "kind": "Content",
                  "text": "object"
                },
                {
                  "kind": "Content",
                  "text": ", elementName: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "xml",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "element",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "elementName",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  },
                  "isOptional": false
                }
              ]
            },
            {
              "kind": "Property",
              "canonicalReference": "@xpack/doxygen2docusaurus!AbstractTableOfContentsKindType#name:member",
              "docComment": "/**\n * The name of the table of contents section.\n *\n * @remarks\n *\n * Mandatory element extracted from the XML structure that provides the display name or title for this table of contents section. This name is used for navigation and presentation purposes.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "name: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "name",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@xpack/doxygen2docusaurus!AbstractTableOfContentsKindType#reference:member",
              "docComment": "/**\n * The reference identifier for this table of contents section.\n *\n * @remarks\n *\n * Mandatory element that provides a reference or link target for this table of contents section. This reference is used to create navigation links and cross-references within the documentation.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "reference: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "reference",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@xpack/doxygen2docusaurus!AbstractTableOfContentsKindType#tableOfContents:member",
              "docComment": "/**\n * Collection of nested table of contents data models.\n *\n * @remarks\n *\n * Optional array containing nested table of contents elements that create hierarchical documentation structures. This allows for multi-level table of contents organisation with subsections and sub-subsections as needed.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "tableOfContents: "
                },
                {
                  "kind": "Reference",
                  "text": "TableOfContentsDataModel",
                  "canonicalReference": "@xpack/doxygen2docusaurus!TableOfContentsDataModel:class"
                },
                {
                  "kind": "Content",
                  "text": "[] | undefined"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "tableOfContents",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            }
          ],
          "extendsTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "Class",
          "canonicalReference": "@xpack/doxygen2docusaurus!AbstractTableOfContentsType:class",
          "docComment": "/**\n * Abstract base class for table of contents type data models.\n *\n * @remarks\n *\n * Represents table of contents elements within Doxygen XML structures, corresponding to the tableofcontentsType complex type in the XML schema. This class handles the parsing of table of contents structures with mutually exclusive content choices: either table of contents sections or nested table of contents elements. All concrete table of contents data model classes should extend this abstract base to ensure consistent parsing and data representation.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare abstract class AbstractTableOfContentsType extends "
            },
            {
              "kind": "Reference",
              "text": "AbstractDataModelBase",
              "canonicalReference": "@xpack/doxygen2docusaurus!AbstractDataModelBase:class"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "src/doxygen/data-model/compounds/tableofcontentstype-dm.ts",
          "releaseTag": "Public",
          "isAbstract": true,
          "name": "AbstractTableOfContentsType",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Constructor",
              "canonicalReference": "@xpack/doxygen2docusaurus!AbstractTableOfContentsType:constructor(1)",
              "docComment": "/**\n * Constructs a new AbstractTableOfContentsType instance from XML data.\n *\n * @remarks\n *\n * Parses the provided XML element to extract table of contents information following the exclusive choice pattern defined in the XML schema. The constructor processes either table of contents sections or nested table of contents elements, but not both, maintaining the mutually exclusive relationship. This element type has no attributes as per the schema.\n *\n * @param xml - The Doxygen XML parser instance for processing XML elements\n *\n * @param element - The XML element containing the table of contents data\n *\n * @param elementName - The name of the XML element being processed\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor(xml: "
                },
                {
                  "kind": "Reference",
                  "text": "DoxygenXmlParser",
                  "canonicalReference": "@xpack/doxygen2docusaurus!DoxygenXmlParser:class"
                },
                {
                  "kind": "Content",
                  "text": ", element: "
                },
                {
                  "kind": "Content",
                  "text": "object"
                },
                {
                  "kind": "Content",
                  "text": ", elementName: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "xml",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "element",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "elementName",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  },
                  "isOptional": false
                }
              ]
            },
            {
              "kind": "Property",
              "canonicalReference": "@xpack/doxygen2docusaurus!AbstractTableOfContentsType#tableOfContents:member",
              "docComment": "/**\n * Collection of nested table of contents data models.\n *\n * @remarks\n *\n * Optional array containing nested table of contents elements, part of an exclusive choice with tocSect. This allows for recursive table of contents structures to represent complex documentation hierarchies.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "tableOfContents: "
                },
                {
                  "kind": "Reference",
                  "text": "TableOfContentsDataModel",
                  "canonicalReference": "@xpack/doxygen2docusaurus!TableOfContentsDataModel:class"
                },
                {
                  "kind": "Content",
                  "text": "[] | undefined"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "tableOfContents",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@xpack/doxygen2docusaurus!AbstractTableOfContentsType#tocSect:member",
              "docComment": "/**\n * Collection of table of contents section data models.\n *\n * @remarks\n *\n * Optional array containing table of contents section elements, part of an exclusive choice with tableOfContents. Each section represents a specific part of the documentation structure with its own name, reference, and potentially nested content.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "tocSect: "
                },
                {
                  "kind": "Reference",
                  "text": "TocSectDataModel",
                  "canonicalReference": "@xpack/doxygen2docusaurus!TocSectDataModel:class"
                },
                {
                  "kind": "Content",
                  "text": "[] | undefined"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "tocSect",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            }
          ],
          "extendsTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "Class",
          "canonicalReference": "@xpack/doxygen2docusaurus!AbstractTemplateParamListType:class",
          "docComment": "/**\n * Abstract base class for template parameter list type data models.\n *\n * @remarks\n *\n * Represents template parameter list elements within Doxygen XML structures, corresponding to the templateparamlistType complex type in the XML schema. This class handles the parsing of parameter collections for templated constructs such as template classes and functions. All concrete template parameter list data model classes should extend this abstract base to ensure consistent parsing and data representation.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare abstract class AbstractTemplateParamListType extends "
            },
            {
              "kind": "Reference",
              "text": "AbstractDataModelBase",
              "canonicalReference": "@xpack/doxygen2docusaurus!AbstractDataModelBase:class"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "src/doxygen/data-model/compounds/templateparamlisttype-dm.ts",
          "releaseTag": "Public",
          "isAbstract": true,
          "name": "AbstractTemplateParamListType",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Constructor",
              "canonicalReference": "@xpack/doxygen2docusaurus!AbstractTemplateParamListType:constructor(1)",
              "docComment": "/**\n * Constructs a new AbstractTemplateParamListType instance from XML data.\n *\n * @remarks\n *\n * Parses the provided XML element to extract template parameter list information including parameter collections. The constructor processes parameter elements into ParamDataModel instances when present. This element type has no attributes as per the XML schema definition, containing only parameter child elements.\n *\n * @param xml - The Doxygen XML parser instance for processing XML elements\n *\n * @param element - The XML element containing the template parameter list data\n *\n * @param elementName - The name of the XML element being processed\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor(xml: "
                },
                {
                  "kind": "Reference",
                  "text": "DoxygenXmlParser",
                  "canonicalReference": "@xpack/doxygen2docusaurus!DoxygenXmlParser:class"
                },
                {
                  "kind": "Content",
                  "text": ", element: "
                },
                {
                  "kind": "Content",
                  "text": "object"
                },
                {
                  "kind": "Content",
                  "text": ", elementName: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "xml",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "element",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "elementName",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  },
                  "isOptional": false
                }
              ]
            },
            {
              "kind": "Property",
              "canonicalReference": "@xpack/doxygen2docusaurus!AbstractTemplateParamListType#params:member",
              "docComment": "/**\n * Collection of parameter data models within this template parameter list.\n *\n * @remarks\n *\n * Optional array containing parameter elements found within the template parameter list structure. Each parameter represents a template parameter definition including its type, name, and other attributes. The array supports zero to many parameters as per the XML schema, accommodating both non-templated constructs and complex template declarations.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "params?: "
                },
                {
                  "kind": "Reference",
                  "text": "ParamDataModel",
                  "canonicalReference": "@xpack/doxygen2docusaurus!ParamDataModel:class"
                },
                {
                  "kind": "Content",
                  "text": "[] | undefined"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "params",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            }
          ],
          "extendsTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "Class",
          "canonicalReference": "@xpack/doxygen2docusaurus!BaseCompoundRefDataModel:class",
          "docComment": "/**\n * Data model for base compound references in inheritance relationships.\n *\n * @remarks\n *\n * Represents references to base classes or parent compounds in inheritance hierarchies as documented by Doxygen. This class handles the 'basecompoundref' XML elements that establish parent-child relationships in object-oriented documentation structures.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class BaseCompoundRefDataModel extends "
            },
            {
              "kind": "Reference",
              "text": "AbstractCompoundRefType",
              "canonicalReference": "@xpack/doxygen2docusaurus!AbstractCompoundRefType:class"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "src/doxygen/data-model/compounds/compoundreftype-dm.ts",
          "releaseTag": "Public",
          "isAbstract": false,
          "name": "BaseCompoundRefDataModel",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Constructor",
              "canonicalReference": "@xpack/doxygen2docusaurus!BaseCompoundRefDataModel:constructor(1)",
              "docComment": "/**\n * Constructs a new BaseCompoundRefDataModel instance.\n *\n * @remarks\n *\n * Creates a data model object for 'basecompoundref' XML elements, representing inheritance relationships where the current compound derives from the referenced base compound.\n *\n * @param xml - The XML parser instance for processing elements\n *\n * @param element - The XML element object to parse\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor(xml: "
                },
                {
                  "kind": "Reference",
                  "text": "DoxygenXmlParser",
                  "canonicalReference": "@xpack/doxygen2docusaurus!DoxygenXmlParser:class"
                },
                {
                  "kind": "Content",
                  "text": ", element: "
                },
                {
                  "kind": "Content",
                  "text": "object"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "xml",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "element",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                }
              ]
            }
          ],
          "extendsTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "Class",
          "canonicalReference": "@xpack/doxygen2docusaurus!BriefDescriptionDataModel:class",
          "docComment": "/**\n * Data model for brief description elements within documentation.\n *\n * @remarks\n *\n * Represents brief description elements that provide concise summary content for entities. This implementation processes Doxygen's briefdescription elements, which contain short descriptive content used for entity summaries, overviews, and quick reference information within documentation structures.\n *\n * Brief descriptions are typically displayed in listings, summaries, and overview sections to provide immediate context about documented entities without requiring full detailed descriptions.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class BriefDescriptionDataModel extends "
            },
            {
              "kind": "Reference",
              "text": "AbstractDescriptionType",
              "canonicalReference": "@xpack/doxygen2docusaurus!AbstractDescriptionType:class"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "src/doxygen/data-model/compounds/descriptiontype-dm.ts",
          "releaseTag": "Public",
          "isAbstract": false,
          "name": "BriefDescriptionDataModel",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Constructor",
              "canonicalReference": "@xpack/doxygen2docusaurus!BriefDescriptionDataModel:constructor(1)",
              "docComment": "/**\n * Constructs a BriefDescriptionDataModel from XML element data.\n *\n * @remarks\n *\n * This constructor delegates to the parent AbstractDescriptionType whilst identifying the element as 'briefdescription' for concise summary content processing and documentation organisation.\n *\n * @param xml - The Doxygen XML parser instance for processing XML content\n *\n * @param element - The XML element object containing the brief description data\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor(xml: "
                },
                {
                  "kind": "Reference",
                  "text": "DoxygenXmlParser",
                  "canonicalReference": "@xpack/doxygen2docusaurus!DoxygenXmlParser:class"
                },
                {
                  "kind": "Content",
                  "text": ", element: "
                },
                {
                  "kind": "Content",
                  "text": "object"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "xml",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "element",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                }
              ]
            }
          ],
          "extendsTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@xpack/doxygen2docusaurus!~CliConfigurationOptions:type",
          "docComment": "/**\n * Configuration options as specified by users in configuration files.\n *\n * @remarks\n *\n * All options are optional and can be either string or boolean values depending on the specific configuration property.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type CliConfigurationOptions = "
            },
            {
              "kind": "Reference",
              "text": "Record",
              "canonicalReference": "!Record:type"
            },
            {
              "kind": "Content",
              "text": "<string, string | boolean>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/docusaurus/cli-options.ts",
          "releaseTag": "Public",
          "name": "CliConfigurationOptions",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 3
          }
        },
        {
          "kind": "Class",
          "canonicalReference": "@xpack/doxygen2docusaurus!CliOptions:class",
          "docComment": "/**\n * Comprehensive CLI options class for documentation generation configuration.\n *\n * @remarks\n *\n * The CliOptions class contains all configuration parameters that control the behaviour of the doxygen2docusaurus conversion process, including paths, URLs, styling, and feature toggles.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class CliOptions "
            }
          ],
          "fileUrlPath": "src/docusaurus/cli-options.ts",
          "releaseTag": "Public",
          "isAbstract": false,
          "name": "CliOptions",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Constructor",
              "canonicalReference": "@xpack/doxygen2docusaurus!CliOptions:constructor(1)",
              "docComment": "/**\n * Creates a new CliOptions instance with the specified command options.\n *\n * @remarks\n *\n * Initialises the configuration object by setting the ID and optional flags like verbose and debug. When the ID is not 'default', adjusts folder paths and file names to include the ID for multi-configuration scenarios.\n *\n * @param commandOptions - Command-line options object containing ID and flags\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor(commandOptions: "
                },
                {
                  "kind": "Reference",
                  "text": "CommandOptions",
                  "canonicalReference": "@xpack/doxygen2docusaurus!~CommandOptions:type"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "commandOptions",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ]
            },
            {
              "kind": "Property",
              "canonicalReference": "@xpack/doxygen2docusaurus!CliOptions#apiBaseUrl:member",
              "docComment": "/**\n * URL path to the API documentation relative to the docs section.\n *\n * @remarks\n *\n * Defines the URL segment for API documentation within the docs section, without initial or final slashes. Used for generating navigation links.\n *\n * @defaultValue\n *\n * 'api'\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "apiBaseUrl: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "apiBaseUrl",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@xpack/doxygen2docusaurus!CliOptions#apiFolderPath:member",
              "docComment": "/**\n * Path to the API documentation folder relative to the docs folder.\n *\n * @remarks\n *\n * Specifies the subfolder within the docs folder where API reference documentation will be generated. Path should not include initial or final slashes.\n *\n * @defaultValue\n *\n * 'api'\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "apiFolderPath: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "apiFolderPath",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@xpack/doxygen2docusaurus!CliOptions#baseUrl:member",
              "docComment": "/**\n * Base URL for the entire website.\n *\n * @remarks\n *\n * Defines the root URL path for the website, typically '/' for root deployment or '/project-name/' for GitHub Pages or similar hosting.\n *\n * @defaultValue\n *\n * '/'\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "baseUrl: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "baseUrl",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@xpack/doxygen2docusaurus!CliOptions#compatibilityRedirectsOutputFolderPath:member",
              "docComment": "/**\n * Output folder for compatibility redirect files.\n *\n * @remarks\n *\n * Optional path relative to the website/static folder where HTML redirect files will be generated to maintain compatibility with original Doxygen URLs. When undefined, no redirect files are created.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "compatibilityRedirectsOutputFolderPath?: "
                },
                {
                  "kind": "Content",
                  "text": "string | undefined"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "compatibilityRedirectsOutputFolderPath",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@xpack/doxygen2docusaurus!CliOptions#customCssFilePath:member",
              "docComment": "/**\n * Path to the custom CSS file for styling overrides.\n *\n * @remarks\n *\n * Specifies the location where custom CSS styles will be written to provide Doxygen-specific styling within the Docusaurus theme. Path is relative to the current website folder.\n *\n * @defaultValue\n *\n * 'src/css/custom-doxygen2docusaurus.css'\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "customCssFilePath: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "customCssFilePath",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@xpack/doxygen2docusaurus!CliOptions#debug:member",
              "docComment": "/**\n * Controls debug-level output during the conversion process.\n *\n * @remarks\n *\n * When enabled, provides extensive debugging information useful for troubleshooting issues. Automatically enables verbose output as well.\n *\n * @defaultValue\n *\n * false\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "debug: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "debug",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@xpack/doxygen2docusaurus!CliOptions#docsBaseUrl:member",
              "docComment": "/**\n * URL path to the documentation section relative to the website root.\n *\n * @remarks\n *\n * Specifies the URL segment that leads to the documentation section, without initial or final slashes. Used for navigation and linking.\n *\n * @defaultValue\n *\n * 'docs'\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "docsBaseUrl: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "docsBaseUrl",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@xpack/doxygen2docusaurus!CliOptions#docsFolderPath:member",
              "docComment": "/**\n * Path to the documentation folder relative to the website folder.\n *\n * @remarks\n *\n * Defines the base folder where generated documentation will be placed within the Docusaurus website structure. Path should not include initial or final slashes.\n *\n * @defaultValue\n *\n * 'docs'\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "docsFolderPath: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "docsFolderPath",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@xpack/doxygen2docusaurus!CliOptions#doxygenXmlInputFolderPath:member",
              "docComment": "/**\n * Path to the Doxygen XML input folder relative to the website folder.\n *\n * @remarks\n *\n * Specifies the location of XML files generated by Doxygen, typically containing the parsed documentation data. Path should not include initial or final slashes.\n *\n * @defaultValue\n *\n * 'doxygen/xml'\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "doxygenXmlInputFolderPath: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "doxygenXmlInputFolderPath",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@xpack/doxygen2docusaurus!CliOptions#id:member",
              "docComment": "/**\n * String identifier for distinguishing multiple configuration instances.\n *\n * @remarks\n *\n * Used when multiple configuration instances exist to provide unique identification. Particularly useful in multi-configuration scenarios where different settings need to be applied to different outputs.\n *\n * @defaultValue\n *\n * 'default'\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "id: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "id",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@xpack/doxygen2docusaurus!CliOptions#imagesFolderPath:member",
              "docComment": "/**\n * Path for images relative to the `static` folder.\n *\n * @remarks\n *\n * Specifies where Doxygen-generated images will be stored within the Docusaurus static assets folder structure.\n *\n * @defaultValue\n *\n * 'assets/images/doxygen'\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "imagesFolderPath: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "imagesFolderPath",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@xpack/doxygen2docusaurus!CliOptions#listPagesAtTop:member",
              "docComment": "/**\n * Controls whether pages are listed at the top of the sidebar.\n *\n * @remarks\n *\n * When enabled, places page links prominently at the top of the sidebar navigation structure for easier access to important pages.\n *\n * @defaultValue\n *\n * true\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "listPagesAtTop: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "listPagesAtTop",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@xpack/doxygen2docusaurus!CliOptions#mainPageTitle:member",
              "docComment": "/**\n * Title displayed on the main API documentation page.\n *\n * @remarks\n *\n * When specified, this title overrides the default title generated from the project brief. When empty, the title is automatically constructed from the project configuration.\n *\n * @defaultValue\n *\n * ''\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "mainPageTitle: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "mainPageTitle",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@xpack/doxygen2docusaurus!CliOptions#navbarFilePath:member",
              "docComment": "/**\n * Path to the navbar configuration file.\n *\n * @remarks\n *\n * Specifies the location where the generated navbar dropdown JSON configuration will be written, relative to the current website folder.\n *\n * @defaultValue\n *\n * 'docusaurus-config-navbar-doxygen.json'\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "navbarFilePath: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "navbarFilePath",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@xpack/doxygen2docusaurus!CliOptions#navbarLabel:member",
              "docComment": "/**\n * Label displayed in the top navigation bar.\n *\n * @remarks\n *\n * Short text that appears in the Docusaurus top navigation bar to provide access to the API documentation section.\n *\n * @defaultValue\n *\n * 'Reference'\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "navbarLabel: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "navbarLabel",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@xpack/doxygen2docusaurus!CliOptions#navbarPosition:member",
              "docComment": "/**\n * Position of the navigation menu in the top bar.\n *\n * @remarks\n *\n * Determines whether the API documentation menu appears on the left or right side of the Docusaurus navigation bar.\n *\n * @defaultValue\n *\n * 'left'\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "navbarPosition: "
                },
                {
                  "kind": "Content",
                  "text": "'left' | 'right'"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "navbarPosition",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@xpack/doxygen2docusaurus!CliOptions#originalPagesNote:member",
              "docComment": "/**\n * Note about the location of original Doxygen pages.\n *\n * @remarks\n *\n * Provides information about where to find the original Doxygen HTML pages for comparison purposes. When populated, this note is displayed to inform users about the availability of alternative documentation formats.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "originalPagesNote: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "originalPagesNote",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Method",
              "canonicalReference": "@xpack/doxygen2docusaurus!CliOptions#parse:member(1)",
              "docComment": "/**\n * Parses configuration options from various JSON configuration sources.\n *\n * @remarks\n *\n * Attempts to load configuration from multiple locations in order of preference: config/doxygen2docusaurus.json, doxygen2docusaurus.json, and package.json. Validates required properties and enables debug output if requested.\n *\n * @throws\n *\n * Assertion error if required configuration properties are missing\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "parse(): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<void>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "parse"
            },
            {
              "kind": "Property",
              "canonicalReference": "@xpack/doxygen2docusaurus!CliOptions#renderProgramListing:member",
              "docComment": "/**\n * Controls program listing rendering in File pages.\n *\n * @remarks\n *\n * When enabled, includes syntax-highlighted source code listings within the generated File documentation pages.\n *\n * @defaultValue\n *\n * true\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "renderProgramListing: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "renderProgramListing",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@xpack/doxygen2docusaurus!CliOptions#renderProgramListingInline:member",
              "docComment": "/**\n * Controls program listing rendering in member definition sections.\n *\n * @remarks\n *\n * When enabled, includes inline syntax-highlighted code snippets within member documentation sections for better context.\n *\n * @defaultValue\n *\n * true\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "renderProgramListingInline: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "renderProgramListingInline",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Method",
              "canonicalReference": "@xpack/doxygen2docusaurus!CliOptions#selectMultiConfiguration:member(1)",
              "docComment": "/**\n * Selects the appropriate configuration from multi-configuration options.\n *\n * @remarks\n *\n * When using a specific ID, returns the corresponding configuration. For the default ID, returns either the 'default' configuration or treats the entire object as a single configuration.\n *\n * @param multiConfigurations - Configuration object or multi-config map\n *\n * @returns Selected configuration options or undefined if not found\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "selectMultiConfiguration(multiConfigurations: "
                },
                {
                  "kind": "Reference",
                  "text": "CliConfigurationOptions",
                  "canonicalReference": "@xpack/doxygen2docusaurus!~CliConfigurationOptions:type"
                },
                {
                  "kind": "Content",
                  "text": " | "
                },
                {
                  "kind": "Reference",
                  "text": "MultiConfigurations",
                  "canonicalReference": "@xpack/doxygen2docusaurus!~MultiConfigurations:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "CliConfigurationOptions",
                  "canonicalReference": "@xpack/doxygen2docusaurus!~CliConfigurationOptions:type"
                },
                {
                  "kind": "Content",
                  "text": " | undefined"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 7
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "multiConfigurations",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 4
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "selectMultiConfiguration"
            },
            {
              "kind": "Property",
              "canonicalReference": "@xpack/doxygen2docusaurus!CliOptions#sidebarCategoryFilePath:member",
              "docComment": "/**\n * Path to the sidebar category configuration file.\n *\n * @remarks\n *\n * Specifies the location where the generated sidebar category JSON configuration will be written, relative to the current website folder.\n *\n * @defaultValue\n *\n * 'sidebar-category-doxygen.json'\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "sidebarCategoryFilePath: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "sidebarCategoryFilePath",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@xpack/doxygen2docusaurus!CliOptions#sidebarCategoryLabel:member",
              "docComment": "/**\n * Label displayed in the Docusaurus sidebar for the API documentation.\n *\n * @remarks\n *\n * Short descriptive text that appears in the sidebar navigation to identify the API reference section.\n *\n * @defaultValue\n *\n * 'API Reference (Doxygen)'\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "sidebarCategoryLabel: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "sidebarCategoryLabel",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@xpack/doxygen2docusaurus!CliOptions#suggestToDoDescriptions:member",
              "docComment": "/**\n * Controls whether TODO suggestion descriptions are displayed.\n *\n * @remarks\n *\n * When enabled, shows suggestions for improvements or missing content that could enhance the generated documentation quality.\n *\n * @defaultValue\n *\n * false\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "suggestToDoDescriptions: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "suggestToDoDescriptions",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@xpack/doxygen2docusaurus!CliOptions#verbose:member",
              "docComment": "/**\n * Controls verbose output during the conversion process.\n *\n * @remarks\n *\n * When enabled, provides detailed logging information about the conversion process, including file processing status and statistics.\n *\n * @defaultValue\n *\n * false\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "verbose: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "verbose",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            }
          ],
          "implementsTokenRanges": []
        },
        {
          "kind": "Class",
          "canonicalReference": "@xpack/doxygen2docusaurus!CodeLineDataModel:class",
          "docComment": "/**\n * Data model for individual code line elements within program listings.\n *\n * @remarks\n *\n * Represents a single line of source code with optional syntax highlighting, line numbering, and cross-reference information. This implementation processes Doxygen's codeline elements, which form the fundamental building blocks of program listings and code examples within the documentation.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class CodeLineDataModel extends "
            },
            {
              "kind": "Reference",
              "text": "AbstractCodeLineType",
              "canonicalReference": "@xpack/doxygen2docusaurus!AbstractCodeLineType:class"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "src/doxygen/data-model/compounds/descriptiontype-dm.ts",
          "releaseTag": "Public",
          "isAbstract": false,
          "name": "CodeLineDataModel",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Constructor",
              "canonicalReference": "@xpack/doxygen2docusaurus!CodeLineDataModel:constructor(1)",
              "docComment": "/**\n * Constructs a CodeLineDataModel from XML element data.\n *\n * @remarks\n *\n * This constructor delegates to the parent AbstractCodeLineType to handle the standard code line processing whilst specifically identifying the element as a 'codeline' type for proper XML schema compliance.\n *\n * @param xml - The Doxygen XML parser instance for processing XML content\n *\n * @param element - The XML element object containing the codeline data\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor(xml: "
                },
                {
                  "kind": "Reference",
                  "text": "DoxygenXmlParser",
                  "canonicalReference": "@xpack/doxygen2docusaurus!DoxygenXmlParser:class"
                },
                {
                  "kind": "Content",
                  "text": ", element: "
                },
                {
                  "kind": "Content",
                  "text": "object"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "xml",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "element",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                }
              ]
            }
          ],
          "extendsTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@xpack/doxygen2docusaurus!~CommandOptions:type",
          "docComment": "/**\n * Command line argument options passed to the application.\n *\n * @remarks\n *\n * Represents the parsed command line arguments with flexible typing to accommodate various option formats and undefined values.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type CommandOptions = "
            },
            {
              "kind": "Reference",
              "text": "Record",
              "canonicalReference": "!Record:type"
            },
            {
              "kind": "Content",
              "text": "<string, string | boolean | undefined>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/docusaurus/cli-options.ts",
          "releaseTag": "Public",
          "name": "CommandOptions",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 3
          }
        },
        {
          "kind": "Class",
          "canonicalReference": "@xpack/doxygen2docusaurus!CompoundDefDataModel:class",
          "docComment": "/**\n * Concrete implementation of compound definition data model.\n *\n * @remarks\n *\n * Provides the primary data model implementation for Doxygen compound definitions, handling all types of compounds including classes, structures, files, namespaces, and pages. This class serves as the main entry point for processing compound definition XML elements in the Doxygen output.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class CompoundDefDataModel extends "
            },
            {
              "kind": "Reference",
              "text": "AbstractCompoundDefType",
              "canonicalReference": "@xpack/doxygen2docusaurus!AbstractCompoundDefType:class"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "src/doxygen/data-model/compounds/compounddef-dm.ts",
          "releaseTag": "Public",
          "isAbstract": false,
          "name": "CompoundDefDataModel",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Constructor",
              "canonicalReference": "@xpack/doxygen2docusaurus!CompoundDefDataModel:constructor(1)",
              "docComment": "/**\n * Constructs a new CompoundDefDataModel instance.\n *\n * @remarks\n *\n * Creates a data model object for 'compounddef' XML elements by delegating to the parent constructor with the appropriate element name. This represents the root element for all compound definitions in Doxygen XML output.\n *\n * @param xml - The XML parser instance for processing elements\n *\n * @param element - The XML element object to parse\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor(xml: "
                },
                {
                  "kind": "Reference",
                  "text": "DoxygenXmlParser",
                  "canonicalReference": "@xpack/doxygen2docusaurus!DoxygenXmlParser:class"
                },
                {
                  "kind": "Content",
                  "text": ", element: "
                },
                {
                  "kind": "Content",
                  "text": "object"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "xml",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "element",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                }
              ]
            }
          ],
          "extendsTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "Class",
          "canonicalReference": "@xpack/doxygen2docusaurus!DataModel:class",
          "docComment": "/**\n * Top-level data model class for orchestrating Doxygen XML parsing and data organisation.\n *\n * @remarks\n *\n * This class serves as the primary entry point for parsing Doxygen-generated XML files and constructing a comprehensive data model. It coordinates the parsing of index files, compound definitions, and configuration files, maintaining references to all parsed content for subsequent processing. The class provides methods for sequential parsing operations and ensures data integrity throughout the parsing workflow.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class DataModel "
            }
          ],
          "fileUrlPath": "src/doxygen/data-model/data-model.ts",
          "releaseTag": "Public",
          "isAbstract": false,
          "name": "DataModel",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Constructor",
              "canonicalReference": "@xpack/doxygen2docusaurus!DataModel:constructor(1)",
              "docComment": "/**\n * Constructs a new DataModel instance with the specified configuration options.\n *\n * @remarks\n *\n * Initialises the data model with the provided configuration options and creates a new DoxygenXmlParser instance for XML processing. The compound definitions array is initialised as empty and will be populated during the parsing phase.\n *\n * @param options - The command-line interface options for controlling parsing behaviour\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor(options: "
                },
                {
                  "kind": "Reference",
                  "text": "CliOptions",
                  "canonicalReference": "@xpack/doxygen2docusaurus!CliOptions:class"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "options",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ]
            },
            {
              "kind": "Property",
              "canonicalReference": "@xpack/doxygen2docusaurus!DataModel#compoundDefs:member",
              "docComment": "/**\n * Collection of compound definition data models parsed from individual XML files.\n *\n * @remarks\n *\n * Each compound definition represents a documented entity such as a class, namespace, or file, along with its members and associated documentation. Populated by parsing XML files referenced in the index.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "compoundDefs: "
                },
                {
                  "kind": "Reference",
                  "text": "CompoundDefDataModel",
                  "canonicalReference": "@xpack/doxygen2docusaurus!CompoundDefDataModel:class"
                },
                {
                  "kind": "Content",
                  "text": "[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "compoundDefs",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@xpack/doxygen2docusaurus!DataModel#doxyfile:member",
              "docComment": "/**\n * The parsed Doxyfile configuration data model.\n *\n * @remarks\n *\n * Contains the Doxygen configuration options and settings that influenced the generation of the XML documentation. Parsed from `Doxyfile.xml` if present in the input folder.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "doxyfile?: "
                },
                {
                  "kind": "Reference",
                  "text": "DoxygenFileDataModel",
                  "canonicalReference": "@xpack/doxygen2docusaurus!DoxygenFileDataModel:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "doxyfile",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@xpack/doxygen2docusaurus!DataModel#doxygenindex:member",
              "docComment": "/**\n * The parsed Doxygen index data model from the main index XML file.\n *\n * @remarks\n *\n * Contains the top-level index structure that references all compound definitions and provides the navigation structure for the documentation. Populated during the initial parsing phase from `index.xml`.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "doxygenindex?: "
                },
                {
                  "kind": "Reference",
                  "text": "DoxygenIndexDataModel",
                  "canonicalReference": "@xpack/doxygen2docusaurus!DoxygenIndexDataModel:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "doxygenindex",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@xpack/doxygen2docusaurus!DataModel#options:member",
              "docComment": "/**\n * The global configuration options for the parsing operation.\n *\n * @remarks\n *\n * Contains command-line interface options that control the behaviour of the parser and influence how XML files are processed and data models are constructed.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "options: "
                },
                {
                  "kind": "Reference",
                  "text": "CliOptions",
                  "canonicalReference": "@xpack/doxygen2docusaurus!CliOptions:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "options",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Method",
              "canonicalReference": "@xpack/doxygen2docusaurus!DataModel#parse:member(1)",
              "docComment": "/**\n * Orchestrates the complete parsing of Doxygen XML files and data model construction.\n *\n * @remarks\n *\n * This method performs the complete parsing workflow in sequential phases: parsing the main index file, processing all referenced compound XML files, and parsing the Doxyfile configuration. It maintains the original XML element order and content fidelity throughout the process. Progress information is logged to the console, with detailed output in verbose mode.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "parse(): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<void>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "parse"
            },
            {
              "kind": "Property",
              "canonicalReference": "@xpack/doxygen2docusaurus!DataModel#parsedFilesCounter:member",
              "docComment": "/**\n * Counter tracking the number of XML files successfully parsed.\n *\n * @remarks\n *\n * Incremented for each XML file processed during the parsing operation, providing metrics for progress monitoring and diagnostic reporting.\n *\n * @defaultValue\n *\n * 0\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "parsedFilesCounter: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "parsedFilesCounter",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Method",
              "canonicalReference": "@xpack/doxygen2docusaurus!DataModel#parseDoxyfile:member(1)",
              "docComment": "/**\n * Parses the Doxyfile XML and initialises the configuration data model.\n *\n * @remarks\n *\n * This method reads and parses the `Doxyfile.xml` file, ignoring the XML prologue and top-level text nodes. It extracts the `doxyfile` element and constructs the corresponding configuration data model. Any unrecognised elements are logged for diagnostic purposes.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "parseDoxyfile(): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<void>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "parseDoxyfile"
            },
            {
              "kind": "Method",
              "canonicalReference": "@xpack/doxygen2docusaurus!DataModel#parseDoxygenIndex:member(1)",
              "docComment": "/**\n * Parses the main Doxygen index XML file and initialises the index data model.\n *\n * @remarks\n *\n * This method reads and parses the `index.xml` file, ignoring the XML prologue and top-level text nodes. It extracts the `doxygenindex` element and constructs the corresponding data model. Any unrecognised elements are logged for diagnostic purposes.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "parseDoxygenIndex(): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<void>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "parseDoxygenIndex"
            },
            {
              "kind": "Method",
              "canonicalReference": "@xpack/doxygen2docusaurus!DataModel#parseFile:member(1)",
              "docComment": "/**\n * Reads and parses the specified XML file, returning the parsed content.\n *\n * @remarks\n *\n * This method constructs the full file path using the configured input folder, reads the XML file as a UTF-8 string, and parses it using the configured XML parser. The method increments the internal counter for parsed files and, if verbose mode is enabled, logs the file being parsed.\n *\n * @param fileName - The name of the XML file to be parsed\n *\n * @returns A promise that resolves to the parsed XML content\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "parseFile({ fileName }: "
                },
                {
                  "kind": "Content",
                  "text": "{\n        fileName: string;\n    }"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<any>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 5
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "{ fileName }",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "parseFile"
            },
            {
              "kind": "Method",
              "canonicalReference": "@xpack/doxygen2docusaurus!DataModel#processCompoundDefs:member(1)",
              "docComment": "/**\n * Processes compound definitions from the parsed Doxygen XML elements.\n *\n * @remarks\n *\n * This method iterates through the parsed XML elements, ignoring the XML prologue and top-level text nodes. For recognised `doxygen` elements, it constructs the compound definitions and appends them to the internal data model. Unrecognised elements are logged for further analysis.\n *\n * @param indexCompound - The compound index data model\n *\n * @param parsedDoxygenElements - The array of parsed XML elements for the compound\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "processCompoundDefs(indexCompound: "
                },
                {
                  "kind": "Reference",
                  "text": "IndexCompoundDataModel",
                  "canonicalReference": "@xpack/doxygen2docusaurus!IndexCompoundDataModel:class"
                },
                {
                  "kind": "Content",
                  "text": ", parsedDoxygenElements: "
                },
                {
                  "kind": "Reference",
                  "text": "XmlElement",
                  "canonicalReference": "@xpack/doxygen2docusaurus!XmlElement:interface"
                },
                {
                  "kind": "Content",
                  "text": "[]"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 6,
                "endIndex": 7
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "indexCompound",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "parsedDoxygenElements",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 5
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "processCompoundDefs"
            },
            {
              "kind": "Method",
              "canonicalReference": "@xpack/doxygen2docusaurus!DataModel#processMemberdefs:member(1)",
              "docComment": "/**\n * Processes member definitions and updates member kinds where necessary.\n *\n * @remarks\n *\n * This method traverses all compound definitions and their associated sections. It collects member definitions by their identifiers and, for each member with an empty kind, assigns the kind from the corresponding member definition. This ensures that all members are correctly classified within the internal data model.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "processMemberdefs(): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "processMemberdefs"
            },
            {
              "kind": "Property",
              "canonicalReference": "@xpack/doxygen2docusaurus!DataModel#projectVersion:member",
              "docComment": "/**\n * The project version string extracted from the documentation metadata.\n *\n * @remarks\n *\n * Optional version identifier for the documented project, typically derived from the Doxygen configuration or project metadata during parsing.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "projectVersion?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "projectVersion",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@xpack/doxygen2docusaurus!DataModel#xml:member",
              "docComment": "/**\n * The XML parser instance used for processing Doxygen XML files.\n *\n * @remarks\n *\n * Provides low-level XML parsing functionality and utility methods for extracting elements, attributes, and text content from the parsed XML structure.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "xml: "
                },
                {
                  "kind": "Reference",
                  "text": "DoxygenXmlParser",
                  "canonicalReference": "@xpack/doxygen2docusaurus!DoxygenXmlParser:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "xml",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            }
          ],
          "implementsTokenRanges": []
        },
        {
          "kind": "Class",
          "canonicalReference": "@xpack/doxygen2docusaurus!DefValDataModel:class",
          "docComment": "/**\n * Data model for default value elements within documentation content.\n *\n * @remarks\n *\n * Represents default value elements that contain parameter default values within function and method documentation. This implementation processes Doxygen's defval elements, which contain mixed text and reference content describing the default values assigned to function parameters when no explicit value is provided during function calls.\n *\n * The linked text structure enables cross-references to constants, enums, and other symbols used within default value expressions.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class DefValDataModel extends "
            },
            {
              "kind": "Reference",
              "text": "AbstractLinkedTextType",
              "canonicalReference": "@xpack/doxygen2docusaurus!AbstractLinkedTextType:class"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "src/doxygen/data-model/compounds/linkedtexttype-dm.ts",
          "releaseTag": "Public",
          "isAbstract": false,
          "name": "DefValDataModel",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Constructor",
              "canonicalReference": "@xpack/doxygen2docusaurus!DefValDataModel:constructor(1)",
              "docComment": "/**\n * Constructs a DefValDataModel from XML element data.\n *\n * @remarks\n *\n * This constructor delegates to the parent AbstractLinkedTextType to handle linked text processing whilst identifying the element as 'defval' for proper XML schema compliance and default value content processing.\n *\n * @param xml - The Doxygen XML parser instance for processing XML content\n *\n * @param element - The XML element object containing the default value data\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor(xml: "
                },
                {
                  "kind": "Reference",
                  "text": "DoxygenXmlParser",
                  "canonicalReference": "@xpack/doxygen2docusaurus!DoxygenXmlParser:class"
                },
                {
                  "kind": "Content",
                  "text": ", element: "
                },
                {
                  "kind": "Content",
                  "text": "object"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "xml",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "element",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                }
              ]
            }
          ],
          "extendsTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "Class",
          "canonicalReference": "@xpack/doxygen2docusaurus!DerivedCompoundRefDataModel:class",
          "docComment": "/**\n * Data model for derived compound references in inheritance relationships.\n *\n * @remarks\n *\n * Represents references to derived classes or child compounds in inheritance hierarchies as documented by Doxygen. This class handles the 'derivedcompoundref' XML elements that establish child-parent relationships in object-oriented documentation structures.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class DerivedCompoundRefDataModel extends "
            },
            {
              "kind": "Reference",
              "text": "AbstractCompoundRefType",
              "canonicalReference": "@xpack/doxygen2docusaurus!AbstractCompoundRefType:class"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "src/doxygen/data-model/compounds/compoundreftype-dm.ts",
          "releaseTag": "Public",
          "isAbstract": false,
          "name": "DerivedCompoundRefDataModel",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Constructor",
              "canonicalReference": "@xpack/doxygen2docusaurus!DerivedCompoundRefDataModel:constructor(1)",
              "docComment": "/**\n * Constructs a new DerivedCompoundRefDataModel instance.\n *\n * @remarks\n *\n * Creates a data model object for 'derivedcompoundref' XML elements, representing inheritance relationships where other compounds derive from the current compound as their base.\n *\n * @param xml - The XML parser instance for processing elements\n *\n * @param element - The XML element object to parse\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor(xml: "
                },
                {
                  "kind": "Reference",
                  "text": "DoxygenXmlParser",
                  "canonicalReference": "@xpack/doxygen2docusaurus!DoxygenXmlParser:class"
                },
                {
                  "kind": "Content",
                  "text": ", element: "
                },
                {
                  "kind": "Content",
                  "text": "object"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "xml",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "element",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                }
              ]
            }
          ],
          "extendsTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "Class",
          "canonicalReference": "@xpack/doxygen2docusaurus!DescriptionDataModel:class",
          "docComment": "/**\n * Data model for general description elements within documentation.\n *\n * @remarks\n *\n * Represents general description elements that provide standard documentation content for entities. This implementation processes Doxygen's description elements, which contain descriptive content including paragraphs and other documentation structures for general-purpose descriptions.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class DescriptionDataModel extends "
            },
            {
              "kind": "Reference",
              "text": "AbstractDescriptionType",
              "canonicalReference": "@xpack/doxygen2docusaurus!AbstractDescriptionType:class"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "src/doxygen/data-model/compounds/descriptiontype-dm.ts",
          "releaseTag": "Public",
          "isAbstract": false,
          "name": "DescriptionDataModel",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Constructor",
              "canonicalReference": "@xpack/doxygen2docusaurus!DescriptionDataModel:constructor(1)",
              "docComment": "/**\n * Constructs a DescriptionDataModel from XML element data.\n *\n * @remarks\n *\n * This constructor delegates to the parent AbstractDescriptionType whilst identifying the element as 'description' for general-purpose description content processing and documentation organisation.\n *\n * @param xml - The Doxygen XML parser instance for processing XML content\n *\n * @param element - The XML element object containing the description data\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor(xml: "
                },
                {
                  "kind": "Reference",
                  "text": "DoxygenXmlParser",
                  "canonicalReference": "@xpack/doxygen2docusaurus!DoxygenXmlParser:class"
                },
                {
                  "kind": "Content",
                  "text": ", element: "
                },
                {
                  "kind": "Content",
                  "text": "object"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "xml",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "element",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                }
              ]
            }
          ],
          "extendsTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "Class",
          "canonicalReference": "@xpack/doxygen2docusaurus!DetailedDescriptionDataModel:class",
          "docComment": "/**\n * Data model for detailed description elements within documentation.\n *\n * @remarks\n *\n * Represents detailed description elements that provide comprehensive documentation content for entities. This implementation processes Doxygen's detaileddescription elements, which contain extensive descriptive content including paragraphs, sections, lists, and other rich documentation structures.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class DetailedDescriptionDataModel extends "
            },
            {
              "kind": "Reference",
              "text": "AbstractDescriptionType",
              "canonicalReference": "@xpack/doxygen2docusaurus!AbstractDescriptionType:class"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "src/doxygen/data-model/compounds/descriptiontype-dm.ts",
          "releaseTag": "Public",
          "isAbstract": false,
          "name": "DetailedDescriptionDataModel",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Constructor",
              "canonicalReference": "@xpack/doxygen2docusaurus!DetailedDescriptionDataModel:constructor(1)",
              "docComment": "/**\n * Constructs a DetailedDescriptionDataModel from XML element data.\n *\n * @remarks\n *\n * This constructor delegates to the parent AbstractDescriptionType whilst identifying the element as 'detaileddescription' for comprehensive content processing and documentation organisation.\n *\n * @param xml - The Doxygen XML parser instance for processing XML content\n *\n * @param element - The XML element object containing the detailed description data\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor(xml: "
                },
                {
                  "kind": "Reference",
                  "text": "DoxygenXmlParser",
                  "canonicalReference": "@xpack/doxygen2docusaurus!DoxygenXmlParser:class"
                },
                {
                  "kind": "Content",
                  "text": ", element: "
                },
                {
                  "kind": "Content",
                  "text": "object"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "xml",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "element",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                }
              ]
            }
          ],
          "extendsTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "Class",
          "canonicalReference": "@xpack/doxygen2docusaurus!DoxygenFileDataModel:class",
          "docComment": "/**\n * Concrete data model class for doxyfile elements.\n *\n * @remarks\n *\n * Represents the root element of Doxyfile XML configuration files, extending the abstract base class to provide specific handling for 'doxyfile' elements. This class serves as the primary entry point for parsing Doxygen configuration files and provides access to all configuration options and metadata contained within the file structure.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class DoxygenFileDataModel extends "
            },
            {
              "kind": "Reference",
              "text": "AbstractDoxygenFileType",
              "canonicalReference": "@xpack/doxygen2docusaurus!AbstractDoxygenFileType:class"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "src/doxygen/data-model/doxyfile/doxyfiletype-dm.ts",
          "releaseTag": "Public",
          "isAbstract": false,
          "name": "DoxygenFileDataModel",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Constructor",
              "canonicalReference": "@xpack/doxygen2docusaurus!DoxygenFileDataModel:constructor(1)",
              "docComment": "/**\n * Constructs a new DoxygenFileDataModel instance from XML data.\n *\n * @remarks\n *\n * Initialises the Doxyfile data model by parsing the provided XML element as a 'doxyfile' element type. The constructor delegates to the parent class for common configuration processing whilst specifying the element name for proper XML structure handling.\n *\n * @param xml - The Doxygen XML parser instance for processing XML elements\n *\n * @param element - The XML element containing the doxyfile data\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor(xml: "
                },
                {
                  "kind": "Reference",
                  "text": "DoxygenXmlParser",
                  "canonicalReference": "@xpack/doxygen2docusaurus!DoxygenXmlParser:class"
                },
                {
                  "kind": "Content",
                  "text": ", element: "
                },
                {
                  "kind": "Content",
                  "text": "object"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "xml",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "element",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                }
              ]
            }
          ],
          "extendsTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "Class",
          "canonicalReference": "@xpack/doxygen2docusaurus!DoxygenFileOptionDataModel:class",
          "docComment": "/**\n * Concrete data model class for Doxyfile option elements.\n *\n * @remarks\n *\n * Represents individual configuration option elements found within Doxyfile XML structures. This class extends the abstract base to provide specific handling for 'option' elements, which define individual Doxygen configuration settings including their identifiers, types, default status, and associated values. Each option corresponds to a specific configuration parameter that controls Doxygen's documentation generation behaviour.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class DoxygenFileOptionDataModel extends "
            },
            {
              "kind": "Reference",
              "text": "AbstractDoxygenFileOptionType",
              "canonicalReference": "@xpack/doxygen2docusaurus!AbstractDoxygenFileOptionType:class"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "src/doxygen/data-model/doxyfile/doxyfileoptiontype-dm.ts",
          "releaseTag": "Public",
          "isAbstract": false,
          "name": "DoxygenFileOptionDataModel",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Constructor",
              "canonicalReference": "@xpack/doxygen2docusaurus!DoxygenFileOptionDataModel:constructor(1)",
              "docComment": "/**\n * Constructs a new DoxygenFileOptionDataModel instance from XML data.\n *\n * @remarks\n *\n * Initialises the option data model by parsing the provided XML element as an 'option' element type. The constructor delegates to the parent class for common option processing whilst specifying the element name for proper XML structure handling.\n *\n * @param xml - The Doxygen XML parser instance for processing XML elements\n *\n * @param element - The XML element containing the option data\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor(xml: "
                },
                {
                  "kind": "Reference",
                  "text": "DoxygenXmlParser",
                  "canonicalReference": "@xpack/doxygen2docusaurus!DoxygenXmlParser:class"
                },
                {
                  "kind": "Content",
                  "text": ", element: "
                },
                {
                  "kind": "Content",
                  "text": "object"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "xml",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "element",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                }
              ]
            }
          ],
          "extendsTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "Class",
          "canonicalReference": "@xpack/doxygen2docusaurus!DoxygenIndexDataModel:class",
          "docComment": "/**\n * Concrete data model class for doxygenindex elements.\n *\n * @remarks\n *\n * Represents the root element of Doxygen index XML files, extending the abstract base class to provide specific handling for 'doxygenindex' elements. This class serves as the primary entry point for parsing index files and provides access to all compound definitions and metadata contained within the index structure.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class DoxygenIndexDataModel extends "
            },
            {
              "kind": "Reference",
              "text": "AbstractIndexDoxygenType",
              "canonicalReference": "@xpack/doxygen2docusaurus!AbstractIndexDoxygenType:class"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "src/doxygen/data-model/index/indexdoxygentype-dm.ts",
          "releaseTag": "Public",
          "isAbstract": false,
          "name": "DoxygenIndexDataModel",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Constructor",
              "canonicalReference": "@xpack/doxygen2docusaurus!DoxygenIndexDataModel:constructor(1)",
              "docComment": "/**\n * Constructs a new DoxygenIndexDataModel instance from XML data.\n *\n * @remarks\n *\n * Initialises the Doxygen index data model by parsing the provided XML element as a 'doxygenindex' element type. The constructor delegates to the parent class for common processing whilst specifying the element name for proper XML structure handling.\n *\n * @param xml - The Doxygen XML parser instance for processing XML elements\n *\n * @param element - The XML element containing the doxygenindex data\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor(xml: "
                },
                {
                  "kind": "Reference",
                  "text": "DoxygenXmlParser",
                  "canonicalReference": "@xpack/doxygen2docusaurus!DoxygenXmlParser:class"
                },
                {
                  "kind": "Content",
                  "text": ", element: "
                },
                {
                  "kind": "Content",
                  "text": "object"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "xml",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "element",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                }
              ]
            }
          ],
          "extendsTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "Class",
          "canonicalReference": "@xpack/doxygen2docusaurus!DoxygenXmlParser:class",
          "docComment": "/**\n * XML parser for Doxygen-generated documentation files.\n *\n * @remarks\n *\n * This class initialises the XML parser with options that preserve the order and structure of the original XML content, ensuring accurate conversion for documentation purposes. It maintains a counter for the number of files parsed and stores the resulting data model.\n *\n * The parser is configured to handle Doxygen's specific XML format whilst maintaining fidelity to the source structure and content organisation.\n *\n * @example\n * ```typescript\n * const parser = new DoxygenXmlParser({ options });\n * const dataModel = await parser.parse();\n * ```\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class DoxygenXmlParser "
            }
          ],
          "fileUrlPath": "src/doxygen/data-model/doxygen-xml-parser.ts",
          "releaseTag": "Public",
          "isAbstract": false,
          "name": "DoxygenXmlParser",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Constructor",
              "canonicalReference": "@xpack/doxygen2docusaurus!DoxygenXmlParser:constructor(1)",
              "docComment": "/**\n * Constructs a new instance of the DoxygenXmlParser class.\n *\n * @remarks\n *\n * This constructor initialises the XML parser with settings that preserve the order and structure of the original XML content, remove namespace prefixes, and ensure that both tag and attribute values are parsed. The values are not trimmed, maintaining fidelity to the source XML. The provided options are stored for use throughout the parsing process.\n *\n * @param options - The global configuration options\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor(options: "
                },
                {
                  "kind": "Reference",
                  "text": "CliOptions",
                  "canonicalReference": "@xpack/doxygen2docusaurus!CliOptions:class"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "options",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ]
            },
            {
              "kind": "Method",
              "canonicalReference": "@xpack/doxygen2docusaurus!DoxygenXmlParser#getAttributeBooleanValue:member(1)",
              "docComment": "/**\n * Retrieves the value of a named attribute as a boolean.\n *\n * @remarks\n *\n * This method checks whether the specified attribute exists on the XML element, and returns true if its value is the string 'yes' (case-insensitive). If the attribute is missing or its value is not a string, an error is thrown.\n *\n * @param element - The XML element containing the attribute\n *\n * @param name - The name of the attribute to retrieve\n *\n * @returns True if the attribute value is 'yes' (case-insensitive); otherwise, false\n *\n * @throws\n *\n * If the attribute does not exist or is not a string\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getAttributeBooleanValue(element: "
                },
                {
                  "kind": "Content",
                  "text": "object"
                },
                {
                  "kind": "Content",
                  "text": ", name: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "element",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "name",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "getAttributeBooleanValue"
            },
            {
              "kind": "Method",
              "canonicalReference": "@xpack/doxygen2docusaurus!DoxygenXmlParser#getAttributeNumberValue:member(1)",
              "docComment": "/**\n * Retrieves the value of a named attribute as a number.\n *\n * @remarks\n *\n * This method checks whether the specified attribute exists on the XML element and returns its value as a number. If the attribute is missing or its value is not a number, an error is thrown to indicate the absence or incorrect type.\n *\n * @param element - The XML element containing the attribute\n *\n * @param name - The name of the attribute to retrieve\n *\n * @returns The attribute value as a number\n *\n * @throws\n *\n * If the attribute does not exist or is not a number\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getAttributeNumberValue(element: "
                },
                {
                  "kind": "Content",
                  "text": "object"
                },
                {
                  "kind": "Content",
                  "text": ", name: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "element",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "name",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "getAttributeNumberValue"
            },
            {
              "kind": "Method",
              "canonicalReference": "@xpack/doxygen2docusaurus!DoxygenXmlParser#getAttributesNames:member(1)",
              "docComment": "/**\n * Retrieves the names of all attributes present on the specified XML element.\n *\n * @remarks\n *\n * This method accesses the ':\\@' property of the XML element, which is the convention used by the XML parser for storing attributes, and returns the keys of this object as an array of attribute names. The method assumes the element has attributes and does not perform validation - use {@link DoxygenXmlParser.hasAttributes} to check for attribute presence first.\n *\n * @param element - The XML element to inspect for attribute names\n *\n * @returns An array of strings containing the names of all attributes\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getAttributesNames(element: "
                },
                {
                  "kind": "Content",
                  "text": "object"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "string[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "element",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "getAttributesNames"
            },
            {
              "kind": "Method",
              "canonicalReference": "@xpack/doxygen2docusaurus!DoxygenXmlParser#getAttributeStringValue:member(1)",
              "docComment": "/**\n * Retrieves the value of a named attribute as a string.\n *\n * @remarks\n *\n * This method checks whether the specified attribute exists on the XML element and returns its value as a string. If the attribute value is originally a number (as the XML parser may return numeric strings as numbers), it is converted to a string to maintain consistency with the DTD specification. If the attribute is missing, an error is thrown to indicate the absence.\n *\n * @param element - The XML element containing the attribute\n *\n * @param name - The name of the attribute to retrieve\n *\n * @returns The attribute value as a string\n *\n * @throws\n *\n * If the attribute does not exist\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getAttributeStringValue(element: "
                },
                {
                  "kind": "Content",
                  "text": "object"
                },
                {
                  "kind": "Content",
                  "text": ", name: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "element",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "name",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "getAttributeStringValue"
            },
            {
              "kind": "Method",
              "canonicalReference": "@xpack/doxygen2docusaurus!DoxygenXmlParser#getInnerElementBoolean:member(1)",
              "docComment": "/**\n * Retrieves the boolean value of a named child element.\n *\n * @remarks\n *\n * This method accesses the specified child element and returns its value as a boolean. If the child element is missing, an error is thrown. If the child element is empty, false is returned. If there is more than one child element, an error is thrown to indicate unexpected structure.\n *\n * @param element - The XML element containing the child element\n *\n * @param name - The name of the child element\n *\n * @returns True if the child element's text is 'true' (case-insensitive); otherwise, false\n *\n * @throws\n *\n * If the child element does not exist or contains more than one element\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getInnerElementBoolean(element: "
                },
                {
                  "kind": "Content",
                  "text": "object"
                },
                {
                  "kind": "Content",
                  "text": ", name: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "element",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "name",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "getInnerElementBoolean"
            },
            {
              "kind": "Method",
              "canonicalReference": "@xpack/doxygen2docusaurus!DoxygenXmlParser#getInnerElementNumber:member(1)",
              "docComment": "/**\n * Retrieves the numeric value of a named child element.\n *\n * @remarks\n *\n * This method accesses the specified child element and returns its value as a number. If the child element is missing, an error is thrown. If the child element is empty, NaN is returned. If there is more than one child element, an error is thrown to indicate unexpected structure.\n *\n * @param element - The XML element containing the child element\n *\n * @param name - The name of the child element\n *\n * @returns The numeric value of the child element\n *\n * @throws\n *\n * If the child element does not exist or contains more than one element\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getInnerElementNumber(element: "
                },
                {
                  "kind": "Content",
                  "text": "object"
                },
                {
                  "kind": "Content",
                  "text": ", name: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "element",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "name",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "getInnerElementNumber"
            },
            {
              "kind": "Method",
              "canonicalReference": "@xpack/doxygen2docusaurus!DoxygenXmlParser#getInnerElements:member(1)",
              "docComment": "/**\n * Retrieves an array of named child elements from the given XML element.\n *\n * @remarks\n *\n * This method accesses the specified property on the XML element and returns it as an array of child elements. If the property is undefined, an error is thrown indicating the absence of the expected child element.\n *\n * @param element - The XML element containing the child elements\n *\n * @param name - The name of the child elements to retrieve\n *\n * @typeParam T - The expected type of the child elements array (defaults to XmlElement[])\n *\n * @returns The array of child elements\n *\n * @throws\n *\n * If the child elements do not exist\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getInnerElements<T = "
                },
                {
                  "kind": "Reference",
                  "text": "XmlElement",
                  "canonicalReference": "@xpack/doxygen2docusaurus!XmlElement:interface"
                },
                {
                  "kind": "Content",
                  "text": "[]"
                },
                {
                  "kind": "Content",
                  "text": ">(element: "
                },
                {
                  "kind": "Content",
                  "text": "object"
                },
                {
                  "kind": "Content",
                  "text": ", name: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "T"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "typeParameters": [
                {
                  "typeParameterName": "T",
                  "constraintTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  },
                  "defaultTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  }
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 8,
                "endIndex": 9
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "element",
                  "parameterTypeTokenRange": {
                    "startIndex": 4,
                    "endIndex": 5
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "name",
                  "parameterTypeTokenRange": {
                    "startIndex": 6,
                    "endIndex": 7
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "getInnerElements"
            },
            {
              "kind": "Method",
              "canonicalReference": "@xpack/doxygen2docusaurus!DoxygenXmlParser#getInnerElementText:member(1)",
              "docComment": "/**\n * Retrieves the text content of a named child element.\n *\n * @remarks\n *\n * This method accesses the specified child element and returns its text content. If the child element is missing, an error is thrown. If the child element is empty, an empty string is returned. If there is more than one child element, an error is thrown to indicate unexpected structure.\n *\n * @param element - The XML element containing the child element\n *\n * @param name - The name of the child element\n *\n * @returns The text content of the child element\n *\n * @throws\n *\n * If the child element does not exist or contains more than one element\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getInnerElementText(element: "
                },
                {
                  "kind": "Content",
                  "text": "object"
                },
                {
                  "kind": "Content",
                  "text": ", name: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "element",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "name",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "getInnerElementText"
            },
            {
              "kind": "Method",
              "canonicalReference": "@xpack/doxygen2docusaurus!DoxygenXmlParser#getInnerText:member(1)",
              "docComment": "/**\n * Retrieves the text content of the XML element.\n *\n * @remarks\n *\n * This method accesses the '#text' property of the XML element and returns its value as a string. It asserts that the value is of type string, number, or boolean before converting it to a string. If the property is missing or the value is of an unexpected type, an error is thrown.\n *\n * @param element - The XML element to retrieve text from\n *\n * @returns The text content of the element\n *\n * @throws\n *\n * If the element does not contain a valid text node\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getInnerText(element: "
                },
                {
                  "kind": "Content",
                  "text": "object"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "element",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "getInnerText"
            },
            {
              "kind": "Method",
              "canonicalReference": "@xpack/doxygen2docusaurus!DoxygenXmlParser#hasAttribute:member(1)",
              "docComment": "/**\n * Determines whether the specified attribute exists on the given XML element.\n *\n * @remarks\n *\n * This method checks for the presence of an attribute within the ':\\@' property of the XML element, which is the convention used by the XML parser for storing attributes. It returns true if the attribute is found, otherwise false.\n *\n * @param element - The XML element to inspect\n *\n * @param name - The name of the attribute to check for\n *\n * @returns True if the attribute exists; otherwise, false\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "hasAttribute(element: "
                },
                {
                  "kind": "Content",
                  "text": "object"
                },
                {
                  "kind": "Content",
                  "text": ", name: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "element",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "name",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "hasAttribute"
            },
            {
              "kind": "Method",
              "canonicalReference": "@xpack/doxygen2docusaurus!DoxygenXmlParser#hasAttributes:member(1)",
              "docComment": "/**\n * Determines whether the specified XML element has any attributes.\n *\n * @remarks\n *\n * This method checks for the presence of the ':\\@' property on the XML element, which is the convention used by the XML parser for storing attributes. If this property exists, the element has attributes; if not, the element has no attributes. This is a prerequisite check before calling {@link DoxygenXmlParser.getAttributesNames} or other attribute-related methods.\n *\n * @param element - The XML element to inspect for attributes\n *\n * @returns True if the element has attributes; otherwise, false\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "hasAttributes(element: "
                },
                {
                  "kind": "Content",
                  "text": "object"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "element",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "hasAttributes"
            },
            {
              "kind": "Method",
              "canonicalReference": "@xpack/doxygen2docusaurus!DoxygenXmlParser#hasInnerElement:member(1)",
              "docComment": "/**\n * Determines whether the specified inner element exists on the given XML element.\n *\n * @remarks\n *\n * This method checks for the presence of a named property on the XML element. For text nodes ('#text'), it verifies the value is a string, number, or boolean. For other elements, it confirms the property is an array, as per the XML parser's convention.\n *\n * @param element - The XML element to inspect\n *\n * @param name - The name of the inner element to check for\n *\n * @returns True if the inner element exists; otherwise, false\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "hasInnerElement(element: "
                },
                {
                  "kind": "Content",
                  "text": "object"
                },
                {
                  "kind": "Content",
                  "text": ", name: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "element",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "name",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "hasInnerElement"
            },
            {
              "kind": "Method",
              "canonicalReference": "@xpack/doxygen2docusaurus!DoxygenXmlParser#hasInnerText:member(1)",
              "docComment": "/**\n * Determines whether the XML element contains a text node.\n *\n * @remarks\n *\n * This method checks for the presence of a '#text' property on the XML element, and verifies that its value is a string, number, or boolean.\n *\n * @param element - The XML element to inspect\n *\n * @returns True if the element contains a text node; otherwise, false\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "hasInnerText(element: "
                },
                {
                  "kind": "Content",
                  "text": "object"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "element",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "hasInnerText"
            },
            {
              "kind": "Property",
              "canonicalReference": "@xpack/doxygen2docusaurus!DoxygenXmlParser#images:member",
              "docComment": "/**\n * Collection of image references extracted during XML parsing.\n *\n * @remarks\n *\n * Accumulates image elements found in the documentation content, allowing for centralised image processing and reference management.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "images: "
                },
                {
                  "kind": "Reference",
                  "text": "AbstractDocImageType",
                  "canonicalReference": "@xpack/doxygen2docusaurus!AbstractDocImageType:class"
                },
                {
                  "kind": "Content",
                  "text": "[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "images",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Method",
              "canonicalReference": "@xpack/doxygen2docusaurus!DoxygenXmlParser#isInnerElementText:member(1)",
              "docComment": "/**\n * Determines whether a named inner element contains text.\n *\n * @remarks\n *\n * This method checks if the specified inner element exists and contains a single text node, or is an empty array (representing an empty string). It asserts the expected structure and type of the value for robustness.\n *\n * @param element - The XML element to inspect\n *\n * @param name - The name of the inner element\n *\n * @returns True if the inner element contains text or is empty; otherwise, false\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "isInnerElementText(element: "
                },
                {
                  "kind": "Content",
                  "text": "object"
                },
                {
                  "kind": "Content",
                  "text": ", name: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "element",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "name",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "isInnerElementText"
            },
            {
              "kind": "Property",
              "canonicalReference": "@xpack/doxygen2docusaurus!DoxygenXmlParser#options:member",
              "docComment": "/**\n * The global configuration options for the parsing operation.\n *\n * @remarks\n *\n * Contains the command-line interface options that control the behaviour of the parser throughout the XML processing workflow.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "options: "
                },
                {
                  "kind": "Reference",
                  "text": "CliOptions",
                  "canonicalReference": "@xpack/doxygen2docusaurus!CliOptions:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "options",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@xpack/doxygen2docusaurus!DoxygenXmlParser#xmlParser:member",
              "docComment": "/**\n * The XML parser instance configured specifically for Doxygen XML format.\n *\n * @remarks\n *\n * Configured with settings that preserve element order, remove namespace prefixes, and maintain fidelity to the original XML structure for accurate data model construction.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "xmlParser: "
                },
                {
                  "kind": "Reference",
                  "text": "XMLParser",
                  "canonicalReference": "fast-xml-parser!XMLParser:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "xmlParser",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            }
          ],
          "implementsTokenRanges": []
        },
        {
          "kind": "Class",
          "canonicalReference": "@xpack/doxygen2docusaurus!EnumValueDataModel:class",
          "docComment": "/**\n * Concrete implementation of enumeration value data model.\n *\n * @remarks\n *\n * Represents a single enumeration value as parsed from Doxygen XML output. Inherits all functionality from the abstract base class and provides the specific element name for parsing.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class EnumValueDataModel extends "
            },
            {
              "kind": "Reference",
              "text": "AbstractEnumValueType",
              "canonicalReference": "@xpack/doxygen2docusaurus!AbstractEnumValueType:class"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "src/doxygen/data-model/compounds/enumvaluetype-dm.ts",
          "releaseTag": "Public",
          "isAbstract": false,
          "name": "EnumValueDataModel",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Constructor",
              "canonicalReference": "@xpack/doxygen2docusaurus!EnumValueDataModel:constructor(1)",
              "docComment": "/**\n * Creates a new enumeration value data model from XML.\n *\n * @remarks\n *\n * Parses the XML element representing an enumeration value using the inherited parsing logic with the 'enumvalue' element name.\n *\n * @param xml - The XML parser instance\n *\n * @param element - The XML element to parse\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor(xml: "
                },
                {
                  "kind": "Reference",
                  "text": "DoxygenXmlParser",
                  "canonicalReference": "@xpack/doxygen2docusaurus!DoxygenXmlParser:class"
                },
                {
                  "kind": "Content",
                  "text": ", element: "
                },
                {
                  "kind": "Content",
                  "text": "object"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "xml",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "element",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                }
              ]
            }
          ],
          "extendsTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "Class",
          "canonicalReference": "@xpack/doxygen2docusaurus!HighlightDataModel:class",
          "docComment": "/**\n * Data model for syntax highlight elements within code listings.\n *\n * @remarks\n *\n * Represents individual syntax highlighting segments that specify how portions of source code should be styled in the generated documentation. This implementation processes Doxygen's highlight elements, which contain the highlight class information and associated text content for proper syntax colouring.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class HighlightDataModel extends "
            },
            {
              "kind": "Reference",
              "text": "AbstractHighlightType",
              "canonicalReference": "@xpack/doxygen2docusaurus!AbstractHighlightType:class"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "src/doxygen/data-model/compounds/descriptiontype-dm.ts",
          "releaseTag": "Public",
          "isAbstract": false,
          "name": "HighlightDataModel",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Constructor",
              "canonicalReference": "@xpack/doxygen2docusaurus!HighlightDataModel:constructor(1)",
              "docComment": "/**\n * Constructs a HighlightDataModel from XML element data.\n *\n * @remarks\n *\n * This constructor delegates to the parent AbstractHighlightType to handle the standard highlight processing whilst specifically identifying the element as a 'highlight' type for proper XML schema compliance.\n *\n * @param xml - The Doxygen XML parser instance for processing XML content\n *\n * @param element - The XML element object containing the highlight data\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor(xml: "
                },
                {
                  "kind": "Reference",
                  "text": "DoxygenXmlParser",
                  "canonicalReference": "@xpack/doxygen2docusaurus!DoxygenXmlParser:class"
                },
                {
                  "kind": "Content",
                  "text": ", element: "
                },
                {
                  "kind": "Content",
                  "text": "object"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "xml",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "element",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                }
              ]
            }
          ],
          "extendsTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "Class",
          "canonicalReference": "@xpack/doxygen2docusaurus!InbodyDescriptionDataModel:class",
          "docComment": "/**\n * Data model for in-body description elements within documentation.\n *\n * @remarks\n *\n * Represents in-body description elements that provide documentation content embedded within source code bodies. This implementation processes Doxygen's inbodydescription elements for documentation that appears inline within code implementations.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class InbodyDescriptionDataModel extends "
            },
            {
              "kind": "Reference",
              "text": "AbstractDescriptionType",
              "canonicalReference": "@xpack/doxygen2docusaurus!AbstractDescriptionType:class"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "src/doxygen/data-model/compounds/descriptiontype-dm.ts",
          "releaseTag": "Public",
          "isAbstract": false,
          "name": "InbodyDescriptionDataModel",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Constructor",
              "canonicalReference": "@xpack/doxygen2docusaurus!InbodyDescriptionDataModel:constructor(1)",
              "docComment": "/**\n * Constructs an InbodyDescriptionDataModel from XML element data.\n *\n * @remarks\n *\n * This constructor delegates to the parent AbstractDescriptionType whilst identifying the element as 'inbodydescription' for inline documentation content processing within code implementations.\n *\n * @param xml - The Doxygen XML parser instance for processing XML content\n *\n * @param element - The XML element object containing the in-body description data\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor(xml: "
                },
                {
                  "kind": "Reference",
                  "text": "DoxygenXmlParser",
                  "canonicalReference": "@xpack/doxygen2docusaurus!DoxygenXmlParser:class"
                },
                {
                  "kind": "Content",
                  "text": ", element: "
                },
                {
                  "kind": "Content",
                  "text": "object"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "xml",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "element",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                }
              ]
            }
          ],
          "extendsTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "Class",
          "canonicalReference": "@xpack/doxygen2docusaurus!IncludedByDataModel:class",
          "docComment": "/**\n * Data model for includedby elements within documentation content.\n *\n * @remarks\n *\n * Represents includedby elements that document files which include the current source file. This implementation processes Doxygen's includedby elements, which contain information about files that incorporate the current file through preprocessor directives, establishing reverse inclusion relationships within the documentation system.\n *\n * The includedby relationship indicates a dependency where other files incorporate content from the current file during compilation.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class IncludedByDataModel extends "
            },
            {
              "kind": "Reference",
              "text": "AbstractIncType",
              "canonicalReference": "@xpack/doxygen2docusaurus!AbstractIncType:class"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "src/doxygen/data-model/compounds/inctype-dm.ts",
          "releaseTag": "Public",
          "isAbstract": false,
          "name": "IncludedByDataModel",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Constructor",
              "canonicalReference": "@xpack/doxygen2docusaurus!IncludedByDataModel:constructor(1)",
              "docComment": "/**\n * Constructs an IncludedByDataModel from XML element data.\n *\n * @remarks\n *\n * This constructor delegates to the parent AbstractIncType to handle include processing whilst identifying the element as 'includedby' for proper XML schema compliance and reverse include relationship handling. The processed data represents files that include the current source file through preprocessor directives, establishing dependency relationships.\n *\n * @param xml - The Doxygen XML parser instance for processing XML content\n *\n * @param element - The XML element object containing the includedby data\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor(xml: "
                },
                {
                  "kind": "Reference",
                  "text": "DoxygenXmlParser",
                  "canonicalReference": "@xpack/doxygen2docusaurus!DoxygenXmlParser:class"
                },
                {
                  "kind": "Content",
                  "text": ", element: "
                },
                {
                  "kind": "Content",
                  "text": "object"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "xml",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "element",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                }
              ]
            }
          ],
          "extendsTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "Class",
          "canonicalReference": "@xpack/doxygen2docusaurus!IncludesDataModel:class",
          "docComment": "/**\n * Data model for includes elements within documentation content.\n *\n * @remarks\n *\n * Represents includes elements that document files included by the current source file. This implementation processes Doxygen's includes elements, which contain information about files that are included through preprocessor directives such as #include statements within the documented source code.\n *\n * The includes relationship indicates a dependency where the current file incorporates content from the referenced file during compilation.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class IncludesDataModel extends "
            },
            {
              "kind": "Reference",
              "text": "AbstractIncType",
              "canonicalReference": "@xpack/doxygen2docusaurus!AbstractIncType:class"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "src/doxygen/data-model/compounds/inctype-dm.ts",
          "releaseTag": "Public",
          "isAbstract": false,
          "name": "IncludesDataModel",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Constructor",
              "canonicalReference": "@xpack/doxygen2docusaurus!IncludesDataModel:constructor(1)",
              "docComment": "/**\n * Constructs an IncludesDataModel from XML element data.\n *\n * @remarks\n *\n * This constructor delegates to the parent AbstractIncType to handle include processing whilst identifying the element as 'includes' for proper XML schema compliance and include relationship documentation. The processed data represents files that are included by the current source file through preprocessor directives.\n *\n * @param xml - The Doxygen XML parser instance for processing XML content\n *\n * @param element - The XML element object containing the includes data\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor(xml: "
                },
                {
                  "kind": "Reference",
                  "text": "DoxygenXmlParser",
                  "canonicalReference": "@xpack/doxygen2docusaurus!DoxygenXmlParser:class"
                },
                {
                  "kind": "Content",
                  "text": ", element: "
                },
                {
                  "kind": "Content",
                  "text": "object"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "xml",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "element",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                }
              ]
            }
          ],
          "extendsTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "Class",
          "canonicalReference": "@xpack/doxygen2docusaurus!IndexCompoundDataModel:class",
          "docComment": "/**\n * Concrete data model class for index compound elements.\n *\n * @remarks\n *\n * Represents individual compound elements found within Doxygen index XML structures. This class extends the abstract base to provide specific handling for 'compound' elements, which reference documented entities such as classes, namespaces, files, and other structural components within the indexed documentation. Each compound serves as an entry point for accessing detailed documentation in separate XML files.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class IndexCompoundDataModel extends "
            },
            {
              "kind": "Reference",
              "text": "AbstractIndexCompoundType",
              "canonicalReference": "@xpack/doxygen2docusaurus!AbstractIndexCompoundType:class"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "src/doxygen/data-model/index/indexcompoundtype-dm.ts",
          "releaseTag": "Public",
          "isAbstract": false,
          "name": "IndexCompoundDataModel",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Constructor",
              "canonicalReference": "@xpack/doxygen2docusaurus!IndexCompoundDataModel:constructor(1)",
              "docComment": "/**\n * Constructs a new IndexCompoundDataModel instance from XML data.\n *\n * @remarks\n *\n * Initialises the compound data model by parsing the provided XML element as a 'compound' element type. The constructor delegates to the parent class for common compound processing whilst specifying the element name for proper XML structure handling.\n *\n * @param xml - The Doxygen XML parser instance for processing XML elements\n *\n * @param element - The XML element containing the compound data\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor(xml: "
                },
                {
                  "kind": "Reference",
                  "text": "DoxygenXmlParser",
                  "canonicalReference": "@xpack/doxygen2docusaurus!DoxygenXmlParser:class"
                },
                {
                  "kind": "Content",
                  "text": ", element: "
                },
                {
                  "kind": "Content",
                  "text": "object"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "xml",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "element",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                }
              ]
            }
          ],
          "extendsTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "Class",
          "canonicalReference": "@xpack/doxygen2docusaurus!IndexMemberDataModel:class",
          "docComment": "/**\n * Concrete data model class for index member elements.\n *\n * @remarks\n *\n * Represents individual member elements found within Doxygen index XML structures. This class extends the abstract base to provide specific handling for 'member' elements, which reference documented members such as functions, variables, and other programming constructs within the indexed documentation.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class IndexMemberDataModel extends "
            },
            {
              "kind": "Reference",
              "text": "AbstractIndexMemberType",
              "canonicalReference": "@xpack/doxygen2docusaurus!AbstractIndexMemberType:class"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "src/doxygen/data-model/index/indexmembertype-dm.ts",
          "releaseTag": "Public",
          "isAbstract": false,
          "name": "IndexMemberDataModel",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Constructor",
              "canonicalReference": "@xpack/doxygen2docusaurus!IndexMemberDataModel:constructor(1)",
              "docComment": "/**\n * Constructs a new IndexMemberDataModel instance from XML data.\n *\n * @remarks\n *\n * Initialises the member data model by parsing the provided XML element as a 'member' element type. The constructor delegates to the parent class for common member processing whilst specifying the element name.\n *\n * @param xml - The Doxygen XML parser instance for processing XML elements\n *\n * @param element - The XML element containing the member data\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor(xml: "
                },
                {
                  "kind": "Reference",
                  "text": "DoxygenXmlParser",
                  "canonicalReference": "@xpack/doxygen2docusaurus!DoxygenXmlParser:class"
                },
                {
                  "kind": "Content",
                  "text": ", element: "
                },
                {
                  "kind": "Content",
                  "text": "object"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "xml",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "element",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                }
              ]
            }
          ],
          "extendsTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "Class",
          "canonicalReference": "@xpack/doxygen2docusaurus!InitializerDataModel:class",
          "docComment": "/**\n * Data model for initializer elements within documentation content.\n *\n * @remarks\n *\n * Represents initializer elements that contain variable or member initialization expressions within source code documentation. This implementation processes Doxygen's initializer elements, which contain mixed text and reference content describing the initial values assigned to variables, constants, or class members.\n *\n * The linked text structure enables cross-references to types and symbols used within initialization expressions.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class InitializerDataModel extends "
            },
            {
              "kind": "Reference",
              "text": "AbstractLinkedTextType",
              "canonicalReference": "@xpack/doxygen2docusaurus!AbstractLinkedTextType:class"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "src/doxygen/data-model/compounds/linkedtexttype-dm.ts",
          "releaseTag": "Public",
          "isAbstract": false,
          "name": "InitializerDataModel",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Constructor",
              "canonicalReference": "@xpack/doxygen2docusaurus!InitializerDataModel:constructor(1)",
              "docComment": "/**\n * Constructs an InitializerDataModel from XML element data.\n *\n * @remarks\n *\n * This constructor delegates to the parent AbstractLinkedTextType to handle linked text processing whilst identifying the element as 'initializer' for proper XML schema compliance and initialization expression content processing.\n *\n * @param xml - The Doxygen XML parser instance for processing XML content\n *\n * @param element - The XML element object containing the initializer data\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor(xml: "
                },
                {
                  "kind": "Reference",
                  "text": "DoxygenXmlParser",
                  "canonicalReference": "@xpack/doxygen2docusaurus!DoxygenXmlParser:class"
                },
                {
                  "kind": "Content",
                  "text": ", element: "
                },
                {
                  "kind": "Content",
                  "text": "object"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "xml",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "element",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                }
              ]
            }
          ],
          "extendsTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "Class",
          "canonicalReference": "@xpack/doxygen2docusaurus!InnerClassDataModel:class",
          "docComment": "/**\n * Data model for inner class reference elements.\n *\n * @remarks\n *\n * Represents a reference to an inner class within Doxygen XML documentation, corresponding to the innerclass XML element. This class manages references to classes that are contained within the current documentation context, providing linking and navigation capabilities to detailed class documentation. Inner classes typically represent nested classes, inner types, or classes defined within other classes or namespaces.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class InnerClassDataModel extends "
            },
            {
              "kind": "Reference",
              "text": "AbstractRefType",
              "canonicalReference": "@xpack/doxygen2docusaurus!AbstractRefType:class"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "src/doxygen/data-model/compounds/reftype-dm.ts",
          "releaseTag": "Public",
          "isAbstract": false,
          "name": "InnerClassDataModel",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Constructor",
              "canonicalReference": "@xpack/doxygen2docusaurus!InnerClassDataModel:constructor(1)",
              "docComment": "/**\n * Constructs a new inner class reference data model from XML.\n *\n * @remarks\n *\n * Creates a complete inner class reference data model by parsing the provided XML element. This constructor delegates to the parent class to handle all standard parsing operations for the innerclass element type, establishing the reference to the contained class entity.\n *\n * @param xml - The Doxygen XML parser instance\n *\n * @param element - The XML element containing inner class reference data\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor(xml: "
                },
                {
                  "kind": "Reference",
                  "text": "DoxygenXmlParser",
                  "canonicalReference": "@xpack/doxygen2docusaurus!DoxygenXmlParser:class"
                },
                {
                  "kind": "Content",
                  "text": ", element: "
                },
                {
                  "kind": "Content",
                  "text": "object"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "xml",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "element",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                }
              ]
            }
          ],
          "extendsTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "Class",
          "canonicalReference": "@xpack/doxygen2docusaurus!InnerDirDataModel:class",
          "docComment": "/**\n * Data model for inner folder reference elements.\n *\n * @remarks\n *\n * Represents a reference to an inner folder within Doxygen XML documentation, corresponding to the innerdir XML element. This class manages references to folders that are contained within the current documentation context, providing linking and navigation capabilities to detailed folder documentation. Inner folders typically represent subdirectories within the project structure that contain related source files and documentation.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class InnerDirDataModel extends "
            },
            {
              "kind": "Reference",
              "text": "AbstractRefType",
              "canonicalReference": "@xpack/doxygen2docusaurus!AbstractRefType:class"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "src/doxygen/data-model/compounds/reftype-dm.ts",
          "releaseTag": "Public",
          "isAbstract": false,
          "name": "InnerDirDataModel",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Constructor",
              "canonicalReference": "@xpack/doxygen2docusaurus!InnerDirDataModel:constructor(1)",
              "docComment": "/**\n * Constructs a new inner folder reference data model from XML.\n *\n * @remarks\n *\n * Creates a complete inner folder reference data model by parsing the provided XML element. This constructor delegates to the parent class to handle all standard parsing operations for the innerdir element type, establishing the reference to the contained folder entity.\n *\n * @param xml - The Doxygen XML parser instance\n *\n * @param element - The XML element containing inner folder reference data\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor(xml: "
                },
                {
                  "kind": "Reference",
                  "text": "DoxygenXmlParser",
                  "canonicalReference": "@xpack/doxygen2docusaurus!DoxygenXmlParser:class"
                },
                {
                  "kind": "Content",
                  "text": ", element: "
                },
                {
                  "kind": "Content",
                  "text": "object"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "xml",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "element",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                }
              ]
            }
          ],
          "extendsTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "Class",
          "canonicalReference": "@xpack/doxygen2docusaurus!InnerFileDataModel:class",
          "docComment": "/**\n * Data model for inner file reference elements.\n *\n * @remarks\n *\n * Represents a reference to an inner file within Doxygen XML documentation, corresponding to the innerfile XML element. This class manages references to files that are contained within the current documentation context, providing linking and navigation capabilities to detailed file documentation. Inner files typically represent source code files, headers, or other documented files within the project structure.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class InnerFileDataModel extends "
            },
            {
              "kind": "Reference",
              "text": "AbstractRefType",
              "canonicalReference": "@xpack/doxygen2docusaurus!AbstractRefType:class"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "src/doxygen/data-model/compounds/reftype-dm.ts",
          "releaseTag": "Public",
          "isAbstract": false,
          "name": "InnerFileDataModel",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Constructor",
              "canonicalReference": "@xpack/doxygen2docusaurus!InnerFileDataModel:constructor(1)",
              "docComment": "/**\n * Constructs a new inner file reference data model from XML.\n *\n * @remarks\n *\n * Creates a complete inner file reference data model by parsing the provided XML element. This constructor delegates to the parent class to handle all standard parsing operations for the innerfile element type, establishing the reference to the contained file entity.\n *\n * @param xml - The Doxygen XML parser instance\n *\n * @param element - The XML element containing inner file reference data\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor(xml: "
                },
                {
                  "kind": "Reference",
                  "text": "DoxygenXmlParser",
                  "canonicalReference": "@xpack/doxygen2docusaurus!DoxygenXmlParser:class"
                },
                {
                  "kind": "Content",
                  "text": ", element: "
                },
                {
                  "kind": "Content",
                  "text": "object"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "xml",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "element",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                }
              ]
            }
          ],
          "extendsTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "Class",
          "canonicalReference": "@xpack/doxygen2docusaurus!InnerGroupDataModel:class",
          "docComment": "/**\n * Data model for inner group reference elements.\n *\n * @remarks\n *\n * Represents a reference to an inner group within Doxygen XML documentation, corresponding to the innergroup XML element. This class manages references to groups that are contained within the current documentation context, providing linking and navigation capabilities to detailed group documentation. Inner groups typically represent logical collections or modules of related functionality that are organised within the current documentation scope.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class InnerGroupDataModel extends "
            },
            {
              "kind": "Reference",
              "text": "AbstractRefType",
              "canonicalReference": "@xpack/doxygen2docusaurus!AbstractRefType:class"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "src/doxygen/data-model/compounds/reftype-dm.ts",
          "releaseTag": "Public",
          "isAbstract": false,
          "name": "InnerGroupDataModel",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Constructor",
              "canonicalReference": "@xpack/doxygen2docusaurus!InnerGroupDataModel:constructor(1)",
              "docComment": "/**\n * Constructs a new inner group reference data model from XML.\n *\n * @remarks\n *\n * Creates a complete inner group reference data model by parsing the provided XML element. This constructor delegates to the parent class to handle all standard parsing operations for the innergroup element type, establishing the reference to the contained group entity.\n *\n * @param xml - The Doxygen XML parser instance\n *\n * @param element - The XML element containing inner group reference data\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor(xml: "
                },
                {
                  "kind": "Reference",
                  "text": "DoxygenXmlParser",
                  "canonicalReference": "@xpack/doxygen2docusaurus!DoxygenXmlParser:class"
                },
                {
                  "kind": "Content",
                  "text": ", element: "
                },
                {
                  "kind": "Content",
                  "text": "object"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "xml",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "element",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                }
              ]
            }
          ],
          "extendsTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "Class",
          "canonicalReference": "@xpack/doxygen2docusaurus!InnerNamespaceDataModel:class",
          "docComment": "/**\n * Data model for inner namespace reference elements.\n *\n * @remarks\n *\n * Represents a reference to an inner namespace within Doxygen XML documentation, corresponding to the innernamespace XML element. This class manages references to namespaces that are contained within the current documentation context, providing linking and navigation capabilities to detailed namespace documentation. Inner namespaces typically represent nested namespaces or namespace aliases defined within other namespaces.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class InnerNamespaceDataModel extends "
            },
            {
              "kind": "Reference",
              "text": "AbstractRefType",
              "canonicalReference": "@xpack/doxygen2docusaurus!AbstractRefType:class"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "src/doxygen/data-model/compounds/reftype-dm.ts",
          "releaseTag": "Public",
          "isAbstract": false,
          "name": "InnerNamespaceDataModel",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Constructor",
              "canonicalReference": "@xpack/doxygen2docusaurus!InnerNamespaceDataModel:constructor(1)",
              "docComment": "/**\n * Constructs a new inner namespace reference data model from XML.\n *\n * @remarks\n *\n * Creates a complete inner namespace reference data model by parsing the provided XML element. This constructor delegates to the parent class to handle all standard parsing operations for the innernamespace element type, establishing the reference to the contained namespace entity.\n *\n * @param xml - The Doxygen XML parser instance\n *\n * @param element - The XML element containing inner namespace reference data\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor(xml: "
                },
                {
                  "kind": "Reference",
                  "text": "DoxygenXmlParser",
                  "canonicalReference": "@xpack/doxygen2docusaurus!DoxygenXmlParser:class"
                },
                {
                  "kind": "Content",
                  "text": ", element: "
                },
                {
                  "kind": "Content",
                  "text": "object"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "xml",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "element",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                }
              ]
            }
          ],
          "extendsTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "Class",
          "canonicalReference": "@xpack/doxygen2docusaurus!InnerPageDataModel:class",
          "docComment": "/**\n * Data model for inner page reference elements.\n *\n * @remarks\n *\n * Represents a reference to an inner page within Doxygen XML documentation, corresponding to the innerpage XML element. This class manages references to pages that are contained within the current documentation context, providing linking and navigation capabilities to detailed page documentation. Inner pages typically represent documentation pages, tutorials, or other narrative content that is logically contained within the current documentation scope.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class InnerPageDataModel extends "
            },
            {
              "kind": "Reference",
              "text": "AbstractRefType",
              "canonicalReference": "@xpack/doxygen2docusaurus!AbstractRefType:class"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "src/doxygen/data-model/compounds/reftype-dm.ts",
          "releaseTag": "Public",
          "isAbstract": false,
          "name": "InnerPageDataModel",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Constructor",
              "canonicalReference": "@xpack/doxygen2docusaurus!InnerPageDataModel:constructor(1)",
              "docComment": "/**\n * Constructs a new inner page reference data model from XML.\n *\n * @remarks\n *\n * Creates a complete inner page reference data model by parsing the provided XML element. This constructor delegates to the parent class to handle all standard parsing operations for the innerpage element type, establishing the reference to the contained page entity.\n *\n * @param xml - The Doxygen XML parser instance\n *\n * @param element - The XML element containing inner page reference data\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor(xml: "
                },
                {
                  "kind": "Reference",
                  "text": "DoxygenXmlParser",
                  "canonicalReference": "@xpack/doxygen2docusaurus!DoxygenXmlParser:class"
                },
                {
                  "kind": "Content",
                  "text": ", element: "
                },
                {
                  "kind": "Content",
                  "text": "object"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "xml",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "element",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                }
              ]
            }
          ],
          "extendsTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "Class",
          "canonicalReference": "@xpack/doxygen2docusaurus!ListOfAllMembersDataModel:class",
          "docComment": "/**\n * Concrete implementation for listofallmembers elements within compound documentation.\n *\n * @remarks\n *\n * Provides specific handling for listofallmembers XML elements that contain comprehensive member inventories within class and compound documentation. This implementation extends the abstract base class functionality to process the complete collection of member references, including both directly declared and inherited members.\n *\n * The class ensures proper instantiation of member reference data models whilst maintaining the hierarchical structure and accessibility information required for comprehensive documentation generation.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class ListOfAllMembersDataModel extends "
            },
            {
              "kind": "Reference",
              "text": "AbstractListOfAllMembersType",
              "canonicalReference": "@xpack/doxygen2docusaurus!AbstractListOfAllMembersType:class"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "src/doxygen/data-model/compounds/listofallmemberstype-dm.ts",
          "releaseTag": "Public",
          "isAbstract": false,
          "name": "ListOfAllMembersDataModel",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Constructor",
              "canonicalReference": "@xpack/doxygen2docusaurus!ListOfAllMembersDataModel:constructor(1)",
              "docComment": "/**\n * Constructs a new listofallmembers data model instance.\n *\n * @remarks\n *\n * Initialises the data model with the specific element name 'listofallmembers' and delegates processing to the abstract base class implementation. This ensures consistent handling of member reference collections whilst maintaining proper element identification.\n *\n * @param xml - The XML parser instance for processing elements\n *\n * @param element - The source XML element containing listofallmembers data\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor(xml: "
                },
                {
                  "kind": "Reference",
                  "text": "DoxygenXmlParser",
                  "canonicalReference": "@xpack/doxygen2docusaurus!DoxygenXmlParser:class"
                },
                {
                  "kind": "Content",
                  "text": ", element: "
                },
                {
                  "kind": "Content",
                  "text": "object"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "xml",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "element",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                }
              ]
            }
          ],
          "extendsTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "Class",
          "canonicalReference": "@xpack/doxygen2docusaurus!LocationDataModel:class",
          "docComment": "/**\n * Concrete implementation for location elements within documentation.\n *\n * @remarks\n *\n * Provides specific handling for location XML elements that contain comprehensive source code positioning information. This implementation extends the abstract base class functionality to process location elements with the specific element name 'location'.\n *\n * The class ensures proper instantiation of location data models whilst maintaining all the detailed positioning information required for accurate source code navigation and reference generation.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class LocationDataModel extends "
            },
            {
              "kind": "Reference",
              "text": "AbstractLocationType",
              "canonicalReference": "@xpack/doxygen2docusaurus!AbstractLocationType:class"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "src/doxygen/data-model/compounds/locationtype-dm.ts",
          "releaseTag": "Public",
          "isAbstract": false,
          "name": "LocationDataModel",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Constructor",
              "canonicalReference": "@xpack/doxygen2docusaurus!LocationDataModel:constructor(1)",
              "docComment": "/**\n * Constructs a new location data model instance.\n *\n * @remarks\n *\n * Initialises the data model with the specific element name 'location' and delegates processing to the abstract base class implementation. This ensures consistent handling of location information whilst maintaining proper element identification.\n *\n * @param xml - The XML parser instance for processing elements\n *\n * @param element - The source XML element containing location data\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor(xml: "
                },
                {
                  "kind": "Reference",
                  "text": "DoxygenXmlParser",
                  "canonicalReference": "@xpack/doxygen2docusaurus!DoxygenXmlParser:class"
                },
                {
                  "kind": "Content",
                  "text": ", element: "
                },
                {
                  "kind": "Content",
                  "text": "object"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "xml",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "element",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                }
              ]
            }
          ],
          "extendsTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "Function",
          "canonicalReference": "@xpack/doxygen2docusaurus!main:function(1)",
          "docComment": "/**\n * Main entry point for the doxygen2docusaurus CLI tool.\n *\n * @remarks\n *\n * Orchestrates the complete conversion process from Doxygen XML to Docusaurus documentation. Handles command-line argument parsing, configuration loading, data model creation, workspace initialisation, and documentation generation. Provides timing information and appropriate exit codes for integration.\n *\n * @param argv - Command line arguments array\n *\n * @returns Promise that resolves to the exit code (0 for success, 1 for error)\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function main(argv: "
            },
            {
              "kind": "Content",
              "text": "string[]"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "Promise",
              "canonicalReference": "!Promise:interface"
            },
            {
              "kind": "Content",
              "text": "<number>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/cli/main.ts",
          "returnTypeTokenRange": {
            "startIndex": 3,
            "endIndex": 5
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "argv",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": false
            }
          ],
          "name": "main"
        },
        {
          "kind": "Class",
          "canonicalReference": "@xpack/doxygen2docusaurus!MemberDataModel:class",
          "docComment": "/**\n * Concrete implementation for member elements within documentation.\n *\n * @remarks\n *\n * Provides specific handling for member XML elements that contain simplified member information within various documentation contexts. This implementation extends the abstract base class functionality to process member elements with the specific element name 'member'.\n *\n * The class represents lightweight member references that serve as cross-reference points to more detailed member definitions, maintaining essential identification data whilst enabling efficient navigation within the documentation system. These elements are commonly used in member lists and summary sections where full member details are not required.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class MemberDataModel extends "
            },
            {
              "kind": "Reference",
              "text": "AbstractMemberType",
              "canonicalReference": "@xpack/doxygen2docusaurus!AbstractMemberType:class"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "src/doxygen/data-model/compounds/membertype-dm.ts",
          "releaseTag": "Public",
          "isAbstract": false,
          "name": "MemberDataModel",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Constructor",
              "canonicalReference": "@xpack/doxygen2docusaurus!MemberDataModel:constructor(1)",
              "docComment": "/**\n * Constructs a new member data model instance.\n *\n * @remarks\n *\n * Initialises the data model with the specific element name 'member' and delegates processing to the abstract base class implementation. This ensures consistent handling of simplified member information whilst maintaining proper element identification for cross-referencing and navigation functionality.\n *\n * @param xml - The XML parser instance for processing elements\n *\n * @param element - The source XML element containing member data\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor(xml: "
                },
                {
                  "kind": "Reference",
                  "text": "DoxygenXmlParser",
                  "canonicalReference": "@xpack/doxygen2docusaurus!DoxygenXmlParser:class"
                },
                {
                  "kind": "Content",
                  "text": ", element: "
                },
                {
                  "kind": "Content",
                  "text": "object"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "xml",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "element",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                }
              ]
            }
          ],
          "extendsTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "Class",
          "canonicalReference": "@xpack/doxygen2docusaurus!MemberDefDataModel:class",
          "docComment": "/**\n * Concrete implementation for memberdef elements within compound documentation.\n *\n * @remarks\n *\n * Provides specific handling for memberdef XML elements that contain comprehensive member definition information within classes, structures, namespaces, and other compound types. This implementation extends the abstract base class functionality to process the complete range of member definitions including functions, variables, typedefs, enums, and specialised language constructs.\n *\n * The class ensures proper instantiation of member definition data models whilst maintaining all the detailed metadata required for accurate documentation generation including cross-references, location information, and language-specific attributes.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class MemberDefDataModel extends "
            },
            {
              "kind": "Reference",
              "text": "AbstractMemberDefType",
              "canonicalReference": "@xpack/doxygen2docusaurus!AbstractMemberDefType:class"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "src/doxygen/data-model/compounds/memberdeftype-dm.ts",
          "releaseTag": "Public",
          "isAbstract": false,
          "name": "MemberDefDataModel",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Constructor",
              "canonicalReference": "@xpack/doxygen2docusaurus!MemberDefDataModel:constructor(1)",
              "docComment": "/**\n * Constructs a new memberdef data model instance.\n *\n * @remarks\n *\n * Initialises the data model with the specific element name 'memberdef' and delegates processing to the abstract base class implementation. This ensures consistent handling of member definition information whilst maintaining proper element identification.\n *\n * @param xml - The XML parser instance for processing elements\n *\n * @param element - The source XML element containing memberdef data\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor(xml: "
                },
                {
                  "kind": "Reference",
                  "text": "DoxygenXmlParser",
                  "canonicalReference": "@xpack/doxygen2docusaurus!DoxygenXmlParser:class"
                },
                {
                  "kind": "Content",
                  "text": ", element: "
                },
                {
                  "kind": "Content",
                  "text": "object"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "xml",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "element",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                }
              ]
            }
          ],
          "extendsTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "Class",
          "canonicalReference": "@xpack/doxygen2docusaurus!MemberRefDataModel:class",
          "docComment": "/**\n * Concrete implementation for member reference elements within documentation.\n *\n * @remarks\n *\n * Provides specific handling for member XML elements that contain comprehensive member reference information within class and compound documentation. This implementation extends the abstract base class functionality to process member references with the specific element name 'member'.\n *\n * The class ensures proper instantiation of member reference data models whilst maintaining all the cross-referencing metadata required for accurate documentation linking and navigation between related members within the documentation system.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class MemberRefDataModel extends "
            },
            {
              "kind": "Reference",
              "text": "AbstractMemberRefType",
              "canonicalReference": "@xpack/doxygen2docusaurus!AbstractMemberRefType:class"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "src/doxygen/data-model/compounds/memberreftype-dm.ts",
          "releaseTag": "Public",
          "isAbstract": false,
          "name": "MemberRefDataModel",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Constructor",
              "canonicalReference": "@xpack/doxygen2docusaurus!MemberRefDataModel:constructor(1)",
              "docComment": "/**\n * Constructs a new member reference data model instance.\n *\n * @remarks\n *\n * Initialises the data model with the specific element name 'member' and delegates processing to the abstract base class implementation. This ensures consistent handling of member reference information whilst maintaining proper element identification for cross-referencing functionality.\n *\n * @param xml - The XML parser instance for processing elements\n *\n * @param element - The source XML element containing member reference data\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor(xml: "
                },
                {
                  "kind": "Reference",
                  "text": "DoxygenXmlParser",
                  "canonicalReference": "@xpack/doxygen2docusaurus!DoxygenXmlParser:class"
                },
                {
                  "kind": "Content",
                  "text": ", element: "
                },
                {
                  "kind": "Content",
                  "text": "object"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "xml",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "element",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                }
              ]
            }
          ],
          "extendsTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@xpack/doxygen2docusaurus!~MultiConfigurations:type",
          "docComment": "/**\n * Multiple configuration sets for different build scenarios.\n *\n * @remarks\n *\n * Allows defining different configuration profiles that can be selected based on the build context or command line parameters.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type MultiConfigurations = "
            },
            {
              "kind": "Reference",
              "text": "Record",
              "canonicalReference": "!Record:type"
            },
            {
              "kind": "Content",
              "text": "<string, "
            },
            {
              "kind": "Reference",
              "text": "CliConfigurationOptions",
              "canonicalReference": "@xpack/doxygen2docusaurus!~CliConfigurationOptions:type"
            },
            {
              "kind": "Content",
              "text": ">"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/docusaurus/cli-options.ts",
          "releaseTag": "Public",
          "name": "MultiConfigurations",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 5
          }
        },
        {
          "kind": "Class",
          "canonicalReference": "@xpack/doxygen2docusaurus!ParamDataModel:class",
          "docComment": "/**\n * Concrete implementation for parameter elements within function documentation.\n *\n * @remarks\n *\n * Provides specific handling for param XML elements that contain comprehensive parameter information within function and method documentation. This implementation extends the abstract base class functionality to process parameter elements with the specific element name 'param'.\n *\n * The class ensures proper instantiation of parameter data models whilst maintaining all the detailed parameter metadata required for accurate function signature documentation including type information, naming variations, default values, constraints, and descriptive information.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class ParamDataModel extends "
            },
            {
              "kind": "Reference",
              "text": "AbstractParamType",
              "canonicalReference": "@xpack/doxygen2docusaurus!AbstractParamType:class"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "src/doxygen/data-model/compounds/paramtype-dm.ts",
          "releaseTag": "Public",
          "isAbstract": false,
          "name": "ParamDataModel",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Constructor",
              "canonicalReference": "@xpack/doxygen2docusaurus!ParamDataModel:constructor(1)",
              "docComment": "/**\n * Constructs a new parameter data model instance.\n *\n * @remarks\n *\n * Initialises the data model with the specific element name 'param' and delegates processing to the abstract base class implementation. This ensures consistent handling of parameter information whilst maintaining proper element identification for function signature documentation and API reference generation.\n *\n * @param xml - The XML parser instance for processing elements\n *\n * @param element - The source XML element containing parameter data\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor(xml: "
                },
                {
                  "kind": "Reference",
                  "text": "DoxygenXmlParser",
                  "canonicalReference": "@xpack/doxygen2docusaurus!DoxygenXmlParser:class"
                },
                {
                  "kind": "Content",
                  "text": ", element: "
                },
                {
                  "kind": "Content",
                  "text": "object"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "xml",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "element",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                }
              ]
            }
          ],
          "extendsTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "Class",
          "canonicalReference": "@xpack/doxygen2docusaurus!ProgramListingDataModel:class",
          "docComment": "/**\n * Data model for programlisting XML elements containing source code.\n *\n * @remarks\n *\n * Represents program listings that contain source code with optional syntax highlighting and line numbering. This implementation processes Doxygen's programlisting elements, which are commonly used to display code examples, function implementations, and other programming content within documentation.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class ProgramListingDataModel extends "
            },
            {
              "kind": "Reference",
              "text": "AbstractListingType",
              "canonicalReference": "@xpack/doxygen2docusaurus!AbstractListingType:class"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "src/doxygen/data-model/compounds/descriptiontype-dm.ts",
          "releaseTag": "Public",
          "isAbstract": false,
          "name": "ProgramListingDataModel",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Constructor",
              "canonicalReference": "@xpack/doxygen2docusaurus!ProgramListingDataModel:constructor(1)",
              "docComment": "/**\n * Constructs a ProgramListingDataModel from XML element data.\n *\n * @remarks\n *\n * This constructor delegates to the parent AbstractListingType to handle the standard listing processing whilst specifically identifying the element as a 'programlisting' type for proper XML schema compliance.\n *\n * @param xml - The Doxygen XML parser instance for processing XML content\n *\n * @param element - The XML element object containing the programlisting data\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor(xml: "
                },
                {
                  "kind": "Reference",
                  "text": "DoxygenXmlParser",
                  "canonicalReference": "@xpack/doxygen2docusaurus!DoxygenXmlParser:class"
                },
                {
                  "kind": "Content",
                  "text": ", element: "
                },
                {
                  "kind": "Content",
                  "text": "object"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "xml",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "element",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                }
              ]
            }
          ],
          "extendsTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "Class",
          "canonicalReference": "@xpack/doxygen2docusaurus!ReferenceDataModel:class",
          "docComment": "/**\n * Data model for reference relationship elements.\n *\n * @remarks\n *\n * Represents a forward reference relationship within Doxygen XML documentation, corresponding to the references XML element. This class manages relationships where the current entity references or depends upon another documented entity. The relationship captures both the descriptive information and precise location data, enabling comprehensive dependency tracking and navigation capabilities. Forward references help document how entities use or depend on other components within the codebase.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class ReferenceDataModel extends "
            },
            {
              "kind": "Reference",
              "text": "AbstractReferenceType",
              "canonicalReference": "@xpack/doxygen2docusaurus!AbstractReferenceType:class"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "src/doxygen/data-model/compounds/referencetype-dm.ts",
          "releaseTag": "Public",
          "isAbstract": false,
          "name": "ReferenceDataModel",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Constructor",
              "canonicalReference": "@xpack/doxygen2docusaurus!ReferenceDataModel:constructor(1)",
              "docComment": "/**\n * Constructs a new reference relationship data model from XML.\n *\n * @remarks\n *\n * Creates a complete forward reference relationship data model by parsing the provided XML element. This constructor delegates to the parent class to handle all standard parsing operations for the references element type, establishing the forward dependency relationship between the current entity and the referenced component.\n *\n * @param xml - The Doxygen XML parser instance\n *\n * @param element - The XML element containing reference relationship data\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor(xml: "
                },
                {
                  "kind": "Reference",
                  "text": "DoxygenXmlParser",
                  "canonicalReference": "@xpack/doxygen2docusaurus!DoxygenXmlParser:class"
                },
                {
                  "kind": "Content",
                  "text": ", element: "
                },
                {
                  "kind": "Content",
                  "text": "object"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "xml",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "element",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                }
              ]
            }
          ],
          "extendsTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "Class",
          "canonicalReference": "@xpack/doxygen2docusaurus!ReferencedByDataModel:class",
          "docComment": "/**\n * Data model for referenced-by relationship elements.\n *\n * @remarks\n *\n * Represents a reverse reference relationship within Doxygen XML documentation, corresponding to the referencedby XML element. This class manages relationships where the current entity is referenced or used by another documented entity. The relationship provides bidirectional dependency information, enabling comprehensive understanding of how entities are utilised throughout the codebase. Referenced-by relationships are essential for impact analysis and understanding the scope of changes when modifying documented components.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class ReferencedByDataModel extends "
            },
            {
              "kind": "Reference",
              "text": "AbstractReferenceType",
              "canonicalReference": "@xpack/doxygen2docusaurus!AbstractReferenceType:class"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "src/doxygen/data-model/compounds/referencetype-dm.ts",
          "releaseTag": "Public",
          "isAbstract": false,
          "name": "ReferencedByDataModel",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Constructor",
              "canonicalReference": "@xpack/doxygen2docusaurus!ReferencedByDataModel:constructor(1)",
              "docComment": "/**\n * Constructs a new referenced-by relationship data model from XML.\n *\n * @remarks\n *\n * Creates a complete reverse reference relationship data model by parsing the provided XML element. This constructor delegates to the parent class to handle all standard parsing operations for the referencedby element type, establishing the reverse dependency relationship indicating how other entities utilise the current component.\n *\n * @param xml - The Doxygen XML parser instance\n *\n * @param element - The XML element containing referenced-by relationship data\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor(xml: "
                },
                {
                  "kind": "Reference",
                  "text": "DoxygenXmlParser",
                  "canonicalReference": "@xpack/doxygen2docusaurus!DoxygenXmlParser:class"
                },
                {
                  "kind": "Content",
                  "text": ", element: "
                },
                {
                  "kind": "Content",
                  "text": "object"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "xml",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "element",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                }
              ]
            }
          ],
          "extendsTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "Class",
          "canonicalReference": "@xpack/doxygen2docusaurus!ReimplementDataModel:class",
          "docComment": "/**\n * Data model for reimplement relationship elements.\n *\n * @remarks\n *\n * Represents a specific reimplement relationship within Doxygen XML documentation, corresponding to the reimplements XML element. This class manages relationships where the current entity reimplements or overrides behaviour from a base class or interface. The relationship captures both the descriptive information and the reference to the original implementation, enabling comprehensive documentation of polymorphic behaviours and inheritance patterns within object-oriented codebases.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class ReimplementDataModel extends "
            },
            {
              "kind": "Reference",
              "text": "AbstractReimplementType",
              "canonicalReference": "@xpack/doxygen2docusaurus!AbstractReimplementType:class"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "src/doxygen/data-model/compounds/reimplementtype-dm.ts",
          "releaseTag": "Public",
          "isAbstract": false,
          "name": "ReimplementDataModel",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Constructor",
              "canonicalReference": "@xpack/doxygen2docusaurus!ReimplementDataModel:constructor(1)",
              "docComment": "/**\n * Constructs a new reimplement relationship data model from XML.\n *\n * @remarks\n *\n * Creates a complete reimplement relationship data model by parsing the provided XML element. This constructor delegates to the parent class to handle all standard parsing operations for the reimplements element type, establishing the relationship between the current entity and the reimplemented base implementation.\n *\n * @param xml - The Doxygen XML parser instance\n *\n * @param element - The XML element containing reimplement relationship data\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor(xml: "
                },
                {
                  "kind": "Reference",
                  "text": "DoxygenXmlParser",
                  "canonicalReference": "@xpack/doxygen2docusaurus!DoxygenXmlParser:class"
                },
                {
                  "kind": "Content",
                  "text": ", element: "
                },
                {
                  "kind": "Content",
                  "text": "object"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "xml",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "element",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                }
              ]
            }
          ],
          "extendsTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "Class",
          "canonicalReference": "@xpack/doxygen2docusaurus!SectionDefDataModel:class",
          "docComment": "/**\n * Concrete data model for section definition elements.\n *\n * @remarks\n *\n * Represents a specific section definition within Doxygen XML documentation, corresponding to the sectiondef XML element. This class provides the complete implementation for parsing and managing section definition data, including all supported attributes, elements, and member collections. Each instance represents a single section within a compound or group structure.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class SectionDefDataModel extends "
            },
            {
              "kind": "Reference",
              "text": "AbstractSectionDefType",
              "canonicalReference": "@xpack/doxygen2docusaurus!AbstractSectionDefType:class"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "src/doxygen/data-model/compounds/sectiondeftype-dm.ts",
          "releaseTag": "Public",
          "isAbstract": false,
          "name": "SectionDefDataModel",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Constructor",
              "canonicalReference": "@xpack/doxygen2docusaurus!SectionDefDataModel:constructor(1)",
              "docComment": "/**\n * Constructs a new section definition data model from XML.\n *\n * @remarks\n *\n * Creates a complete section definition data model by parsing the provided XML element. This constructor delegates to the parent class to handle all standard parsing operations for the sectiondef element type.\n *\n * @param xml - The Doxygen XML parser instance\n *\n * @param element - The XML element containing section definition data\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor(xml: "
                },
                {
                  "kind": "Reference",
                  "text": "DoxygenXmlParser",
                  "canonicalReference": "@xpack/doxygen2docusaurus!DoxygenXmlParser:class"
                },
                {
                  "kind": "Content",
                  "text": ", element: "
                },
                {
                  "kind": "Content",
                  "text": "object"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "xml",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "element",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                }
              ]
            }
          ],
          "extendsTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "Class",
          "canonicalReference": "@xpack/doxygen2docusaurus!TableOfContentsDataModel:class",
          "docComment": "/**\n * Concrete data model class for table of contents elements.\n *\n * @remarks\n *\n * Represents individual table of contents elements found within Doxygen compound XML structures. This class extends the abstract base to provide specific handling for 'tableofcontents' elements, which define the structural navigation and organisation of documentation content. Each table of contents provides hierarchical access to documentation sections and subsections.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class TableOfContentsDataModel extends "
            },
            {
              "kind": "Reference",
              "text": "AbstractTableOfContentsType",
              "canonicalReference": "@xpack/doxygen2docusaurus!AbstractTableOfContentsType:class"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "src/doxygen/data-model/compounds/tableofcontentstype-dm.ts",
          "releaseTag": "Public",
          "isAbstract": false,
          "name": "TableOfContentsDataModel",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Constructor",
              "canonicalReference": "@xpack/doxygen2docusaurus!TableOfContentsDataModel:constructor(1)",
              "docComment": "/**\n * Constructs a new TableOfContentsDataModel instance from XML data.\n *\n * @remarks\n *\n * Initialises the table of contents data model by parsing the provided XML element as a 'tableofcontents' element type. The constructor delegates to the parent class for common table of contents processing whilst specifying the element name for proper XML structure handling.\n *\n * @param xml - The Doxygen XML parser instance for processing XML elements\n *\n * @param element - The XML element containing the table of contents data\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor(xml: "
                },
                {
                  "kind": "Reference",
                  "text": "DoxygenXmlParser",
                  "canonicalReference": "@xpack/doxygen2docusaurus!DoxygenXmlParser:class"
                },
                {
                  "kind": "Content",
                  "text": ", element: "
                },
                {
                  "kind": "Content",
                  "text": "object"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "xml",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "element",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                }
              ]
            }
          ],
          "extendsTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "Class",
          "canonicalReference": "@xpack/doxygen2docusaurus!TemplateParamListDataModel:class",
          "docComment": "/**\n * Concrete data model class for template parameter list elements.\n *\n * @remarks\n *\n * Represents individual template parameter list elements found within Doxygen compound XML structures. This class extends the abstract base to provide specific handling for 'templateparamlist' elements, which define the template parameters for templated constructs such as template classes, template functions, and template variables. Each template parameter list contains parameter definitions that specify the generic types and values used in template instantiation.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class TemplateParamListDataModel extends "
            },
            {
              "kind": "Reference",
              "text": "AbstractTemplateParamListType",
              "canonicalReference": "@xpack/doxygen2docusaurus!AbstractTemplateParamListType:class"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "src/doxygen/data-model/compounds/templateparamlisttype-dm.ts",
          "releaseTag": "Public",
          "isAbstract": false,
          "name": "TemplateParamListDataModel",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Constructor",
              "canonicalReference": "@xpack/doxygen2docusaurus!TemplateParamListDataModel:constructor(1)",
              "docComment": "/**\n * Constructs a new TemplateParamListDataModel instance from XML data.\n *\n * @remarks\n *\n * Initialises the template parameter list data model by parsing the provided XML element as a 'templateparamlist' element type. The constructor delegates to the parent class for common parameter list processing whilst specifying the element name for proper XML structure handling.\n *\n * @param xml - The Doxygen XML parser instance for processing XML elements\n *\n * @param element - The XML element containing the template parameter list data\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor(xml: "
                },
                {
                  "kind": "Reference",
                  "text": "DoxygenXmlParser",
                  "canonicalReference": "@xpack/doxygen2docusaurus!DoxygenXmlParser:class"
                },
                {
                  "kind": "Content",
                  "text": ", element: "
                },
                {
                  "kind": "Content",
                  "text": "object"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "xml",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "element",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                }
              ]
            }
          ],
          "extendsTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "Class",
          "canonicalReference": "@xpack/doxygen2docusaurus!TocSectDataModel:class",
          "docComment": "/**\n * Concrete data model class for table of contents section elements.\n *\n * @remarks\n *\n * Represents individual table of contents section elements found within Doxygen XML structures. This class extends the abstract base to provide specific handling for 'tocsect' elements, which define named sections within the table of contents hierarchy. Each section includes a name, reference, and potentially nested subsections for comprehensive documentation navigation.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class TocSectDataModel extends "
            },
            {
              "kind": "Reference",
              "text": "AbstractTableOfContentsKindType",
              "canonicalReference": "@xpack/doxygen2docusaurus!AbstractTableOfContentsKindType:class"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "src/doxygen/data-model/compounds/tableofcontentstype-dm.ts",
          "releaseTag": "Public",
          "isAbstract": false,
          "name": "TocSectDataModel",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Constructor",
              "canonicalReference": "@xpack/doxygen2docusaurus!TocSectDataModel:constructor(1)",
              "docComment": "/**\n * Constructs a new TocSectDataModel instance from XML data.\n *\n * @remarks\n *\n * Initialises the table of contents section data model by parsing the provided XML element as a 'tocsect' element type. The constructor delegates to the parent class for common section processing whilst specifying the element name for proper XML structure handling.\n *\n * @param xml - The Doxygen XML parser instance for processing XML elements\n *\n * @param element - The XML element containing the table of contents section data\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor(xml: "
                },
                {
                  "kind": "Reference",
                  "text": "DoxygenXmlParser",
                  "canonicalReference": "@xpack/doxygen2docusaurus!DoxygenXmlParser:class"
                },
                {
                  "kind": "Content",
                  "text": ", element: "
                },
                {
                  "kind": "Content",
                  "text": "object"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "xml",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "element",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                }
              ]
            }
          ],
          "extendsTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "Class",
          "canonicalReference": "@xpack/doxygen2docusaurus!TypeConstraintDataModel:class",
          "docComment": "/**\n * Data model for type constraint elements within documentation content.\n *\n * @remarks\n *\n * Represents type constraint elements that contain template and generic type constraint information within source code documentation. This implementation processes Doxygen's typeconstraint elements, which contain mixed text and reference content describing constraints applied to template parameters and generic types.\n *\n * The linked text structure enables cross-references to constraint types, concepts, and related template documentation within constraint expressions.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class TypeConstraintDataModel extends "
            },
            {
              "kind": "Reference",
              "text": "AbstractLinkedTextType",
              "canonicalReference": "@xpack/doxygen2docusaurus!AbstractLinkedTextType:class"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "src/doxygen/data-model/compounds/linkedtexttype-dm.ts",
          "releaseTag": "Public",
          "isAbstract": false,
          "name": "TypeConstraintDataModel",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Constructor",
              "canonicalReference": "@xpack/doxygen2docusaurus!TypeConstraintDataModel:constructor(1)",
              "docComment": "/**\n * Constructs a TypeConstraintDataModel from XML element data.\n *\n * @remarks\n *\n * This constructor delegates to the parent AbstractLinkedTextType to handle linked text processing whilst identifying the element as 'typeconstraint' for proper XML schema compliance and type constraint content processing.\n *\n * @param xml - The Doxygen XML parser instance for processing XML content\n *\n * @param element - The XML element object containing the type constraint data\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor(xml: "
                },
                {
                  "kind": "Reference",
                  "text": "DoxygenXmlParser",
                  "canonicalReference": "@xpack/doxygen2docusaurus!DoxygenXmlParser:class"
                },
                {
                  "kind": "Content",
                  "text": ", element: "
                },
                {
                  "kind": "Content",
                  "text": "object"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "xml",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "element",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                }
              ]
            }
          ],
          "extendsTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "Class",
          "canonicalReference": "@xpack/doxygen2docusaurus!TypeDataModel:class",
          "docComment": "/**\n * Data model for type elements within documentation content.\n *\n * @remarks\n *\n * Represents type elements that contain type information and declarations within source code documentation. This implementation processes Doxygen's type elements, which contain mixed text and reference content describing data types, including primitive types, class names, template parameters, and complex type expressions.\n *\n * The linked text structure enables cross-references to type definitions and related documentation within the type expressions.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class TypeDataModel extends "
            },
            {
              "kind": "Reference",
              "text": "AbstractLinkedTextType",
              "canonicalReference": "@xpack/doxygen2docusaurus!AbstractLinkedTextType:class"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "src/doxygen/data-model/compounds/linkedtexttype-dm.ts",
          "releaseTag": "Public",
          "isAbstract": false,
          "name": "TypeDataModel",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Constructor",
              "canonicalReference": "@xpack/doxygen2docusaurus!TypeDataModel:constructor(1)",
              "docComment": "/**\n * Constructs a TypeDataModel from XML element data.\n *\n * @remarks\n *\n * This constructor delegates to the parent AbstractLinkedTextType to handle linked text processing whilst identifying the element as 'type' for proper XML schema compliance and type information content processing.\n *\n * @param xml - The Doxygen XML parser instance for processing XML content\n *\n * @param element - The XML element object containing the type data\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor(xml: "
                },
                {
                  "kind": "Reference",
                  "text": "DoxygenXmlParser",
                  "canonicalReference": "@xpack/doxygen2docusaurus!DoxygenXmlParser:class"
                },
                {
                  "kind": "Content",
                  "text": ", element: "
                },
                {
                  "kind": "Content",
                  "text": "object"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "xml",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "element",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                }
              ]
            }
          ],
          "extendsTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "@xpack/doxygen2docusaurus!XmlElement:interface",
          "docComment": "/**\n * Represents a generic XML element in the parsed structure.\n *\n * @remarks\n *\n * Defines the structure used by the XML parser for representing parsed XML elements, including text content, attributes, and child elements. Each element maps keys to arrays of child elements.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface XmlElement "
            }
          ],
          "fileUrlPath": "src/doxygen/data-model/types.ts",
          "releaseTag": "Public",
          "name": "XmlElement",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@xpack/doxygen2docusaurus!XmlElement#\":@\":member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "':@'?: "
                },
                {
                  "kind": "Reference",
                  "text": "Record",
                  "canonicalReference": "!Record:type"
                },
                {
                  "kind": "Content",
                  "text": "<string, string | number | boolean>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "\":@\"",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@xpack/doxygen2docusaurus!XmlElement#\"#text\":member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "'#text': "
                },
                {
                  "kind": "Content",
                  "text": "string | number | boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "\"#text\"",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "CallSignature",
              "canonicalReference": "@xpack/doxygen2docusaurus!XmlElement:call(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "(key: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "XmlElement",
                  "canonicalReference": "@xpack/doxygen2docusaurus!XmlElement:interface"
                },
                {
                  "kind": "Content",
                  "text": "[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 5
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "key",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ]
            }
          ],
          "extendsTokenRanges": []
        }
      ]
    }
  ]
}
